,question,student answer,model answer,score,correct,DocToVec,TF-IDF,Bert,Roberta
0,What is the role of a prototype program in problem solving?,High risk problems are address in the prototype program to make sure that the program is feasible. A prototype may also be used to show a company that the software can be possibly programmed.,To simulate the behaviour of portions of the desired software product.,3.5,0,0.8705798983573914,0.22360679774997896,0.706611156463623,0.4472311735153198
1,What is the role of a prototype program in problem solving?,To simulate portions of the desired final product with a quick and easy program that does a small specific job. It is a way to help see what the problem is and how you may solve it in the final project.,To simulate the behaviour of portions of the desired software product.,5.0,1,0.8852213621139526,0.4472135954999579,0.6565390825271606,0.6717796325683594
2,What is the role of a prototype program in problem solving?,A prototype program simulates the behaviors of portions of the desired software product to allow for error checking.,To simulate the behaviour of portions of the desired software product.,4.0,1,0.9638946652412415,0.6030226891555273,0.8307504653930664,0.7719227075576782
3,What is the role of a prototype program in problem solving?,"Defined in the Specification phase a prototype stimulates the behavior of portions of the desired software product. Meaning, the role of a prototype is a temporary solution until the program itself is refined to be used extensively in problem solving.",To simulate the behaviour of portions of the desired software product.,5.0,1,0.925590991973877,0.4170288281141496,0.7725630402565002,0.7311229705810547
4,What is the role of a prototype program in problem solving?,It is used to let the users have a first idea of the completed program and allow the clients to evaluate the program. This can generate much feedback including software specifications and project estimations of the total project.,To simulate the behaviour of portions of the desired software product.,3.0,0,0.9007734656333923,0.2085144140570748,0.7100813388824463,0.44618678092956543
5,What is the role of a prototype program in problem solving?,To find problem and errors in a program before it is finalized,To simulate the behaviour of portions of the desired software product.,2.0,0,0.8205159306526184,0.0,0.66273033618927,0.38526368141174316
6,What is the role of a prototype program in problem solving?,"To address major issues in the creation of the program. There is no way to account for all possible bugs in the program, but it is possible to prove the program is tangible.",To simulate the behaviour of portions of the desired software product.,2.5,0,0.8720759153366089,0.0,0.4457964599132538,0.4267599582672119
7,What is the role of a prototype program in problem solving?,you can break the whole program into prototype programs to simulate parts of the final program,To simulate the behaviour of portions of the desired software product.,5.0,1,0.8812569379806519,0.31622776601683794,0.6111840009689331,0.6115325689315796
8,What is the role of a prototype program in problem solving?,To provide an example or model of how the finished program should perfom. Provides forsight of some of the challanges that would be encountered. Provides opportunity To introduce changes To the finished program.,To simulate the behaviour of portions of the desired software product.,3.5,0,0.891954779624939,0.0,0.6715261340141296,0.532198429107666
9,What is the role of a prototype program in problem solving?,Simulating the behavior of only a portion of the desired software product.,To simulate the behaviour of portions of the desired software product.,5.0,1,0.9803491830825806,0.7071067811865477,0.696270763874054,0.8739609122276306
10,What is the role of a prototype program in problem solving?,A program that stimulates the behavior of portions of the desired software product.,To simulate the behaviour of portions of the desired software product.,5.0,1,0.9662596583366394,0.7559289460184546,0.9415532350540161,0.8045470714569092
11,What is the role of a prototype program in problem solving?,A program that simulates the behavior of portions of the desired software product.,To simulate the behaviour of portions of the desired software product.,5.0,1,0.9773700833320618,0.7559289460184546,0.9859892725944519,0.9476875066757202
12,What is the role of a prototype program in problem solving?,To lay out the basics and give you a starting point in the actual problem solving.,To simulate the behaviour of portions of the desired software product.,2.0,0,0.8507161140441895,0.0,0.5932462215423584,0.3287207782268524
13,What is the role of a prototype program in problem solving?,To simulate problem solving for parts of the problem,To simulate the behaviour of portions of the desired software product.,4.5,1,0.857544481754303,0.37796447300922725,0.7654141187667847,0.6809093952178955
14,What is the role of a prototype program in problem solving?,A prototype program provides a basic groundwork from which to further enhance and improve a solution to a problem.,To simulate the behaviour of portions of the desired software product.,2.0,0,0.8544822335243225,0.0,0.717318058013916,0.43964433670043945
15,What is the role of a prototype program in problem solving?,"A prototype program is a part of the Specification phase of Software Problem Solvin. It is employed to illustrate how the key problem or problems will be solved in a program, and sometimes serves as a base program to expand upon.",To simulate the behaviour of portions of the desired software product.,4.5,1,0.8848768472671509,0.19611613513818407,0.8048747777938843,0.5040223598480225
16,What is the role of a prototype program in problem solving?,Program that simulates the behavior of portions of the desired software product,To simulate the behaviour of portions of the desired software product.,5.0,1,0.9763349294662476,0.7559289460184546,0.9848302006721497,0.9323389530181885
17,What is the role of a prototype program in problem solving?,it provides a limited proof of concept to verify with the client before actually programming the whole application.,To simulate the behaviour of portions of the desired software product.,2.0,0,0.8943374752998352,0.0,0.5838162899017334,0.5589452981948853
18,What is the role of a prototype program in problem solving?,It tests the main function of the program while leaving out the finer details.,To simulate the behaviour of portions of the desired software product.,2.0,0,0.8903520107269287,0.0,0.6075705289840698,0.3721432387828827
19,What is the role of a prototype program in problem solving?,To get early feedback from users in early stages of development. To show users a first idea of what the program will do or look like. To make sure the program will meet requirements before intense programming begins.,To simulate the behaviour of portions of the desired software product.,2.5,0,0.8645707368850708,0.0,0.627877950668335,0.3682177662849426
20,What is the role of a prototype program in problem solving?,it simulates the behavior of portions of the desired software product,To simulate the behaviour of portions of the desired software product.,5.0,1,0.9879764914512634,0.8164965809277261,0.988744854927063,0.9482405781745911
21,What is the role of a prototype program in problem solving?,It simulates the behavior of portions of the desired software product.,To simulate the behaviour of portions of the desired software product.,5.0,1,0.9919111728668213,0.8164965809277261,0.990136981010437,0.9511635899543762
22,What is the role of a prototype program in problem solving?,A prototype program is used in problem solving to collect data for the problem.,To simulate the behaviour of portions of the desired software product.,1.5,0,0.8582506775856018,0.0,0.7594175338745117,0.45598241686820984
23,What is the role of a prototype program in problem solving?,To ease the understanding of problem under discussion and to ease the understanding of the program itself,To simulate the behaviour of portions of the desired software product.,2.5,0,0.893426239490509,0.0,0.6107443571090698,0.42145735025405884
24,What is the role of a prototype program in problem solving?,it simulates the behavior of portions of the desired software product,To simulate the behaviour of portions of the desired software product.,5.0,1,0.9879764914512634,0.8164965809277261,0.988744854927063,0.9482405781745911
25,What is the role of a prototype program in problem solving?,The role of a prototype program is to help spot key problems that may arise during the actual programing.,To simulate the behaviour of portions of the desired software product.,2.0,0,0.8873105645179749,0.0,0.7513245344161987,0.4999035894870758
26,What is the role of a prototype program in problem solving?,"the prototype program gives a general idea of what the end product will do, without the time and effort to write out the entire program.",To simulate the behaviour of portions of the desired software product.,3.0,0,0.8793932795524597,0.26726124191242445,0.5126590728759766,0.46960535645484924
27,What is the role of a prototype program in problem solving?,to show that a certain part of the program works as it is supposed to,To simulate the behaviour of portions of the desired software product.,3.0,0,0.8509567379951477,0.0,0.6565069556236267,0.5735435485839844
28,What is the role of a prototype program in problem solving?,"Prototype programming is an approach to programming that enables one to take an organized approach to developing an effective program with minimal errors and a strategic pattern when solving a problem. i. e. book gave an example of a costumer withdrawing money from a bank, the approach that was taking on a pseudo code level during the OOA or Design lvl before proceeding into creating a solution.",To simulate the behaviour of portions of the desired software product.,2.5,0,0.8749246597290039,0.0,0.47428280115127563,0.5165784358978271
29,What stages in the software life cycle are influenced by the testing stage?,Refining and possibly the design if the testing phase reveals problems in the design. Production can be affected if the program is unworkable in its current form which will lead to a later production time than originally estimated. Also affects coding because after testing you may need to rewrite the code for the program to remove errors.,The testing stage can influence both the coding stagephase 5and the solution refinement stagephase 7,3.5,0,0.9312421679496765,0.348742916231458,0.6048382520675659,0.41936999559402466
30,What stages in the software life cycle are influenced by the testing stage?,The implementation phase and the maintenance phase are effected,The testing stage can influence both the coding stagephase 5and the solution refinement stagephase 7,4.0,1,0.8572371006011963,0.0,0.5319614410400391,0.3409262001514435
31,What stages in the software life cycle are influenced by the testing stage?,"Verification, coding, refining the solution and maintenance are all influenced by the testing stage.",The testing stage can influence both the coding stagephase 5and the solution refinement stagephase 7,4.5,1,0.9220176339149475,0.7071067811865476,0.7140584588050842,0.5432881116867065
32,What stages in the software life cycle are influenced by the testing stage?,"In RUP the stages in the software life cycle are influenced by the testing stage is: Elaboration phase-refined progject vision, iterative devilopment of core system, development of system requirements, more accurate time and cost estimates. Construction phase-iterative development of remaining system. Transition phase-testing and deployment of the system.",The testing stage can influence both the coding stagephase 5and the solution refinement stagephase 7,3.0,0,0.9179046154022217,0.3234983196103153,0.7034696340560913,0.5774344801902771
33,What stages in the software life cycle are influenced by the testing stage?,"Refining the solution, Production and Maintenance are all influenced by the Testing stage.",The testing stage can influence both the coding stagephase 5and the solution refinement stagephase 7,3.0,0,0.9279013276100159,0.6546536707079773,0.6948387622833252,0.4995192587375641
34,What stages in the software life cycle are influenced by the testing stage?,"Elaboration, Construction, and Transition are all affected by testing",The testing stage can influence both the coding stagephase 5and the solution refinement stagephase 7,2.0,0,0.8359512686729431,0.447213595499958,0.6573014855384827,0.4209325313568115
35,What stages in the software life cycle are influenced by the testing stage?,"Refining, Production, Maintenance",The testing stage can influence both the coding stagephase 5and the solution refinement stagephase 7,3.5,0,0.6274005770683289,0.0,0.4695637822151184,0.20639188587665558
36,What stages in the software life cycle are influenced by the testing stage?,Refining the solution,The testing stage can influence both the coding stagephase 5and the solution refinement stagephase 7,4.0,1,0.7979790568351746,0.7071067811865476,0.5464603900909424,0.29609501361846924
37,What stages in the software life cycle are influenced by the testing stage?,Verification Debugging,The testing stage can influence both the coding stagephase 5and the solution refinement stagephase 7,2.0,0,0.3606276512145996,0.0,0.4270150363445282,0.31569018959999084
38,What stages in the software life cycle are influenced by the testing stage?,Refining and Coding,The testing stage can influence both the coding stagephase 5and the solution refinement stagephase 7,5.0,1,0.6941303610801697,0.7071067811865476,0.5619814395904541,0.3603789508342743
39,What stages in the software life cycle are influenced by the testing stage?,"The second half of the Elaboration phase, Construction phase, and the Transition phase.",The testing stage can influence both the coding stagephase 5and the solution refinement stagephase 7,2.5,0,0.8611999154090881,0.0,0.4316074848175049,0.21143203973770142
40,What stages in the software life cycle are influenced by the testing stage?,"The refining step, the production step, and the maintenance stage.",The testing stage can influence both the coding stagephase 5and the solution refinement stagephase 7,3.5,0,0.8896146416664124,0.3535533905932738,0.578457236289978,0.25715991854667664
41,What stages in the software life cycle are influenced by the testing stage?,"Elaboration, Construction, Transition",The testing stage can influence both the coding stagephase 5and the solution refinement stagephase 7,2.0,0,0.6503089070320129,0.0,0.4555119574069977,0.1364799439907074
42,What stages in the software life cycle are influenced by the testing stage?,Refining.,The testing stage can influence both the coding stagephase 5and the solution refinement stagephase 7,3.0,0,0.5185661315917969,0.0,0.42369344830513,0.17844508588314056
43,What stages in the software life cycle are influenced by the testing stage?,"The testing stage has a direct influence on the final version of a program, being as it is the debugging and finalization of a software revision.",The testing stage can influence both the coding stagephase 5and the solution refinement stagephase 7,1.5,0,0.9107487201690674,0.5222329678670936,0.6455488801002502,0.5927558541297913
44,What stages in the software life cycle are influenced by the testing stage?,"Directly: Refining, coding. Because Refining is right before the Testing Phase and Coding is right after the Testing Phase. Indirectly: Production, Maintenance. Because Refining occurs before these last two stages in the Software Life Cycle.",The testing stage can influence both the coding stagephase 5and the solution refinement stagephase 7,5.0,1,0.9156618118286133,0.48507125007266594,0.49646615982055664,0.3825833797454834
45,What stages in the software life cycle are influenced by the testing stage?,"Testing, refining, production, and maintenance.",The testing stage can influence both the coding stagephase 5and the solution refinement stagephase 7,3.5,0,0.7086888551712036,0.5,0.5425854921340942,0.33934909105300903
46,What stages in the software life cycle are influenced by the testing stage?,"Depending on how the work is done, Testing is spread throughout the process as to prevent errors from showing up later on due to lack of foresight.",The testing stage can influence both the coding stagephase 5and the solution refinement stagephase 7,1.5,0,0.8990190625190735,0.30151134457776363,0.5610889196395874,0.40266069769859314
47,What stages in the software life cycle are influenced by the testing stage?,"Elaboration, construction, and transition.",The testing stage can influence both the coding stagephase 5and the solution refinement stagephase 7,2.5,0,0.7136061787605286,0.0,0.4765530228614807,0.1528005599975586
48,What stages in the software life cycle are influenced by the testing stage?,"All stages are influenced except setting the program requirements. If a test fails, it can change the whole design, implementation, etc of a program as well as the final outcome.",The testing stage can influence both the coding stagephase 5and the solution refinement stagephase 7,1.5,0,0.9115035533905029,0.0,0.5663167238235474,0.2981628179550171
49,What stages in the software life cycle are influenced by the testing stage?,"Refining, production, and maintenance",The testing stage can influence both the coding stagephase 5and the solution refinement stagephase 7,3.0,0,0.6838518381118774,0.0,0.4867582321166992,0.21700537204742432
50,What stages in the software life cycle are influenced by the testing stage?,coding and refining,The testing stage can influence both the coding stagephase 5and the solution refinement stagephase 7,5.0,1,0.6941303610801697,0.7071067811865476,0.5600202083587646,0.3953332304954529
51,What stages in the software life cycle are influenced by the testing stage?,"refining, production, maintenance.",The testing stage can influence both the coding stagephase 5and the solution refinement stagephase 7,3.5,0,0.6517458558082581,0.0,0.4603993892669678,0.21536873281002045
52,What stages in the software life cycle are influenced by the testing stage?,"Removing logical errors, testing for valid data, random data and actual data.",The testing stage can influence both the coding stagephase 5and the solution refinement stagephase 7,1.0,0,0.7737879753112793,0.25,0.5029299259185791,0.2916141748428345
53,What stages in the software life cycle are influenced by the testing stage?,1-specification 2-design 3-risk analysis 4-verification 5-coding 6-testing 7-refining 8-production 9-maintenance,The testing stage can influence both the coding stagephase 5and the solution refinement stagephase 7,2.5,0,0.5272462368011475,0.44721359549995804,0.6440824866294861,0.540782630443573
54,What stages in the software life cycle are influenced by the testing stage?,"Refining stage, Production stage, and Maintenance stage.",The testing stage can influence both the coding stagephase 5and the solution refinement stagephase 7,3.5,0,0.7782896161079407,0.8660254037844387,0.5702740550041199,0.2544383406639099
55,What stages in the software life cycle are influenced by the testing stage?,Testing could affect all parts of the life cycle; it could make you go back to specification if it does not test well.,The testing stage can influence both the coding stagephase 5and the solution refinement stagephase 7,2.0,0,0.8686739802360535,0.3333333333333333,0.6704766750335693,0.44961977005004883
56,What stages in the software life cycle are influenced by the testing stage?,coding,The testing stage can influence both the coding stagephase 5and the solution refinement stagephase 7,3.0,0,0.4810519814491272,1.0,0.446682870388031,0.35572516918182373
57,What stages in the software life cycle are influenced by the testing stage?,"The Individual components and steps such as analysis, design, and implementing code as well as the entire system are tested for execution of the requirements identified during the analysis stage. i. e. Main output",The testing stage can influence both the coding stagephase 5and the solution refinement stagephase 7,1.5,0,0.9316397309303284,0.23570226039551587,0.6225693225860596,0.6140687465667725
58,What are the main advantages associated with object-oriented programming?,"Modularability, the ability to reuse parts of the program later in another program sometimes with completely different goals for the program. Also it makes it easier to debug code by dividing up the code into classes that each do a specific job and when the program fails at one job you only have one class to debug. Good for security purposes because it allows you to let someone use a program which sorts lists without having to give them access to the source code. ALso allows you to use inheritance and polymorphism.",Abstraction and reusability.,4.5,1,0.7005081176757812,0.0,0.2840316891670227,0.45765578746795654
59,What are the main advantages associated with object-oriented programming?,"This type of programming is more flexible, making it easier to add and modify the program. It is also a type of a fail safe program, you check each individual module. This eliminates redundant code and makes the program easier to read for other programmers. When debugging the program it is easier to track down the source of a problem within a module rather than a 2 million line program.",Abstraction and reusability.,5.0,1,0.7020814418792725,0.0,0.2532978355884552,0.24685688316822052
60,What are the main advantages associated with object-oriented programming?,The main advantages to object-oriented programming are that existing classes can be reused and program maintenance and verification are easier.,Abstraction and reusability.,3.5,0,0.7706239819526672,0.0,0.45925652980804443,0.366443008184433
61,What are the main advantages associated with object-oriented programming?,The advantages is that OOP allows us to build classes of objects. Three principles that make up OOP are: Encapsulation-Objects combine data and operations. Inheritance-Classes can inherit properties from other classes. Polymorphism-Objects can determine appropriate operations at execution time.,Abstraction and reusability.,2.5,0,0.7377795577049255,0.0,0.4507761597633362,0.15677358210086823
62,What are the main advantages associated with object-oriented programming?,Some advantages are existing classes can be reused and program maintenance and verification are easier to accomplish.,Abstraction and reusability.,3.5,0,0.7647371888160706,0.0,0.4723355770111084,0.35578641295433044
63,What are the main advantages associated with object-oriented programming?,Object oriented programming allows programmers to use an object with classes that can be changed and manipulated while not affecting the entire object at once. The classes all hold attrubutes that affect the object.,Abstraction and reusability.,1.0,0,0.7060496807098389,0.0,0.45100241899490356,0.19586898386478424
64,What are the main advantages associated with object-oriented programming?,"Reusable components, Extensibility, Maintainability, it reduces large problems into smaller more manageable problems.",Abstraction and reusability.,4.0,1,0.702744722366333,0.0,0.5775265097618103,0.44886529445648193
65,What are the main advantages associated with object-oriented programming?,Encapsulation-objects combine data and operations Inheritance-classes can inherit properties from other classes Polymorphism-Objects can determine appropriate operations at execution time,Abstraction and reusability.,2.5,0,0.6889042258262634,0.0,0.43530088663101196,0.41087403893470764
66,What are the main advantages associated with object-oriented programming?,Easier to debugg Reusability,Abstraction and reusability.,3.0,0,0.747631311416626,0.5773502691896258,0.6092617511749268,0.6741033792495728
67,What are the main advantages associated with object-oriented programming?,Re-usability and ease of maintenance,Abstraction and reusability.,4.0,1,0.6658138632774353,0.0,0.630195140838623,0.5177814960479736
68,What are the main advantages associated with object-oriented programming?,"One of the main advantages is you can hide inner details a technique known by encapsulation. Objects combine the data and operations but you cannot see how it works. Another advantage is you can reuse classes that have been defined earlier in the program, a method known as inheritance. Finally another advantage is objects can determine appropriate operations at execution time a technique known as polymorphism.",Abstraction and reusability.,5.0,1,0.7173733115196228,0.0,0.4038100242614746,0.20053578913211823
69,What are the main advantages associated with object-oriented programming?,"Existing classes can be reused, and program maintenance and verification are easier.",Abstraction and reusability.,3.5,0,0.78285813331604,0.0,0.5112013816833496,0.4036361277103424
70,What are the main advantages associated with object-oriented programming?,Using different modules allows for easier debugging,Abstraction and reusability.,2.0,0,0.6161443591117859,0.0,0.4986540675163269,0.34625887870788574
71,What are the main advantages associated with object-oriented programming?,"Data encapsulation concept, the use of functions or methods to manipulate data.",Abstraction and reusability.,3.5,0,0.73553466796875,0.0,0.6235942840576172,0.2615897059440613
72,What are the main advantages associated with object-oriented programming?,"Modular, reusable code, allowing faster deployment of solutions, and a more general view of a solution.",Abstraction and reusability.,4.5,1,0.7304800152778625,0.0,0.5000188946723938,0.2832717299461365
73,What are the main advantages associated with object-oriented programming?,"Coding and Debugging programs are usually easier, as either the compiler will specify the object that is working incorrectly, or the function an object was assigned to will be easier to identify. The code itself also looks more organized and is easier to read and will help to avoid redundant coding. Post-programming maintenance is also easier. Also, modules can be reused several times in other programs without too much hassle. Abstraction is the art of breaking down one big problem into smaller, simpler problems and solving them. Many of the smaller problems are shared between unique complex problems, and creating modules to these solve these smaller repeated problems can save time when you encounter them again.",Abstraction and reusability.,5.0,1,0.7397185564041138,0.10259783520851538,0.27514582872390747,0.21261467039585114
74,What are the main advantages associated with object-oriented programming?,"Variables can remain private. The code is easily modified and reusable, as well as easily implemented. Not to mention easier to read and follow along as an observer.",Abstraction and reusability.,4.5,1,0.7204779982566833,0.0,0.48266974091529846,0.28908443450927734
75,What are the main advantages associated with object-oriented programming?,Data Abstraction and control ... it is possible to isolate elements from other elements a lot easier and prevent tampering of data.,Abstraction and reusability.,3.5,0,0.7579702734947205,0.25,0.52420973777771,0.2918286919593811
76,What are the main advantages associated with object-oriented programming?,Encapsulation Objects use operations without knowing how the operation works. Inheritance cuts redundancy by reusing earlier classes. Polymorphism objects select the correct operation to use in the situation.,Abstraction and reusability.,4.0,1,0.756626546382904,0.0,0.4117993712425232,0.2788747251033783
77,What are the main advantages associated with object-oriented programming?,"They make it easier to reuse and adapt previously written code and they separate complex programs into smaller, easier to understand classes.",Abstraction and reusability.,4.5,1,0.752007007598877,0.0,0.381774365901947,0.30009371042251587
78,What are the main advantages associated with object-oriented programming?,"Existing classes can be reused, Program maintenance and verification are easier",Abstraction and reusability.,3.5,0,0.7519401907920837,0.0,0.5222172141075134,0.38838374614715576
79,What are the main advantages associated with object-oriented programming?,"Existing classes can be feused, Program maintenance and verification are easier",Abstraction and reusability.,3.5,0,0.6959791779518127,0.0,0.510301947593689,0.38134050369262695
80,What are the main advantages associated with object-oriented programming?,"the main advantages to object-oriented programming is data abstraction, easier maintenance, and re-usability.",Abstraction and reusability.,5.0,1,0.7729560732841492,0.316227766016838,0.5071163773536682,0.4406977891921997
81,What are the main advantages associated with object-oriented programming?,Existing classes can be reused Program maintenance and verifications are easy,Abstraction and reusability.,4.0,1,0.7443329691886902,0.0,0.4700985848903656,0.360368549823761
82,What are the main advantages associated with object-oriented programming?,1-Existing classes can be reused 2-Program maintenance and verification are easier,Abstraction and reusability.,3.5,0,0.7494135499000549,0.0,0.5285698771476746,0.36535051465034485
83,What are the main advantages associated with object-oriented programming?,Information can be hidden. It is easier to debug. Programming is easier and more manageable.,Abstraction and reusability.,3.5,0,0.7249315977096558,0.0,0.4899311065673828,0.2968790829181671
84,What are the main advantages associated with object-oriented programming?,"Existing classes can be reused, program maintenance and verification are easier.",Abstraction and reusability.,3.5,0,0.7738436460494995,0.0,0.5270317792892456,0.4014891982078552
85,What are the main advantages associated with object-oriented programming?,existing classes can be reused program maintenance and verification are easier,Abstraction and reusability.,3.5,0,0.7449276447296143,0.0,0.49784862995147705,0.38797956705093384
86,What are the main advantages associated with object-oriented programming?,"Well for one encapsulation the values of the variables inside an object are private, unless methods are written to pass info outside of the object. As well as Inheritance where each subclass inherits all variables and methods of its super class. Example in the book included obj clock and how obj alarm would still use clock from the first class.",Abstraction and reusability.,3.5,0,0.702110767364502,0.0,0.2576764225959778,0.260810524225235
87,Where do C plus plus programs begin to execute?,At function int main,At the main function.,5.0,1,0.8506209850311279,0.8164965809277261,0.8659298419952393,0.7775312662124634
88,Where do C plus plus programs begin to execute?,the Function main .,At the main function.,5.0,1,0.9539348483085632,1.0000000000000002,0.9302659034729004,0.9024001955986023
89,Where do C plus plus programs begin to execute?,c plus plus programs begin to execute in the main method.,At the main function.,5.0,1,0.81886887550354,0.3333333333333333,0.6779720783233643,0.3748191297054291
90,Where do C plus plus programs begin to execute?,A C plus plus program will begin to execute at the main function.,At the main function.,5.0,1,0.8725308775901794,0.4714045207910317,0.7006275653839111,0.44029125571250916
91,Where do C plus plus programs begin to execute?,They begin in the main function.,At the main function.,5.0,1,0.9086962342262268,0.8164965809277261,0.9544292092323303,0.8217281103134155
92,Where do C plus plus programs begin to execute?,Int main,At the main function.,5.0,1,0.5840663909912109,0.7071067811865476,0.7722105979919434,0.6221761107444763
93,Where do C plus plus programs begin to execute?,main method,At the main function.,5.0,1,0.6948290467262268,0.7071067811865476,0.8685120344161987,0.71262526512146
94,Where do C plus plus programs begin to execute?,in the testing phase,At the main function.,0.0,0,0.6968209743499756,0.0,0.7041457295417786,0.3447977900505066
95,Where do C plus plus programs begin to execute?,At the MAIN function,At the main function.,5.0,1,0.9710543751716614,1.0000000000000002,0.9847412109375,0.9906271696090698
96,Where do C plus plus programs begin to execute?,main,At the main function.,5.0,1,0.719275712966919,1.0,0.8037185072898865,0.7480969429016113
97,Where do C plus plus programs begin to execute?,They begin to execute at the funcion main .,At the main function.,5.0,1,0.844614565372467,0.5,0.7841257452964783,0.3880886435508728
98,Where do C plus plus programs begin to execute?,The main method.,At the main function.,5.0,1,0.8692664504051208,0.7071067811865476,0.8917909860610962,0.7253811359405518
99,Where do C plus plus programs begin to execute?,At the root,At the main function.,2.5,0,0.7923786044120789,0.0,0.6761149168014526,0.3683399558067322
100,Where do C plus plus programs begin to execute?,In the main function.,At the main function.,5.0,1,0.9425721764564514,1.0000000000000002,0.9659816026687622,0.9661168456077576
101,Where do C plus plus programs begin to execute?,C plus plus programs begin execution at main.,At the main function.,5.0,1,0.8105785846710205,0.3535533905932738,0.6871019601821899,0.31469297409057617
102,Where do C plus plus programs begin to execute?,In the Main function ..?,At the main function.,5.0,1,0.8981720209121704,1.0000000000000002,0.9498646259307861,0.9484442472457886
103,Where do C plus plus programs begin to execute?,At the main  function,At the main function.,5.0,1,0.9710544347763062,1.0000000000000002,0.9847412109375,0.9220675826072693
104,Where do C plus plus programs begin to execute?,The main function.,At the main function.,5.0,1,0.9539348483085632,1.0000000000000002,0.9448140859603882,0.9492999911308289
105,Where do C plus plus programs begin to execute?,The function main,At the main function.,5.0,1,0.8996089696884155,1.0000000000000002,0.9176178574562073,0.8968089818954468
106,Where do C plus plus programs begin to execute?,"After loading the required include statements and libraries, the main method begins the execution.",At the main function.,5.0,1,0.8451763987541199,0.3333333333333333,0.5573606491088867,0.2629655599594116
107,Where do C plus plus programs begin to execute?,main function,At the main function.,5.0,1,0.8283054232597351,1.0000000000000002,0.9012477397918701,0.9214907288551331
108,Where do C plus plus programs begin to execute?,main,At the main function.,5.0,1,0.719275712966919,1.0,0.8037185072898865,0.7480969429016113
109,Where do C plus plus programs begin to execute?,C plus plus programs begin execution at the main function.,At the main function.,5.0,1,0.8796907663345337,0.4714045207910317,0.6854047775268555,0.4088417887687683
110,Where do C plus plus programs begin to execute?,At main,At the main function.,5.0,1,0.8575020432472229,1.0,0.8685656785964966,0.7827728986740112
111,Where do C plus plus programs begin to execute?,they beging to excute at main,At the main function.,5.0,1,0.7702377438545227,0.5773502691896258,0.5763826370239258,0.24725326895713806
112,Where do C plus plus programs begin to execute?,at the main function int main,At the main function.,5.0,1,0.9163135886192322,0.8660254037844388,0.9208746552467346,0.9058408141136169
113,Where do C plus plus programs begin to execute?,C plus plus programs begin execution at the main function.,At the main function.,5.0,1,0.8796907663345337,0.4714045207910317,0.6854047775268555,0.4088417887687683
114,Where do C plus plus programs begin to execute?,in the main function,At the main function.,5.0,1,0.8970096707344055,1.0000000000000002,0.9492895603179932,0.9673073291778564
115,Where do C plus plus programs begin to execute?,Within the main function,At the main function.,5.0,1,0.8898220062255859,1.0000000000000002,0.9175581932067871,0.9230499267578125
116,What is a variable?,Variable can be a integer or a string in a program.,A location in memory that can store a value.,2.0,0,0.8804218769073486,0.0,0.6428405046463013,0.2600802183151245
117,What is a variable?,"In programming, a structure that holds data and is uniquely named by the programmer. It holds the data assigned to it until a new value is assigned or the program is finished.",A location in memory that can store a value.,4.5,1,0.9079412817955017,0.2182178902359924,0.5837044715881348,0.2807801365852356
118,What is a variable?,A variable is a location in memory where a value can be stored.,A location in memory that can store a value.,5.0,1,0.9682594537734985,0.7745966692414836,0.8860593438148499,0.7109473943710327
119,What is a variable?,"Variable is a location in the computer 's memory, in which a value can be stored and later can retrieve that value.",A location in memory that can store a value.,5.0,1,0.963035523891449,0.6963106238227914,0.7977667450904846,0.5453251600265503
120,What is a variable?,"A variable is a location in the computer 's memory where a value can be stored for use by a program. Each variable has a name, a value, a type and a size.",A location in memory that can store a value.,5.0,1,0.9545779824256897,0.5773502691896258,0.7091271877288818,0.592807948589325
121,What is a variable?,A named object that can hold a numerical or letter value,A location in memory that can store a value.,3.5,0,0.8786591291427612,0.4082482904638631,0.6840754747390747,0.64275062084198
122,What is a variable?,"It is a sybol or name for a value or number. Example: a used number can stand for any given number, and the programmer can refer to that number by using the variable name.",A location in memory that can store a value.,4.0,1,0.9047361612319946,0.19611613513818404,0.5665831565856934,0.5298479199409485
123,What is a variable?,A variable is a location in the computers memory where a value can be stored for use by a program,A location in memory that can store a value.,5.0,1,0.9503816962242126,0.6123724356957946,0.7077322006225586,0.604457437992096
124,What is a variable?,An identifier that holds a location in memory.,A location in memory that can store a value.,4.0,1,0.9410688281059265,0.7071067811865476,0.9453235864639282,0.5533350110054016
125,What is a variable?,a block of memory that holds a specific type of data,A location in memory that can store a value.,5.0,1,0.9016940593719482,0.4082482904638631,0.7999144196510315,0.5231025815010071
126,What is a variable?,It is a location in the computer 's memory where it can be stored for use by a program.,A location in memory that can store a value.,5.0,1,0.9449167251586914,0.5773502691896258,0.7638238072395325,0.4416375756263733
127,What is a variable?,A location in memory where value can be stored.,A location in memory that can store a value.,5.0,1,0.968622624874115,0.8660254037844388,0.9429411888122559,0.9581894278526306
128,What is a variable?,a value or word that can assume any of a set of values,A location in memory that can store a value.,3.0,0,0.9036696553230286,0.447213595499958,0.6836099028587341,0.5750980973243713
129,What is a variable?,A pointer to a location in memory.,A location in memory that can store a value.,4.0,1,0.9454253911972046,0.8164965809277261,0.9319422841072083,0.5273840427398682
130,What is a variable?,"A variable is the memory address for a specific type of stored data, or from a mathematical perspective, a symbol representing a fixed definition with changing values.",A location in memory that can store a value.,5.0,1,0.9133127331733704,0.25819888974716115,0.718341588973999,0.42311733961105347
131,What is a variable?,A variable is a value that is subject to change in a computer 's memory that can be used by programs. Programs can change the value of the variable and recall it later or act on it directly.,A location in memory that can store a value.,5.0,1,0.9270799160003662,0.4330127018922194,0.6580957770347595,0.3060305714607239
132,What is a variable?,a symbol that stands in for a value that may or may not change depending on the program.,A location in memory that can store a value.,4.0,1,0.9164289236068726,0.4082482904638631,0.6774132251739502,0.4410655200481415
133,What is a variable?,"a placeholder to hold information used in the program ... for example: int can hold: 1, 2, 3, 4, 68, 72, 256, etc. float can hold: 1.54, 55.55, 1.24, 5.657, 8.8123, et. char can hold: A, B, C, D, E, F,!, 4, 5, 6, P, etc.",A location in memory that can store a value.,4.5,1,0.7100999355316162,0.0,0.6193177700042725,0.24799056351184845
134,What is a variable?,a stored value used by the program,A location in memory that can store a value.,4.5,1,0.864282488822937,0.5,0.827025830745697,0.8321033120155334
135,What is a variable?,"A way to store different values into the program, such as numbers, words, letters, etc.",A location in memory that can store a value.,4.5,1,0.862008273601532,0.3535533905932738,0.5729802250862122,0.6287629008293152
136,What is a variable?,An object with a location in memory where value can be stored,A location in memory that can store a value.,3.5,0,0.9524253606796265,0.7745966692414836,0.9471943974494934,0.921541690826416
137,What is a variable?,location in memory where a value can be stored,A location in memory that can store a value.,5.0,1,0.9594293236732483,0.8660254037844388,0.9376201629638672,0.9378640651702881
138,What is a variable?,a variable is an object where data is stored.,A location in memory that can store a value.,3.5,0,0.8850551843643188,0.0,0.7746247053146362,0.42403191328048706
139,What is a variable?,Location in memory where a value can be stored.,A location in memory that can store a value.,5.0,1,0.968622624874115,0.8660254037844388,0.9425873756408691,0.9441015124320984
140,What is a variable?,it is a location in memory where value can be stored,A location in memory that can store a value.,5.0,1,0.9633641242980957,0.8660254037844388,0.9372118711471558,0.9550518989562988
141,What is a variable?,A variable is the location in a computer 's memory where a value can be stored for use by a program.,A location in memory that can store a value.,5.0,1,0.9570410847663879,0.6123724356957946,0.734651505947113,0.5502718687057495
142,What is a variable?,A variable is a location in a computers memory where a value can be stored for use by a program.,A location in memory that can store a value.,5.0,1,0.955269992351532,0.6123724356957946,0.7053622007369995,0.6105809807777405
143,What is a variable?,a location in memory where data can be stored and retrieved,A location in memory that can store a value.,5.0,1,0.9137153625488281,0.632455532033676,0.9080945253372192,0.527109682559967
144,What is a variable?,"Is a method or identifier I would say, we use to bind a data object to memory location; which is then stored in a location that can be accessed when and manipulated later when the variable name is called.",A location in memory that can store a value.,5.0,1,0.9315110445022583,0.5,0.7391340136528015,0.40775245428085327
145,Where are variables declared in a C plus plus program?,"They can be declared right before they are used, but it is a good practice to declare them at the beginning of the program and label what they are food.",Variables can be declared anywhere in a program. They can be declared inside a functionlocal variablesor outside the functionsglobal variables,2.0,0,0.92566978931427,0.4242640687119287,0.34816211462020874,0.2535797953605652
146,Where are variables declared in a C plus plus program?,In the Function main before using the variable.,Variables can be declared anywhere in a program. They can be declared inside a functionlocal variablesor outside the functionsglobal variables,3.0,0,0.882871150970459,0.0,0.6122973561286926,0.34991517663002014
147,Where are variables declared in a C plus plus program?,"Local variables are declared inside the method or function they will be used in at the beginning of the method. Global variables are declared outside of any function or method, generally before functions are defined.",Variables can be declared anywhere in a program. They can be declared inside a functionlocal variablesor outside the functionsglobal variables,5.0,1,0.9462373852729797,0.5773502691896258,0.6874003410339355,0.42702317237854004
148,Where are variables declared in a C plus plus program?,Variables are declared where ever it is defined either inside a block locally or outside a block globally.,Variables can be declared anywhere in a program. They can be declared inside a functionlocal variablesor outside the functionsglobal variables,4.5,1,0.9527319669723511,0.5720775535473555,0.7532967329025269,0.719448447227478
149,Where are variables declared in a C plus plus program?,Variables are declared before they are actually used. They can be declared before main to use globally,Variables can be declared anywhere in a program. They can be declared inside a functionlocal variablesor outside the functionsglobal variables,4.0,1,0.9389427304267883,0.670820393249937,0.6323920488357544,0.6697181463241577
150,Where are variables declared in a C plus plus program?,"For good programing practice they should be declared before main , but should at least be declared before they are used.",Variables can be declared anywhere in a program. They can be declared inside a functionlocal variablesor outside the functionsglobal variables,2.5,0,0.9187940955162048,0.6666666666666666,0.3655698895454407,0.2292548269033432
151,Where are variables declared in a C plus plus program?,"They can be declared globally just before the main methodbut also outside of it... or variables can be subject to only the method they are scoped within, but would still be declared at the beginning of that methodbut inside of it.",Variables can be declared anywhere in a program. They can be declared inside a functionlocal variablesor outside the functionsglobal variables,5.0,1,0.952925443649292,0.596284793999944,0.6397746801376343,0.5989705920219421
152,Where are variables declared in a C plus plus program?,local variables are declared inside the method while global variables are declared in the body.,Variables can be declared anywhere in a program. They can be declared inside a functionlocal variablesor outside the functionsglobal variables,5.0,1,0.9349313974380493,0.8320502943378436,0.6807777881622314,0.4953362047672272
153,Where are variables declared in a C plus plus program?,Any where in the main function.,Variables can be declared anywhere in a program. They can be declared inside a functionlocal variablesor outside the functionsglobal variables,2.0,0,0.894086480140686,0.0,0.5502971410751343,0.13196277618408203
154,Where are variables declared in a C plus plus program?,"Globally for an entire program, and locally for individual functionsincluding FOR statements",Variables can be declared anywhere in a program. They can be declared inside a functionlocal variablesor outside the functionsglobal variables,4.5,1,0.8393620252609253,0.3779644730092273,0.7433609962463379,0.4085594713687897
155,Where are variables declared in a C plus plus program?,They are usually declared at the beginning before they can be used in the program. They always contain a name and a data type.,Variables can be declared anywhere in a program. They can be declared inside a functionlocal variablesor outside the functionsglobal variables,3.0,0,0.9478049874305725,0.474341649025257,0.5767427682876587,0.24785050749778748
156,Where are variables declared in a C plus plus program?,Inside the method.,Variables can be declared anywhere in a program. They can be declared inside a functionlocal variablesor outside the functionsglobal variables,2.5,0,0.8329769968986511,0.7071067811865476,0.5377126932144165,0.20058664679527283
157,Where are variables declared in a C plus plus program?,at the top,Variables can be declared anywhere in a program. They can be declared inside a functionlocal variablesor outside the functionsglobal variables,1.5,0,0.0,0.0,0.0,0.0
158,Where are variables declared in a C plus plus program?,Global variables are declared in the body of the code. Local variables are declared in the function they are to be usedunless the function is being passed a variable. Variables should always be declared before use.,Variables can be declared anywhere in a program. They can be declared inside a functionlocal variablesor outside the functionsglobal variables,5.0,1,0.9659161567687988,0.7745966692414835,0.6363009810447693,0.5216606855392456
159,Where are variables declared in a C plus plus program?,Variables are usually declared at the beginning of a module of C plus plus code.,Variables can be declared anywhere in a program. They can be declared inside a functionlocal variablesor outside the functionsglobal variables,2.5,0,0.8921810984611511,0.447213595499958,0.6340283751487732,0.6559615135192871
160,Where are variables declared in a C plus plus program?,"In the main function, usually at the top of code. They can be declared almost anywhere, but must be declared before the code can use or act upon them.",Variables can be declared anywhere in a program. They can be declared inside a functionlocal variablesor outside the functionsglobal variables,3.5,0,0.9449699521064758,0.5547001962252291,0.62397301197052,0.11886317282915115
161,Where are variables declared in a C plus plus program?,in the very beginning of the program. Before the main starts.,Variables can be declared anywhere in a program. They can be declared inside a functionlocal variablesor outside the functionsglobal variables,2.0,0,0.8578212857246399,0.5,0.35924607515335083,0.15405350923538208
162,Where are variables declared in a C plus plus program?,"In the declaration of Functions, for statements, and while statements. in the body of If, For, while, do while, statements, in namespaces, headers, etcalmost anywhere.anywhere in the program, as long as it is on it is own line.",Variables can be declared anywhere in a program. They can be declared inside a functionlocal variablesor outside the functionsglobal variables,2.5,0,0.872894823551178,0.23570226039551587,0.8674905896186829,0.3422377109527588
163,Where are variables declared in a C plus plus program?,After declaration of the variable 's data type.,Variables can be declared anywhere in a program. They can be declared inside a functionlocal variablesor outside the functionsglobal variables,1.0,0,0.8533239364624023,0.0,0.6392179131507874,0.44436022639274597
164,Where are variables declared in a C plus plus program?,"anywhere in the code, can be at the top, or in the middle of the code, or anywhere.",Variables can be declared anywhere in a program. They can be declared inside a functionlocal variablesor outside the functionsglobal variables,3.0,0,0.8836403489112854,0.0,0.7390351891517639,0.4525350034236908
165,Where are variables declared in a C plus plus program?,Before they are used.,Variables can be declared anywhere in a program. They can be declared inside a functionlocal variablesor outside the functionsglobal variables,2.0,0,0.8538621664047241,0.0,0.39061349630355835,0.27702054381370544
166,Where are variables declared in a C plus plus program?,Anywhere in the same scope before they are used,Variables can be declared anywhere in a program. They can be declared inside a functionlocal variablesor outside the functionsglobal variables,3.5,0,0.9094328284263611,0.0,0.5531222224235535,0.2869218587875366
167,Where are variables declared in a C plus plus program?,variables can be declared in classes and methods.,Variables can be declared anywhere in a program. They can be declared inside a functionlocal variablesor outside the functionsglobal variables,2.5,0,0.9178161025047302,0.7071067811865476,0.7459911704063416,0.6812784671783447
168,Where are variables declared in a C plus plus program?,inside the function scope and outside of the function scope in case of global variables,Variables can be declared anywhere in a program. They can be declared inside a functionlocal variablesor outside the functionsglobal variables,5.0,1,0.8635345697402954,0.45291081365783836,0.658501386642456,0.5711718797683716
169,Where are variables declared in a C plus plus program?,global variables are declared in the main function local variables are declared in any other function,Variables can be declared anywhere in a program. They can be declared inside a functionlocal variablesor outside the functionsglobal variables,4.0,1,0.9045096635818481,0.7302967433402217,0.7068324685096741,0.48984748125076294
170,Where are variables declared in a C plus plus program?,"Variables are usually declared at the very beginning of a C plus plus program, but can be declared any in the program as long as they appear before they are called upon.",Variables can be declared anywhere in a program. They can be declared inside a functionlocal variablesor outside the functionsglobal variables,4.0,1,0.9460288882255554,0.628539361054709,0.6871518492698669,0.6312143802642822
171,Where are variables declared in a C plus plus program?,"Variables are declared in the main function, before any operation is attempted with the variables.",Variables can be declared anywhere in a program. They can be declared inside a functionlocal variablesor outside the functionsglobal variables,2.0,0,0.939158022403717,0.7071067811865475,0.6503168344497681,0.5347119569778442
172,Where are variables declared in a C plus plus program?,"anywhere, but where you declare them depends on where you want them to be accessibletheir scope",Variables can be declared anywhere in a program. They can be declared inside a functionlocal variablesor outside the functionsglobal variables,4.5,1,0.8992285132408142,0.0,0.560263991355896,0.46652284264564514
173,Where are variables declared in a C plus plus program?,It depends if it s a global then they have to be declared out side the source code to be used in every scope however a local variable is one declared in a local function etc. which obviously doesn t need to be declared outside the variable seeing how it is used for the function or block its being called for.,Variables can be declared anywhere in a program. They can be declared inside a functionlocal variablesor outside the functionsglobal variables,4.5,1,0.9583104848861694,0.5146502354656656,0.5687004327774048,0.5549865961074829
174,What is the main difference between a while and a do ... while statement?,The do statement first evaluates the condition and then executes the lines of code in the statement 0 or more times. The do while statement executes the lines of code and then it evaluates the condition.,The block inside a do ... while statement will execute at least once.,4.5,1,0.9296320676803589,0.5477225575051662,0.5221500396728516,0.5950363874435425
175,What is the main difference between a while and a do ... while statement?,do ... while statements evaluate whether or not to loop after running the block contained within it at least once. So the main differance is that while statements have a possibility of never being used. Do ... while statements on the other hand are always run at least once before evaluating whether to run again.,The block inside a do ... while statement will execute at least once.,5.0,1,0.9624394774436951,0.20412414523193156,0.6498040556907654,0.5428829193115234
176,What is the main difference between a while and a do ... while statement?,"The main difference between a while and a do ... while loop is that the do ... while loop always cycles through the loop at least once, but the while loop does not always do so.",The block inside a do ... while statement will execute at least once.,5.0,1,0.9394959807395935,0.0,0.5761168003082275,0.2968798279762268
177,What is the main difference between a while and a do ... while statement?,While loop used to execute a block of code as long as some condition is true. A do ... while loop used to execute a block of code as long as some condition is satisfied. The difference between while and do ... while is while loop tests its condition before the execution of its contents and the do ... while loop tests its condition after the execution of its contents at least once.,The block inside a do ... while statement will execute at least once.,5.0,1,0.9491791725158691,0.3455473702325441,0.6051425933837891,0.590343177318573
178,What is the main difference between a while and a do ... while statement?,"The termination condition of a do ... while statement is usually at the end of the loop so it will run at least once. As for the while statement, if the condition is false to begin with, then the loop will never run.",The block inside a do ... while statement will execute at least once.,5.0,1,0.9591497182846069,0.4364357804719848,0.4459165334701538,0.5714088082313538
179,What is the main difference between a while and a do ... while statement?,A while loop will check the statement to make sure it is true before executing. A do while loop will execute before checking the statement to see if it should run again.,The block inside a do ... while statement will execute at least once.,5.0,1,0.9581734538078308,0.5303300858899107,0.5876640677452087,0.5524660348892212
180,What is the main difference between a while and a do ... while statement?,"A while statement will test the condition of the while loop FIRST there is a chance the loop will never run. A do ... while loop will ALWAYS run once, and then the while test will determine if it will run again.",The block inside a do ... while statement will execute at least once.,5.0,1,0.9495291113853455,0.19611613513818404,0.5714997053146362,0.4313035011291504
181,What is the main difference between a while and a do ... while statement?,a do while loop always executes once. A while loop 's conditional statement has to be true for it to run.,The block inside a do ... while statement will execute at least once.,5.0,1,0.9483876824378967,0.3333333333333333,0.7206909656524658,0.51445472240448
182,What is the main difference between a while and a do ... while statement?,"WHILE statement-The condition is checked for validity, then is repeated until the conditon is false. Do ... WHILE statement --The code is performed at least once then checked for valid condition. Will continue to",The block inside a do ... while statement will execute at least once.,5.0,1,0.9329684972763062,0.447213595499958,0.6629223823547363,0.4377562999725342
183,What is the main difference between a while and a do ... while statement?,"while statements will evaluate the statement BEFORE executing a cycle of the loop, including the first cycle, meaning that a while loop will not always execute. A do ... while will run evaluate the statement AFTER running through a cycle of the loop, ensuring that the loop always executes at least one time.",The block inside a do ... while statement will execute at least once.,5.0,1,0.9491541385650635,0.3234983196103153,0.6233910918235779,0.4443490207195282
184,What is the main difference between a while and a do ... while statement?,The main difference between a do and a do ... while statement is in a do ... while statement is the statements in a do block are always executed atleast once. The while statement will only execute if its condition is true.,The block inside a do ... while statement will execute at least once.,5.0,1,0.9627988934516907,0.6804138174397718,0.6720461845397949,0.6820077300071716
185,What is the main difference between a while and a do ... while statement?,The loop of a do ... while statement always executes once.,The block inside a do ... while statement will execute at least once.,4.5,1,0.9581495523452759,0.5773502691896258,0.8240392208099365,0.5866020917892456
186,What is the main difference between a while and a do ... while statement?,"a while statement will only process if the statement is met, while a do ... while will always process once, then only continue if the statement is met.",The block inside a do ... while statement will execute at least once.,5.0,1,0.9418656826019287,0.7071067811865476,0.6704044342041016,0.5735120177268982
187,What is the main difference between a while and a do ... while statement?,"Do ... while runs the embedded code at least once, the do command does not necessarily",The block inside a do ... while statement will execute at least once.,4.0,1,0.9387807846069336,0.0,0.492461234331131,0.40159088373184204
188,What is the main difference between a while and a do ... while statement?,"While tests for true first before running, do ... while runs once first before checking.",The block inside a do ... while statement will execute at least once.,5.0,1,0.9074805974960327,0.0,0.6125656366348267,0.40636390447616577
189,What is the main difference between a while and a do ... while statement?,A do ... while statement 's body always executes at least once. Where as a while statement will not execute at all unless the condition for the while is true.,The block inside a do ... while statement will execute at least once.,5.0,1,0.9707372188568115,0.670820393249937,0.6761157512664795,0.520108699798584
190,What is the main difference between a while and a do ... while statement?,The statements within the block of the do while loop will always be executed at least once regardless of the conditions. Whereas the while loops may never be executed if the conditions are not met.,The block inside a do ... while statement will execute at least once.,5.0,1,0.9431694149971008,0.2672612419124244,0.5734487771987915,0.6562521457672119
191,What is the main difference between a while and a do ... while statement?,"a do ... while loop will always run through once, while an while loop performs a test before running through the loop.",The block inside a do ... while statement will execute at least once.,5.0,1,0.9240742325782776,0.0,0.677528440952301,0.4990619421005249
192,What is the main difference between a while and a do ... while statement?,A while statement tests the condition before it can start. A do ... while statement loops through once before the condition is tested.,The block inside a do ... while statement will execute at least once.,5.0,1,0.9465621709823608,0.5773502691896258,0.6850242018699646,0.3598306179046631
193,What is the main difference between a while and a do ... while statement?,"A while loop terminates at the beginning of the loop, a do or while terminates at the end of the loop.",The block inside a do ... while statement will execute at least once.,3.5,0,0.9131346940994263,0.0,0.5569306015968323,0.35209470987319946
194,What is the main difference between a while and a do ... while statement?,the loop body always executes at least once,The block inside a do ... while statement will execute at least once.,3.5,0,0.9174579977989197,0.0,0.7203562259674072,0.434238076210022
195,What is the main difference between a while and a do ... while statement?,"While loop evaluates its expression at the top of its loop and decides if it needs to execute, and the do-while always executes at least once and then evaluates its expression at the bottom of its loop.",The block inside a do ... while statement will execute at least once.,5.0,1,0.9362026453018188,0.2182178902359924,0.6828864812850952,0.5177943706512451
196,What is the main difference between a while and a do ... while statement?,A do ... while statement will always execute the do piece of code at least once before checking the condition. A while statement will always check the condition first.,The block inside a do ... while statement will execute at least once.,5.0,1,0.9690473079681396,0.5883484054145521,0.6519716382026672,0.6312838792800903
197,What is the main difference between a while and a do ... while statement?,"A do-while passes atleast 1 time before checking the condition, however, a while would fail to enter the loop if the condition fails in its first place.",The block inside a do ... while statement will execute at least once.,5.0,1,0.9481780529022217,0.0,0.48033589124679565,0.3750288784503937
198,What is the main difference between a while and a do ... while statement?,"a while loop checks if the condition is true or not first, if it was true, it excutes the statement. a do .. while loop executes the statement before it checks the condition. if the condition was true it would excute the statement again. so a do ... while loop would excute the statement atleast once.",The block inside a do ... while statement will execute at least once.,5.0,1,0.9545586109161377,0.5443310539518175,0.5950711965560913,0.2967382073402405
199,What is the main difference between a while and a do ... while statement?,NO ANSWER,The block inside a do ... while statement will execute at least once.,0.0,0,0.7047584056854248,0.0,0.2155035138130188,0.17071352899074554
200,What is the main difference between a while and a do ... while statement?,"A do ... while loop will always execute atleast once, a while loop may never execute depending on teh conditions.",The block inside a do ... while statement will execute at least once.,5.0,1,0.939677894115448,0.5773502691896258,0.4957040846347809,0.44072091579437256
201,What is the main difference between a while and a do ... while statement?,"a while loop is pre-checkit checks the condition statement before it executes the code within the while blocka do while loop is post-checkit checks the condition AFTER the block executes, it runs at least once no matter what the condition statement is",The block inside a do ... while statement will execute at least once.,5.0,1,0.9446027278900146,0.35355339059327373,0.6739153265953064,0.5811260342597961
202,What is the main difference between a while and a do ... while statement?,"What is the main difference between a while and a do ... while statement? The do while construct consists of a block of code and a condition. First, the code within the block is executed, and then the condition is evaluated, this is done until it is proven false. The difference between the While loop is it tests the condition before the code within the block is executed.",The block inside a do ... while statement will execute at least once.,5.0,1,0.942547619342804,0.4264014327112209,0.5268015265464783,0.3261111080646515
203,What is typically included in a class definition?,"For us it is usually a set, get, and displayMessge or other messages that tell you what properties a class has but does not reveal its implementations. You could have anything you want in your own class definition.",Data membersattributesand member functions.,2.0,0,0.6645164489746094,0.0,0.45283591747283936,0.14951103925704956
204,What is typically included in a class definition?,The attributes of said class. Also whether or not it is a subclass. Also whether it is public private or protected.,Data membersattributesand member functions.,4.0,1,0.7322496175765991,0.0,0.622923731803894,0.3875355124473572
205,What is typically included in a class definition?,Information telling the compiler what data members and member functions belong to the class.,Data membersattributesand member functions.,5.0,1,0.8510621190071106,0.5773502691896257,0.7099475860595703,0.5308913588523865
206,What is typically included in a class definition?,"Since class is user defined, the body of the declaration can contain members, that can be either data or function declarations, and optionally access specifiers. Example for specifiers would be public, private, and protected. There is the keyword Class and the Class body is enclosed with brackets .",Data membersattributesand member functions.,5.0,1,0.7752066254615784,0.17149858514250885,0.741496741771698,0.3798918128013611
207,What is typically included in a class definition?,An object and data.,Data membersattributesand member functions.,2.0,0,0.8329871892929077,0.7071067811865476,0.8045270442962646,0.49781709909439087
208,What is typically included in a class definition?,"It is specific class name, includes only information defined by that class ... implementation details ... etc.",Data membersattributesand member functions.,3.0,0,0.7653779983520508,0.0,0.5955835580825806,0.2595401704311371
209,What is typically included in a class definition?,data members and member functions.,Data membersattributesand member functions.,5.0,1,0.9534516930580139,0.8660254037844388,0.9623467922210693,0.8287062644958496
210,What is typically included in a class definition?,A class definition usually contains the function and its data members,Data membersattributesand member functions.,5.0,1,0.8193649053573608,0.3779644730092273,0.7769981622695923,0.5974928140640259
211,What is typically included in a class definition?,Data members and member functions,Data membersattributesand member functions.,5.0,1,0.9242954850196838,0.8660254037844388,0.9558653831481934,0.809928297996521
212,What is typically included in a class definition?,member functions,Data membersattributesand member functions.,3.5,0,0.8585564494132996,1.0000000000000002,0.816102147102356,0.6801615953445435
213,What is typically included in a class definition?,Member functions and data members belonging to the class.,Data membersattributesand member functions.,5.0,1,0.8913955688476562,0.7071067811865477,0.7828328013420105,0.6919817924499512
214,What is typically included in a class definition?,a public and private area that includes the functions and variables that are used in the class,Data membersattributesand member functions.,4.5,1,0.7576130032539368,0.3535533905932738,0.5326633453369141,0.3165232837200165
215,What is typically included in a class definition?,"the keyword class followed by they class name, on the inside you declare public and private declarations of your class",Data membersattributesand member functions.,3.5,0,0.6676122546195984,0.0,0.4520672857761383,0.32776403427124023
216,What is typically included in a class definition?,A class definition typically includes function definitions.,Data membersattributesand member functions.,3.0,0,0.7615444660186768,0.0,0.7307032346725464,0.5210285186767578
217,What is typically included in a class definition?,"It begins with Class, followed by the class name, then usually a constructor, data members and member functions that delineates the class is included in any class 's definition.",Data membersattributesand member functions.,5.0,1,0.7825855016708374,0.33333333333333337,0.6566425561904907,0.40645790100097656
218,What is typically included in a class definition?,the data and methods,Data membersattributesand member functions.,4.5,1,0.7792173624038696,0.7071067811865476,0.8154364824295044,0.53968745470047
219,What is typically included in a class definition?,"A constructor, functions, and variables that are accessible to by that class, and possibly other classes depending on how they are done.",Data membersattributesand member functions.,4.5,1,0.7379163503646851,0.3535533905932738,0.6878076791763306,0.23547588288784027
220,What is typically included in a class definition?,Member functions and data members.,Data membersattributesand member functions.,5.0,1,0.9534516334533691,0.8660254037844388,0.9510586261749268,0.8135215044021606
221,What is typically included in a class definition?,"public section and private section, and there must be a semicolon to set the end",Data membersattributesand member functions.,2.5,0,0.6930748820304871,0.0,0.4786553978919983,0.2100955843925476
222,What is typically included in a class definition?,member funtions and data members,Data membersattributesand member functions.,5.0,1,0.9242954254150391,0.7071067811865476,0.8690311312675476,0.5289213061332703
223,What is typically included in a class definition?,Data members and Member functions,Data membersattributesand member functions.,5.0,1,0.9242954850196838,0.8660254037844388,0.9558653831481934,0.809928297996521
224,What is typically included in a class definition?,data members and member functions,Data membersattributesand member functions.,5.0,1,0.9242954850196838,0.8660254037844388,0.9558653831481934,0.809928297996521
225,What is typically included in a class definition?,"the class name and its public data types such as constructors, methods, functions.",Data membersattributesand member functions.,3.5,0,0.8162370324134827,0.5345224838248489,0.7869530320167542,0.4207618236541748
226,What is typically included in a class definition?,"a constructor and several data members, and at least one public data member or method",Data membersattributesand member functions.,4.5,1,0.8461350798606873,0.7071067811865475,0.8219001889228821,0.4896666705608368
227,What is typically included in a class definition?,"class name, two curly prenthesis, public and private",Data membersattributesand member functions.,2.0,0,0.6225720643997192,0.0,0.4933684170246124,0.14148639142513275
228,What is typically included in a class definition?,data members and member functions,Data membersattributesand member functions.,5.0,1,0.9242954850196838,0.8660254037844388,0.9558653831481934,0.809928297996521
229,What is typically included in a class definition?,Data and functions,Data membersattributesand member functions.,4.5,1,0.8809570074081421,1.0000000000000002,0.8619405627250671,0.650301456451416
230,What is typically included in a class definition?,functions and data members that belong to the class,Data membersattributesand member functions.,5.0,1,0.8428139090538025,0.632455532033676,0.8026300668716431,0.5362474918365479
231,What is typically included in a class definition?,"class variables, function definitions for the class",Data membersattributesand member functions.,5.0,1,0.7449526786804199,0.0,0.7163523435592651,0.3875731825828552
232,What is typically included in a class definition?,"A class is an expanded concept of a data structure, it holds both the data and the functions being executed",Data membersattributesand member functions.,4.5,1,0.7870540022850037,0.6396021490668313,0.7434718608856201,0.44187039136886597
233,What is the difference between a data member and a local variable inside a member function?,Data members are the data components of a particular class. A member function are the functioning components of the class.,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,3.0,0,0.9462311863899231,0.6859943405700354,0.5340832471847534,0.6227191090583801
234,What is the difference between a data member and a local variable inside a member function?,A field variable is a variable that is declared as a member of a class. A local variable is avariable that isdeclared local to a method.,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,2.5,0,0.8915826082229614,0.45643546458763845,0.6355323791503906,0.41314008831977844
235,What is the difference between a data member and a local variable inside a member function?,"Data members are declared inside the class, but outside of any member functions. Unlike with local variables, each object of the class keeps its own copy of the data members stored in memory.",Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,4.5,1,0.9624407887458801,0.6948792289723033,0.7776761054992676,0.5784333348274231
236,What is the difference between a data member and a local variable inside a member function?,Data member are variables that represent an attribute in a class definition. Local variables declared in a function body cannot be used outside of that function body. When a function terminates the values of its local variables are lost.,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,4.5,1,0.9574496746063232,0.6488856845230502,0.6754827499389648,0.5520628690719604
237,What is the difference between a data member and a local variable inside a member function?,A local variable cannot be accessed outside the function in which it is declared. Data members normally are private. Variables of functions declared private are accessible only to member functions of the class in which they are declared.,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,5.0,1,0.9669802188873291,0.5753559617824612,0.7560776472091675,0.3687291145324707
238,What is the difference between a data member and a local variable inside a member function?,"A data member is part of a C plus plus class or structure that stores data of a certain type ... A local variable inside a member function is only available inside that function, and can be used to derive a desired outcome.",Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,4.5,1,0.9501041173934937,0.7144345083117604,0.8046265840530396,0.49897274374961853
239,What is the difference between a data member and a local variable inside a member function?,A local variable can only be accessed within the scope of its declaration.,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,3.5,0,0.9381095170974731,0.6000000000000001,0.7652645111083984,0.29296883940696716
240,What is the difference between a data member and a local variable inside a member function?,Data members are the atributes of the function and can be used outside the function. Local variable can not be used outside the function and the value is lost after the function terminates.,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,4.5,1,0.9572310447692871,0.6187184335382292,0.6526601314544678,0.5697072148323059
241,What is the difference between a data member and a local variable inside a member function?,"data members are permanent attributes of the class, local variables inside a member function are lost when the scope of the member function ends.",Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,4.0,1,0.9635182023048401,0.7970811413304557,0.638260006904602,0.4737110137939453
242,What is the difference between a data member and a local variable inside a member function?,data members are declared in a class definition but outside the bodies of a class 's member-function definitions. Local variables are declared in a function definition 's body,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,4.0,1,0.9423178434371948,0.632455532033676,0.7300313115119934,0.6546401977539062
243,What is the difference between a data member and a local variable inside a member function?,"A data member is globally accessible, while a local variable is only accessible inside the member function.",Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,4.5,1,0.9459360241889954,0.7252406676228422,0.736110270023346,0.6435961127281189
244,What is the difference between a data member and a local variable inside a member function?,A variable inside a member function can only be accessed inside that member and a data member can be accessed throughought the program.,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,5.0,1,0.9674432277679443,0.9116846116771037,0.8478690385818481,0.5669280290603638
245,What is the difference between a data member and a local variable inside a member function?,Local variables are used only within the scope of its declaration,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,4.5,1,0.9044932723045349,0.632455532033676,0.6966079473495483,0.26155006885528564
246,What is the difference between a data member and a local variable inside a member function?,"A data member is a more general term describing all objects instantiated within a member function. Local in local variables refers more to the scope of a variable, which may be located in anything from a control structure to a class. Local variables whose scope are in a member function are the same as data members of member functions.",Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,2.0,0,0.9621262550354004,0.8206099398622182,0.7742316722869873,0.6981827020645142
247,What is the difference between a data member and a local variable inside a member function?,A data member exists permanently in that program 's memory as long as it is run. A local variable inside a member function is temporal and only used to operate in the function and exists as long as the function is run.,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,3.5,0,0.9452479481697083,0.560611910581388,0.665054202079773,0.3677990436553955
248,What is the difference between a data member and a local variable inside a member function?,"local variables can only be used within the function, where as data members can be set to public access and can be used throughout",Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,5.0,1,0.9536241292953491,0.645497224367903,0.8653598427772522,0.547377347946167
249,What is the difference between a data member and a local variable inside a member function?,"The local variable is lost once it exits the block of code, while the data member is not.",Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,4.5,1,0.9329019784927368,0.5773502691896258,0.4758191704750061,0.32694536447525024
250,What is the difference between a data member and a local variable inside a member function?,Every member function can access and modify a data member. A local variable can only be used from the line of declaration to the next closing before it is lost from memory.,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,4.5,1,0.9564017653465271,0.6614378277661478,0.8836126327514648,0.7545053958892822
251,What is the difference between a data member and a local variable inside a member function?,"data member is accessible to all functions in the class, where local variable is only available to the member function and value is lost when function closes",Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,5.0,1,0.9612253904342651,0.7856742013183862,0.8767971396446228,0.5138960480690002
252,What is the difference between a data member and a local variable inside a member function?,Data members are variables that are declared inside the class definition but outside of the bodies of the class member functions. Local variables can only be used within the function declaration.,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,4.5,1,0.9718400835990906,0.7324670207647146,0.8578590750694275,0.5359264016151428
253,What is the difference between a data member and a local variable inside a member function?,"The data member can be accessed outside of the class, whereas the local variable cannot.",Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,4.0,1,0.972781240940094,0.7977240352174658,0.6489190459251404,0.6114471554756165
254,What is the difference between a data member and a local variable inside a member function?,"Local variables cannot be used outside of that function body. When a function terminates the values of its local variables are lost. Where as data members are variables in a class definition, and they exist throughout the life of the object.",Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,5.0,1,0.9594987630844116,0.74535599249993,0.6486366987228394,0.3173639178276062
255,What is the difference between a data member and a local variable inside a member function?,a local variable in a member function has to be static. a data member can change its value freely.,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,2.0,0,0.9458325505256653,0.7637626158259735,0.7053745985031128,0.3150475323200226
256,What is the difference between a data member and a local variable inside a member function?,"a local variable is only useable within the function it is defined, whereas a data member is available to any method within its class",Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,5.0,1,0.9444581270217896,0.670820393249937,0.9036349654197693,0.6301456093788147
257,What is the difference between a data member and a local variable inside a member function?,Variable declared in a function defination 's body cannot be used outside of that function. Data members accessible only to member function of that class.,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,5.0,1,0.9703066349029541,0.6324555320336759,0.8071544170379639,0.419544517993927
258,What is the difference between a data member and a local variable inside a member function?,"data members local variables are declared in a function definition s body. they Cannot be used outside of that function body. When a function terminates, the values of its local variables are lost.",Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,4.5,1,0.9572142362594604,0.7348469228349536,0.6057633757591248,0.5572131276130676
259,What is the difference between a data member and a local variable inside a member function?,local variable is only available in the function.,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,4.5,1,0.9212978482246399,0.7071067811865476,0.6836143732070923,0.3426627516746521
260,What is the difference between a data member and a local variable inside a member function?,local variables are accessed inside member functions only while data members can be accessed throughout the class,Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,4.5,1,0.9734391570091248,0.9525793444156807,0.86793053150177,0.6080999374389648
261,What is the difference between a data member and a local variable inside a member function?,"A data member is accessible anywhere in the class, while i local variable in a member function is only accessible in that particular function, and is freed after the function exits.",Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,5.0,1,0.9494553208351135,0.7216878364870324,0.883660078048706,0.6333750486373901
262,What is the difference between a data member and a local variable inside a member function?,"a Data member is encapsulated within a class or object, it is static and can be shared by all instances of that class. however local variable 's are only used from the function or block in which it is declared and not the whole class. other wise they would be called global variables.",Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.,4.0,1,0.9551847577095032,0.5883484054145522,0.8617904782295227,0.6900730133056641
263,What is the difference between a constructor and a function?,A constructor initializes an object or objects of a class. A function of a class performs a task such as display a line of text or do some kind of mathematical operations.,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",2.5,0,0.9349890351295471,0.420084025208403,0.5586849451065063,0.6129865050315857
264,What is the difference between a constructor and a function?,"all constructors are functions but not all functions are constructors. Also functions can have nearly infinite purposes, while constructors always create an instance of whichever class you are using. You can change how a constructor does something but not what it does. With functions you can change not only the how but also the what.","A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",3.0,0,0.9534114003181458,0.7126966450997985,0.6601977944374084,0.505077064037323
265,What is the difference between a constructor and a function?,"Unlike regular functions, constructors are only used to initialize an object s data when it is created. Constructors must also be given the same name as the class and cannot return any values.","A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",5.0,1,0.9700644612312317,0.6187184335382291,0.7979632616043091,0.6169155240058899
266,What is the difference between a constructor and a function?,"A constructor typically used to intialize data members and allocate resources, for instance memory, files, etc. Also a constructor cannot return values. Functions are operations that maybe globally defined.","A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",4.5,1,0.9454424381256104,0.445435403187374,0.7764626741409302,0.45041611790657043
267,What is the difference between a constructor and a function?,"Constructors cannot return values, so they cannot specify a return type. Normally, constructors are declared public.","A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",4.0,1,0.9535847306251526,0.7126966450997984,0.7151339650154114,0.25344783067703247
268,What is the difference between a constructor and a function?,A constructor is a method that starts new instances of a class.Example: Employee employee 1parametersstarts a new instance of object of type Employee. A function is simply a module within a program that completes its single desired task.,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",3.0,0,0.9285151958465576,0.33942211665106536,0.612008810043335,0.603326678276062
269,What is the difference between a constructor and a function?,A constructor is called whenever a new object of that class is made.,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",3.5,0,0.9380045533180237,0.7302967433402217,0.6659210920333862,0.7461957335472107
270,What is the difference between a constructor and a function?,A constructor does not return any date and has no return type. Functions can return date or not return data can have a return type.,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",4.0,1,0.9542966485023499,0.8318003918560584,0.6483259797096252,0.307766318321228
271,What is the difference between a constructor and a function?,"A constructor is automatically called whenever an instance of a class is created, a function must be explicitly called by the user.","A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",4.0,1,0.9599584341049194,0.7637626158259735,0.7652066946029663,0.7044240236282349
272,What is the difference between a constructor and a function?,"constructors cannot return values, so they cannot specify a return type like functions can.","A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",4.0,1,0.9621946215629578,0.8,0.6407249569892883,0.3641524910926819
273,What is the difference between a constructor and a function?,A constructor is a function used to initialize an object 's data when it is created.,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",3.5,0,0.9466100335121155,0.7559289460184546,0.6357360482215881,0.7414674758911133
274,What is the difference between a constructor and a function?,a constructor initialises everything so that nothing is left empty or with random varioubles and a function modifies those variables with data.,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",2.5,0,0.9309236407279968,0.4714045207910317,0.6990782022476196,0.46645045280456543
275,What is the difference between a constructor and a function?,A constructor initialized values at the execution of its instantiation. It provides default values.,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",3.5,0,0.8793665170669556,0.316227766016838,0.6819567680358887,0.4346419870853424
276,What is the difference between a constructor and a function?,"A constructor sets up the default values of variables when an object is instantiated, whereas a function allows interaction with that object.","A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",4.0,1,0.9302220344543457,0.6405126152203487,0.7155492305755615,0.565561056137085
277,What is the difference between a constructor and a function?,"A constructor is used to create an object that can be employed in the main function of a program. This may or may not execute code along with it. A function is a set of code that executes when called, but does not create a new object.","A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",3.0,0,0.97281414270401,0.5091750772173156,0.8311986923217773,0.757792055606842
278,What is the difference between a constructor and a function?,a constructor initializes data members but the functions actually perform tasks. Constructors cant return values either.,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",4.0,1,0.9283460974693298,0.5698028822981899,0.8209897875785828,0.5393162369728088
279,What is the difference between a constructor and a function?,"a constructor does not need a type, and it is used to initialize the variables.","A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",3.5,0,0.9685736298561096,0.5070925528371101,0.6666427850723267,0.4384811520576477
280,What is the difference between a constructor and a function?,Constructors do not have a return type.,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",4.0,1,0.9420497417449951,0.9622504486493764,0.5805542469024658,0.3544725179672241
281,What is the difference between a constructor and a function?,constructor creates the class object into memory where functions perform actions against that object,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",3.0,0,0.8889833092689514,0.6963106238227914,0.6102085113525391,0.6102264523506165
282,What is the difference between a constructor and a function?,constructors cannot return values,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",4.0,1,0.8598665595054626,0.7745966692414836,0.565865159034729,0.26777714490890503
283,What is the difference between a constructor and a function?,A constructor initializes values and a function usual performs some sort of operation.,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",2.5,0,0.911065399646759,0.5000000000000001,0.6328508853912354,0.5007893443107605
284,What is the difference between a constructor and a function?,A constructor is a function used to initialize an object 's data when it is created. It is call is made implicitly when the object is created and must be defined with the same name as the class. Constructor also cannot return a value like a function can.,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",5.0,1,0.9749542474746704,0.7071067811865477,0.8675308227539062,0.7414675951004028
285,What is the difference between a constructor and a function?,A constructor is used to create an instance of a class and has the same name as that class. A function cannot have the same name as a class and computes data.,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",4.0,1,0.9568582773208618,0.3535533905932738,0.7674034237861633,0.6129528880119324
286,What is the difference between a constructor and a function?,"a constructor is a function that initializes a class instance, a function performs whatever task it is written for","A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",3.0,0,0.9395721554756165,0.6396021490668313,0.6429206728935242,0.6756321787834167
287,What is the difference between a constructor and a function?,"A constructor cannot return values, not even void, but function get a return value.","A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",4.0,1,0.9563596844673157,0.816496580927726,0.7350160479545593,0.28470557928085327
288,What is the difference between a constructor and a function?,"a constructor cannot return values, its not even void. it is used to initialize an object 's data when it is created. whereas, a function is created to do a specific task, and it can return values.","A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",5.0,1,0.9798076152801514,0.6943650748294137,0.8228965997695923,0.21802543103694916
289,What is the difference between a constructor and a function?,A constructor initializes an object. A function is part of an object.,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",2.5,0,0.9025894999504089,0.8728715609439698,0.6183018088340759,0.6497628688812256
290,What is the difference between a constructor and a function?,constructors initialize the data that is then used in the calculations of a function,"A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",2.5,0,0.9083731770515442,0.5773502691896258,0.5691383481025696,0.5455024838447571
291,What is the difference between a constructor and a function?,"a constructor is called when the class is created, a function can be called any time.","A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",3.5,0,0.9662720561027527,0.881917103688197,0.6303091049194336,0.66645348072052
292,What is the difference between a constructor and a function?,"constructor is a special block of statements called when an object is created, either when it is declared statically or constructed on the stack. However a function is a portion of code within a larger program, which performs a specific task and independent to the rest of the code.","A constructor is called whenever an object is created, whereas a function needs to be called explicitely. Constructors do not have return type, but functions have to indicate a return type.",4.0,1,0.9537680149078369,0.43301270189221946,0.7587416172027588,0.7705512046813965
293,When does C plus plus create a default constructor?,The compiler creates a default constructor when we do not define one in our class file,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",5.0,1,0.9602356553077698,0.7126966450997986,0.8634376525878906,0.701884925365448
294,When does C plus plus create a default constructor?,during compilation,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",3.5,0,0.48165363073349,0.0,0.3810148537158966,0.2771209478378296
295,When does C plus plus create a default constructor?,When the class does not explicitly include a constructor.,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",5.0,1,0.9534839987754822,0.6741998624632421,0.8264181613922119,0.29709821939468384
296,When does C plus plus create a default constructor?,When no parameters are set is when a default constructor is used.,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",3.0,0,0.9551960825920105,0.6201736729460423,0.7920907735824585,0.6702133417129517
297,When does C plus plus create a default constructor?,When a class does not explicitly include a constructor.,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",5.0,1,0.9552468061447144,0.6741998624632421,0.8244991302490234,0.286565899848938
298,When does C plus plus create a default constructor?,When there are no arguments passed.,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",1.5,0,0.8175150156021118,0.0,0.5946347713470459,0.2014811933040619
299,When does C plus plus create a default constructor?,when there is not one already for a specific class,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",5.0,1,0.9095653295516968,0.7071067811865476,0.5768072605133057,0.23250994086265564
300,When does C plus plus create a default constructor?,When it the programs compiles,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",3.5,0,0.840887188911438,0.0,0.41428929567337036,0.3371264636516571
301,When does C plus plus create a default constructor?,when a constructor is not provided by the programmer of the class,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",5.0,1,0.9399149417877197,0.7537783614444091,0.8561110496520996,0.445379376411438
302,When does C plus plus create a default constructor?,In any class that does not explicitly include a constructor.,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",5.0,1,0.9481302499771118,0.6741998624632421,0.7141313552856445,0.429533451795578
303,When does C plus plus create a default constructor?,Before the main function of the code.,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",1.0,0,0.8582815527915955,0.0,0.525234580039978,0.285839706659317
304,When does C plus plus create a default constructor?,whenevery you dont specifiy your own,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",5.0,1,0.7725306749343872,0.0,0.5841858386993408,0.3351699709892273
305,When does C plus plus create a default constructor?,When non are provided,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",5.0,1,0.7777501344680786,0.7071067811865476,0.492389440536499,0.3161553144454956
306,When does C plus plus create a default constructor?,C plus plus will create a default constructor when no other constructor is present.,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",5.0,1,0.9459346532821655,0.7252406676228423,0.7715375423431396,0.7564706206321716
307,When does C plus plus create a default constructor?,"When no constructor was specified in the constructor 's class, but the class is instantiated in a program.","If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",5.0,1,0.9481683969497681,0.762770071396474,0.8054951429367065,0.44433078169822693
308,When does C plus plus create a default constructor?,"When no constructor exists when one is needed, a parameterless default constructor is declared.","If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",5.0,1,0.9630724787712097,0.7396002616336388,0.8123606443405151,0.7545396089553833
309,When does C plus plus create a default constructor?,"The Compiler creates this automatically for you, unless you specifically create one.","If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",5.0,1,0.9271711111068726,0.5477225575051663,0.6497337818145752,0.6292563676834106
310,When does C plus plus create a default constructor?,In any class that does not explicitly include a constructor.,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",5.0,1,0.9481302499771118,0.6741998624632421,0.7141313552856445,0.429533451795578
311,When does C plus plus create a default constructor?,when no user-defined constructor exists,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",5.0,1,0.8914303183555603,0.632455532033676,0.7043020129203796,0.4637424051761627
312,When does C plus plus create a default constructor?,"If a class does not explicitly include a constructor, the compiler creates one.","If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",5.0,1,0.9787242412567139,0.6831300510639734,0.7929722666740417,0.6378388404846191
313,When does C plus plus create a default constructor?,When you do not provide your own constructor.,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",5.0,1,0.8899229764938354,0.7071067811865476,0.6557123064994812,0.6209591031074524
314,When does C plus plus create a default constructor?,When a class does not explicitly include a constructor.,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",5.0,1,0.9552468061447144,0.6741998624632421,0.8244991302490234,0.286565899848938
315,When does C plus plus create a default constructor?,C plus plus creates a default constructor during compilation if one is not provided.,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",5.0,1,0.938990592956543,0.5345224838248488,0.7200933694839478,0.8108016848564148
316,When does C plus plus create a default constructor?,when a class does not explicitly include a constructor,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",5.0,1,0.9454946517944336,0.6741998624632421,0.8207310438156128,0.3108556568622589
317,When does C plus plus create a default constructor?,The compiler will provide one when class does not explictly include a consructor.,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",5.0,1,0.9478954672813416,0.6172133998483679,0.7910684943199158,0.6250107884407043
318,When does C plus plus create a default constructor?,when the programmer does not explicitly include a constructor,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",5.0,1,0.9409639239311218,0.5656854249492381,0.8172632455825806,0.3947462737560272
319,When does C plus plus create a default constructor?,When one is not explicitly stated.,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",5.0,1,0.8723927736282349,0.0,0.514724612236023,0.11998943984508514
320,When does C plus plus create a default constructor?,when one is not explicitly included by a class,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",5.0,1,0.9179609417915344,0.5773502691896258,0.6676743626594543,0.10384812206029892
321,When does C plus plus create a default constructor?,When you dont specify any constructors.,"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",5.0,1,0.8373239636421204,0.0,0.6917991638183594,0.3894810676574707
322,When does C plus plus create a default constructor?,"at the very beginning when you run a complier, matter a fact in C plus plus it generates its own default constructor for the class provided if no other constructors have been provided by user","If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.",5.0,1,0.9541542530059814,0.47387910220727403,0.7152503728866577,0.7010337114334106
323,How many constructors can be created for a class?,Just one per class.,Unlimited number.,0.0,0,0.6958823204040527,0.0,0.3774745464324951,0.09615868330001831
324,How many constructors can be created for a class?,As many as you want so long as they have different parameters.,Unlimited number.,5.0,1,0.6839136481285095,0.0,0.4801786541938782,0.4647127389907837
325,How many constructors can be created for a class?,"There is no limit to the number of constructors in a class because like functions, constructors can be overloaded.",Unlimited number.,5.0,1,0.7185062170028687,0.31622776601683794,0.45528972148895264,0.3441394567489624
326,How many constructors can be created for a class?,It depends what type of class is being defined. Typically you would have a constructor call for each object.,Unlimited number.,1.5,0,0.6875762343406677,0.0,0.2282685786485672,0.08886201679706573
327,How many constructors can be created for a class?,"In C plus plus, the constructor can be overloaded in that there can be more than one constructor for a class, each having different parameters.",Unlimited number.,5.0,1,0.7061488628387451,0.0,0.2765217125415802,0.25695091485977173
328,How many constructors can be created for a class?,1,Unlimited number.,0.0,0,0.0,0.0,0.0,0.0
329,How many constructors can be created for a class?,any number you want,Unlimited number.,5.0,1,0.719826340675354,0.7071067811865476,0.7754173278808594,0.6506230235099792
330,How many constructors can be created for a class?,One,Unlimited number.,0.0,0,0.0,0.0,0.0,0.0
331,How many constructors can be created for a class?,"by default just one, but they may be overloaded to create as many constructors as necessary",Unlimited number.,5.0,1,0.6695214509963989,0.0,0.3655740022659302,0.23831190168857574
332,How many constructors can be created for a class?,as many as you want,Unlimited number.,5.0,1,0.6240358352661133,0.0,0.7594369649887085,0.7179330587387085
333,How many constructors can be created for a class?,"As many as you want, with different parameters.",Unlimited number.,5.0,1,0.7066975831985474,0.0,0.6111593246459961,0.5426418781280518
334,How many constructors can be created for a class?,infinite,Unlimited number.,5.0,1,0.4406244158744812,0.0,0.7457332611083984,0.617818295955658
335,How many constructors can be created for a class?,as many as you need,Unlimited number.,5.0,1,0.6369789838790894,0.0,0.7471593022346497,0.635631263256073
336,How many constructors can be created for a class?,"As many as are needed, depending on how many variables one wishes to directly modify or leave as default when instantiating an object.",Unlimited number.,5.0,1,0.6927998661994934,0.0,0.47060632705688477,0.39808303117752075
337,How many constructors can be created for a class?,"A very large amount of constructors can be created for any given class through overloading. When two constructors with a different type or number of parameters are created, they are said to be overloaded, and C plus plus can recognize which constructor to use based on the type of the variables that are passed or returned.",Unlimited number.,5.0,1,0.7132704854011536,0.1767766952966369,0.28513234853744507,0.3364482522010803
338,How many constructors can be created for a class?,It depends on the number of objects. Each object should have a constructor.,Unlimited number.,2.5,0,0.7078915238380432,0.447213595499958,0.3428260385990143,0.33609437942504883
339,How many constructors can be created for a class?,"Theoretically unlimited, as long as they are defined by the programmer.",Unlimited number.,5.0,1,0.733884871006012,0.447213595499958,0.6978695392608643,0.39959800243377686
340,How many constructors can be created for a class?,As many as needed.,Unlimited number.,5.0,1,0.6793509721755981,0.0,0.7752590775489807,0.6555242538452148
341,How many constructors can be created for a class?,as many as wanted or needed,Unlimited number.,5.0,1,0.6262311935424805,0.0,0.7299495935440063,0.5932624340057373
342,How many constructors can be created for a class?,several,Unlimited number.,4.5,1,0.0,0.0,0.0,0.0
343,How many constructors can be created for a class?,One,Unlimited number.,0.0,0,0.0,0.0,0.0,0.0
344,How many constructors can be created for a class?,one,Unlimited number.,0.0,0,0.0,0.0,0.0,0.0
345,How many constructors can be created for a class?,There can be infinite constructors as long as the signature is different.,Unlimited number.,5.0,1,0.7086938619613647,0.0,0.47566553950309753,0.48170775175094604
346,How many constructors can be created for a class?,that depends on the number of data members in the class,Unlimited number.,1.5,0,0.6758834719657898,0.447213595499958,0.16250357031822205,0.20112106204032898
347,How many constructors can be created for a class?,one,Unlimited number.,0.0,0,0.0,0.0,0.0,0.0
348,How many constructors can be created for a class?,you can overload constructors as you need,Unlimited number.,5.0,1,0.6061887741088867,0.0,0.5702020525932312,0.43577054142951965
349,How many constructors can be created for a class?,As many as the programmer wants to create.,Unlimited number.,5.0,1,0.6533649563789368,0.0,0.5447289347648621,0.4415895938873291
350,How many constructors can be created for a class?,one,Unlimited number.,0.0,0,0.0,0.0,0.0,0.0
351,How many constructors can be created for a class?,"as many as you want, as long as they each have a unique argument list",Unlimited number.,5.0,1,0.666976809501648,0.0,0.5896832942962646,0.3243598937988281
352,How many constructors can be created for a class?,as many as the user decides to use.,Unlimited number.,5.0,1,0.6774042844772339,0.0,0.6718924045562744,0.569109320640564
353,What is the difference between a function prototype and a function definition?,A function definition does not require any additional information that needs to be passed inside its parenthesis to execute. While a definition prototype requires more than one parameters to be passed in order to complete its task.,"A function prototype includes the function signature, i. e., the name of the function, the return type, and the parameters 's type. The function definition includes the actual body of the function.",4.0,1,0.9045074582099915,0.3546496828075954,0.4542437195777893,0.47993963956832886
354,What is the difference between a function prototype and a function definition?,"The FUNCTION PROTOTYPE is where the programmer declares that he or she is using a function other than main . This is like declaring a variable, the programmer knows that he or she will be using in the future, but has yet to say where they are going to use it, or how. This is answers the question who, it gives the function a name and character. The function prototype, by common practice is placed at the beginning of the program after the includes and before main . The FUNCTION DEFINITION is the guts of the function. This is where the programmer decides what the function is going to do and tells it how to do it. It takes whatever information it is given and performs the operations. It works sort of like the brain, the brain takes in input and based upon that input performs in some way producing an output. The function defintion is placed outside of main and any other functions. A function is its own entity and should be thought of as such.","A function prototype includes the function signature, i. e., the name of the function, the return type, and the parameters 's type. The function definition includes the actual body of the function.",2.5,0,0.9286468029022217,0.6907896231799036,0.6632840037345886,0.4800373911857605
355,What is the difference between a function prototype and a function definition?,"A function prototype tells the compiler the function name, return type and the number and type of parameters without revealing the implementations contained in the function definition.","A function prototype includes the function signature, i. e., the name of the function, the return type, and the parameters 's type. The function definition includes the actual body of the function.",5.0,1,0.9725953936576843,0.834847109936722,0.7240930795669556,0.658405065536499
356,What is the difference between a function prototype and a function definition?,Function prototype is a declaration. Function definitionswith multiple parametersoften require more than one piece of information. to perform their tasks.,"A function prototype includes the function signature, i. e., the name of the function, the return type, and the parameters 's type. The function definition includes the actual body of the function.",3.0,0,0.9170605540275574,0.5765566601970551,0.7075426578521729,0.6451611518859863
357,What is the difference between a function prototype and a function definition?,"A function prototype is a declaration of a function that tells the compiler the function 's name, its return type and the types of its parameters.","A function prototype includes the function signature, i. e., the name of the function, the return type, and the parameters 's type. The function definition includes the actual body of the function.",5.0,1,0.9663809537887573,0.8574929257125442,0.8917083740234375,0.8311347961425781
358,What is the difference between a function prototype and a function definition?,A prototype shows only return types and necessary parameters. The definition includes names for those parameters and defines what the object is actually capable of doing.,"A function prototype includes the function signature, i. e., the name of the function, the return type, and the parameters 's type. The function definition includes the actual body of the function.",4.5,1,0.9358579516410828,0.600245047998781,0.7761072516441345,0.6295643448829651
359,What is the difference between a function prototype and a function definition?,prototype only tells the user what data types go into a function and what type is returned.,"A function prototype includes the function signature, i. e., the name of the function, the return type, and the parameters 's type. The function definition includes the actual body of the function.",4.5,1,0.9161641001701355,0.5163977794943223,0.6971880197525024,0.5905810594558716
360,What is the difference between a function prototype and a function definition?,Function prototype is located in the. h file and only contains the access function name and paramater type. Function definition contains the code for the function to perform its activity.,"A function prototype includes the function signature, i. e., the name of the function, the return type, and the parameters 's type. The function definition includes the actual body of the function.",4.5,1,0.9552080631256104,0.7869910029407436,0.7486487030982971,0.6712298393249512
361,What is the difference between a function prototype and a function definition?,"a function prototype is used to reference the compiler to a function that will be defined later on, a function definition is the actual function itself, complete with return type, parameters, etc ...","A function prototype includes the function signature, i. e., the name of the function, the return type, and the parameters 's type. The function definition includes the actual body of the function.",4.0,1,0.9569253921508789,0.8750750267954222,0.8672792315483093,0.7643285989761353
362,What is the difference between a function prototype and a function definition?,A function prototype describes a class 's public interface without revealing the class 's member function implementations,"A function prototype includes the function signature, i. e., the name of the function, the return type, and the parameters 's type. The function definition includes the actual body of the function.",4.5,1,0.8917334675788879,0.5570066518960167,0.6467007994651794,0.4147043526172638
363,What is the difference between a function prototype and a function definition?,"Function definitions are just that, the definition. The prototype is what the compiler uses to check that calls to function are correct.","A function prototype includes the function signature, i. e., the name of the function, the return type, and the parameters 's type. The function definition includes the actual body of the function.",2.0,0,0.9271616339683533,0.6405126152203487,0.7727404832839966,0.6237239837646484
364,What is the difference between a function prototype and a function definition?,a prototype does not include any actual code where the function has all the code that is executed in the program.,"A function prototype includes the function signature, i. e., the name of the function, the return type, and the parameters 's type. The function definition includes the actual body of the function.",3.0,0,0.9251711368560791,0.40618119722996165,0.48848259449005127,0.43878597021102905
365,What is the difference between a function prototype and a function definition?,a prototype declares what will be used in the program and the definition,"A function prototype includes the function signature, i. e., the name of the function, the return type, and the parameters 's type. The function definition includes the actual body of the function.",3.0,0,0.8858698606491089,0.632455532033676,0.7552306652069092,0.586667001247406
366,What is the difference between a function prototype and a function definition?,"A function prototype lays out the name, return type, and the number and types of parameters the function expects to receive in a certain order. The details for function prototypes are in the function definition.","A function prototype includes the function signature, i. e., the name of the function, the return type, and the parameters 's type. The function definition includes the actual body of the function.",5.0,1,0.9697128534317017,0.8263342440128468,0.9122601747512817,0.7924522757530212
367,What is the difference between a function prototype and a function definition?,"A function definition is the code that defines the function placed in the brackets that determines that function 's operation. A function prototype shows the function 's public interface without exposing implementation. It shows name, return type and type of paramaters.","A function prototype includes the function signature, i. e., the name of the function, the return type, and the parameters 's type. The function definition includes the actual body of the function.",5.0,1,0.96656733751297,0.8251369970070348,0.8339345455169678,0.6740203499794006
368,What is the difference between a function prototype and a function definition?,"A function prototype is just a declaration of the function existing, and cant be used as an actual function. A function has to be created with a definition within to tell the compiler what the function does.","A function prototype includes the function signature, i. e., the name of the function, the return type, and the parameters 's type. The function definition includes the actual body of the function.",3.5,0,0.9455087184906006,0.8819171036881971,0.7154415845870972,0.46068790555000305
369,What is the difference between a function prototype and a function definition?,the Prototype creates a framework to call the function definition. While a function definition is where the function is actually programmed out and created into a final product.,"A function prototype includes the function signature, i. e., the name of the function, the return type, and the parameters 's type. The function definition includes the actual body of the function.",4.5,1,0.9388049840927124,0.7559289460184544,0.7953459024429321,0.7204703092575073
370,What is the difference between a function prototype and a function definition?,A function prototype describes the class 's public interface without providing how the function works. A function definition contains the inner workings of the function.,"A function prototype includes the function signature, i. e., the name of the function, the return type, and the parameters 's type. The function definition includes the actual body of the function.",4.5,1,0.9557101726531982,0.8148148148148149,0.6065890192985535,0.36197733879089355
371,What is the difference between a function prototype and a function definition?,"prototype states all functions in that class before compilation, where the definition actually holds the source for the functions","A function prototype includes the function signature, i. e., the name of the function, the return type, and the parameters 's type. The function definition includes the actual body of the function.",3.5,0,0.931049644947052,0.4082482904638631,0.7692909240722656,0.5923323631286621
372,What is the difference between a function prototype and a function definition?,"Function prototypes tell the compiler the function names, its return type, and the types of its parameters where as, function definitions actually implement the member functions.","A function prototype includes the function signature, i. e., the name of the function, the return type, and the parameters 's type. The function definition includes the actual body of the function.",5.0,1,0.9662211537361145,0.7275476020141094,0.8675195574760437,0.799778938293457
373,What is the difference between a function prototype and a function definition?,A function prototype just specifies parameters. A function definition includes parameters and a code body.,"A function prototype includes the function signature, i. e., the name of the function, the return type, and the parameters 's type. The function definition includes the actual body of the function.",4.0,1,0.9242498278617859,0.764093177458341,0.842128336429596,0.6824203729629517
374,What is the difference between a function prototype and a function definition?,Function prototypes describe the class 's public interface,"A function prototype includes the function signature, i. e., the name of the function, the return type, and the parameters 's type. The function definition includes the actual body of the function.",4.5,1,0.8669693470001221,0.447213595499958,0.7618252635002136,0.5581057667732239
375,What is the difference between a function prototype and a function definition?,"A prototype only declares name, return type, and input type. A definition also defines the scope, variables, process, and return function","A function prototype includes the function signature, i. e., the name of the function, the return type, and the parameters 's type. The function definition includes the actual body of the function.",4.5,1,0.942683219909668,0.5573704017131538,0.732979416847229,0.5861698389053345
376,What is the difference between a function prototype and a function definition?,"a function prototype simply declares the functions parameters, the function definition includes any necessary variables and the function 's actual code","A function prototype includes the function signature, i. e., the name of the function, the return type, and the parameters 's type. The function definition includes the actual body of the function.",4.0,1,0.9467390179634094,0.8174238913695991,0.8798210024833679,0.7409754991531372
377,What is the difference between a function prototype and a function definition?,"A functgion prototype is a declaration of a function, while function definition specifies what a function does","A function prototype includes the function signature, i. e., the name of the function, the return type, and the parameters 's type. The function definition includes the actual body of the function.",3.5,0,0.9260638356208801,0.8447367914999205,0.9077997207641602,0.58929443359375
378,What is the difference between a function prototype and a function definition?,"in a function prototype you include the return type, the name of the function, and its parameters if any are needed. in a function definition you write the code of what the function will do.","A function prototype includes the function signature, i. e., the name of the function, the return type, and the parameters 's type. The function definition includes the actual body of the function.",5.0,1,0.9654257297515869,0.9052038109696288,0.8926309943199158,0.8626531362533569
379,What is the difference between a function prototype and a function definition?,"A function definition contains all the code for a function to work. A function prototype just shows the output, input and function name.","A function prototype includes the function signature, i. e., the name of the function, the return type, and the parameters 's type. The function definition includes the actual body of the function.",4.5,1,0.956718921661377,0.8467803948114512,0.8134778738021851,0.611323893070221
380,What is the difference between a function prototype and a function definition?,"function prototype describe the class 's public interface without revealing the class 's member function implementations, function definitions show what implementations are being done","A function prototype includes the function signature, i. e., the name of the function, the return type, and the parameters 's type. The function definition includes the actual body of the function.",4.5,1,0.9161669611930847,0.6542886560876247,0.708705723285675,0.509672999382019
381,What is the difference between a function prototype and a function definition?,"A function prototype only names the function, its return type, and it is argument list, while a definition defines the above as well as what the function actually does.","A function prototype includes the function signature, i. e., the name of the function, the return type, and the parameters 's type. The function definition includes the actual body of the function.",5.0,1,0.9505786895751953,0.8111071056538129,0.7747556567192078,0.7427273988723755
382,What is the difference between a function prototype and a function definition?,function prototype describes a classes interface without reviling whatever is inside as for the function definition cannot do that.,"A function prototype includes the function signature, i. e., the name of the function, the return type, and the parameters 's type. The function definition includes the actual body of the function.",4.5,1,0.9194183945655823,0.6963106238227914,0.4855917692184448,0.40363454818725586
383,What is the role of a header-file?,the role of a header file list all the functions a class can do while hiding the inner workings of its functions,"To store a class interface, including data members and member function prototypes.",4.5,1,0.8721180558204651,0.2886751345948129,0.7038946151733398,0.4245542883872986
384,What is the role of a header-file?,The main role of header file is it is used to share information among various files.,"To store a class interface, including data members and member function prototypes.",3.0,0,0.8665666580200195,0.0,0.7137593030929565,0.44588375091552734
385,What is the role of a header-file?,Header files separate files in which classes are defined and allow the compiler to recognize classes when used elsewhere.,"To store a class interface, including data members and member function prototypes.",3.5,0,0.8640450239181519,0.0,0.7806748747825623,0.5763230323791504
386,What is the role of a header-file?,No,"To store a class interface, including data members and member function prototypes.",0.0,0,0.0,0.0,0.0,0.0
387,What is the role of a header-file?,A header file consists of reusable source code such as a class in a file that by convention has a. h filename extension. This differs from. cpp files that contain source-code.,"To store a class interface, including data members and member function prototypes.",3.5,0,0.8636908531188965,0.2085144140570748,0.7360228300094604,0.4670169949531555
388,What is the role of a header-file?,"To provide information about the contents of a library. It includes the definition of classes, declarations of functions, data types, and constants.","To store a class interface, including data members and member function prototypes.",4.5,1,0.9083419442176819,0.2886751345948129,0.841423511505127,0.2781669795513153
389,What is the role of a header-file?,the header file shows the user what types go into and come out of a function but does not allow a user to manipulate the actual code for the function.,"To store a class interface, including data members and member function prototypes.",4.5,1,0.8877548575401306,0.47140452079103173,0.4280660152435303,0.47791504859924316
390,What is the role of a header-file?,Header files declares the class member functions.,"To store a class interface, including data members and member function prototypes.",3.5,0,0.8615158200263977,0.5773502691896258,0.8974329233169556,0.655371904373169
391,What is the role of a header-file?,A header file allows for the separation of declaration and implementation into separate files.,"To store a class interface, including data members and member function prototypes.",4.0,1,0.8410348296165466,0.0,0.6048967838287354,0.4869500994682312
392,What is the role of a header-file?,the header file has access to the C plus plus Standard Library and makes certain classes like class string work.,"To store a class interface, including data members and member function prototypes.",1.5,0,0.8863301873207092,0.25,0.7718000411987305,0.4288408160209656
393,What is the role of a header-file?,Instruct the compiler on how to interface with library and user-written components.,"To store a class interface, including data members and member function prototypes.",2.5,0,0.8824169039726257,0.3779644730092273,0.7835054993629456,0.5746142864227295
394,What is the role of a header-file?,create a comon area to contain reusable functions.,"To store a class interface, including data members and member function prototypes.",3.0,0,0.8324636816978455,0.0,0.6445189714431763,0.33655762672424316
395,What is the role of a header-file?,to declare the functions being used in the classes,"To store a class interface, including data members and member function prototypes.",3.0,0,0.8402594327926636,0.0,0.8927581310272217,0.6361066102981567
396,What is the role of a header-file?,"include hat. h allows the use of the hat container, so called from the act of pulling names from a hat. The header file for hat includes functions for storage and retrieval of it is contents, mainly put , peek , and pull .","To store a class interface, including data members and member function prototypes.",1.5,0,0.8623799085617065,0.0,0.640633761882782,0.22060254216194153
397,What is the role of a header-file?,To hold reusable content or modules separate from the actual source-code file that can be easily referenced and employed for different programs.,"To store a class interface, including data members and member function prototypes.",4.0,1,0.8792002201080322,0.0,0.6077368259429932,0.35760682821273804
398,What is the role of a header-file?,a header file is a file used to store a list of prototye functions and data members.,"To store a class interface, including data members and member function prototypes.",5.0,1,0.9129068851470947,0.5000000000000001,0.8149707317352295,0.49007511138916016
399,What is the role of a header-file?,"A header file is a cross communication method between source files, to help limit the size of each individual program. Without header files a program will be 1 large lump of code and thus fairly hard to debug and traverse.","To store a class interface, including data members and member function prototypes.",3.5,0,0.8855369091033936,0.0,0.3456302881240845,0.3810948431491852
400,What is the role of a header-file?,It contains reusable source code for use by other classes.,"To store a class interface, including data members and member function prototypes.",3.0,0,0.843299925327301,0.0,0.7417358756065369,0.4388631582260132
401,What is the role of a header-file?,"to separate the source code from the main function, allows the methods or classes to be included in the program without direct coding. allows re usability.","To store a class interface, including data members and member function prototypes.",3.5,0,0.9066246151924133,0.25,0.5898948907852173,0.38539573550224304
402,What is the role of a header-file?,Header files have reusable source code in a file that a programer can use.,"To store a class interface, including data members and member function prototypes.",2.5,0,0.8401415348052979,0.0,0.7537189722061157,0.4218190312385559
403,What is the role of a header-file?,To hide the definition and details of a class. Also to help readability of the main C plus plus file.,"To store a class interface, including data members and member function prototypes.",3.5,0,0.8617584705352783,0.2886751345948129,0.6176342964172363,0.40366673469543457
404,What is the role of a header-file?,To allow the compiler to recognize the classes when used elsewhere.,"To store a class interface, including data members and member function prototypes.",3.5,0,0.8367556929588318,0.0,0.8007683753967285,0.518904447555542
405,What is the role of a header-file?,"A header file declares a class, its data, and functions available through that class.","To store a class interface, including data members and member function prototypes.",4.0,1,0.9226722717285156,0.670820393249937,0.9055948257446289,0.6712542176246643
406,What is the role of a header-file?,header files contain code which can be used in multiple files,"To store a class interface, including data members and member function prototypes.",3.0,0,0.7976852059364319,0.0,0.7506054043769836,0.40578269958496094
407,What is the role of a header-file?,Allow compiler to recognize the classes when used elsewhere,"To store a class interface, including data members and member function prototypes.",3.0,0,0.8104684352874756,0.0,0.7862093448638916,0.5252954363822937
408,What is the role of a header-file?,Allow compiler to recognize the classes when used elsewhere,"To store a class interface, including data members and member function prototypes.",3.5,0,0.8104684352874756,0.0,0.7862093448638916,0.5252954363822937
409,What is the role of a header-file?,To promote function reusuablitly,"To store a class interface, including data members and member function prototypes.",3.0,0,0.7377256155014038,0.5773502691896258,0.4611232876777649,0.26226580142974854
410,What is the role of a header-file?,class definitions are placed here,"To store a class interface, including data members and member function prototypes.",3.0,0,0.7591605186462402,0.5773502691896258,0.8072726726531982,0.5759422183036804
411,What is the role of a header-file?,A header file usually contains class and function prototypes.,"To store a class interface, including data members and member function prototypes.",4.5,1,0.8773017525672913,0.6546536707079773,0.8566914796829224,0.568827748298645
412,What is the role of a header-file?,contains all the standard C plus plus library 's i. e. string,"To store a class interface, including data members and member function prototypes.",1.0,0,0.7737259268760681,0.0,0.49459728598594666,0.16995032131671906
413,What does a function signature include?,"It includes the name of the program, the type of parameters it can take. It should also include a brief description of what the function does.",The name of the function and the types of the parameters.,4.5,1,0.9350326061248779,0.4714045207910317,0.7315656542778015,0.6235073804855347
414,What does a function signature include?,it includes the specific information about the function such as input and output variable types and how many of each.,The name of the function and the types of the parameters.,3.0,0,0.9272921085357666,0.5000000000000001,0.8014249801635742,0.6433212757110596
415,What does a function signature include?,The function signature includes the name of the function and the types of its arguments.,The name of the function and the types of the parameters.,5.0,1,0.9778409004211426,0.7500000000000002,0.8785454034805298,0.7623041868209839
416,What does a function signature include?,"A function signature consists of the function prototype. This tells you the general information about a function, its name, parameters, what scope it is in, and other miscellaneous information.",The name of the function and the types of the parameters.,4.5,1,0.9199138879776001,0.6172133998483678,0.8468260169029236,0.6595051288604736
417,What does a function signature include?,It includes the name of the function and the types of its arguments.,The name of the function and the types of the parameters.,5.0,1,0.9743108153343201,0.7071067811865476,0.9081703424453735,0.7071650624275208
418,What does a function signature include?,"Name, paramaters, scope, and other general function information",The name of the function and the types of the parameters.,4.5,1,0.8305585980415344,0.447213595499958,0.7667757868766785,0.6282835006713867
419,What does a function signature include?,It includes a function name and parameter list. Does not include return type. Function signatures must be different.,The name of the function and the types of the parameters.,5.0,1,0.8833842873573303,0.5547001962252291,0.5612620711326599,0.810757040977478
420,What does a function signature include?,input parameters and return type,The name of the function and the types of the parameters.,3.0,0,0.7786155343055725,0.5,0.8981901407241821,0.558366060256958
421,What does a function signature include?,The portion of the function prototyp tha has the function name and the arguments but NOT the return type.,The name of the function and the types of the parameters.,5.0,1,0.9519307613372803,0.6324555320336759,0.5139327645301819,0.5697880387306213
422,What does a function signature include?,Name of the function and the types of it is arguments,The name of the function and the types of the parameters.,5.0,1,0.966659665107727,0.8164965809277261,0.9052382111549377,0.6571114659309387
423,What does a function signature include?,The name of the function and the types of its arguments.,The name of the function and the types of the parameters.,5.0,1,0.9804397821426392,0.8164965809277261,0.9042074084281921,0.7405654788017273
424,What does a function signature include?,Includes the name of the function and the types of its arguments.,The name of the function and the types of the parameters.,5.0,1,0.978424072265625,0.7071067811865476,0.9269359111785889,0.7141935229301453
425,What does a function signature include?,"identification of a function and the data types of its parameters, it has the name, and the data type variables",The name of the function and the types of the parameters.,5.0,1,0.9450443983078003,0.5477225575051663,0.9607042074203491,0.8525300621986389
426,What does a function signature include?,"a return type, and input parameters",The name of the function and the types of the parameters.,3.0,0,0.8150328397750854,0.5,0.9015250205993652,0.5669856071472168
427,What does a function signature include?,The function signature includes the method name and the input types.,The name of the function and the types of the parameters.,5.0,1,0.9445365071296692,0.5773502691896258,0.8558050394058228,0.6650465130805969
428,What does a function signature include?,"A function signature includes the name of the function and types of arguments, but not the return type.",The name of the function and the types of the parameters.,5.0,1,0.9547019004821777,0.670820393249937,0.5099930763244629,0.6319657564163208
429,What does a function signature include?,The signature can include a result type and thrown errors.,The name of the function and the types of the parameters.,2.0,0,0.8803990483283997,0.0,0.5924087762832642,0.2303423136472702
430,What does a function signature include?,"function name, and input paramaters",The name of the function and the types of the parameters.,5.0,1,0.8074242472648621,0.5773502691896258,0.8852302432060242,0.7427295446395874
431,What does a function signature include?,"The name of the function and the types of its arguments. This includes the number, type, and order the parameters appear in.",The name of the function and the types of the parameters.,5.0,1,0.9695543646812439,0.5773502691896257,0.8610081672668457,0.7405656576156616
432,What does a function signature include?,the name of the function and the types of its arguments,The name of the function and the types of the parameters.,5.0,1,0.9764137268066406,0.8164965809277261,0.9187642335891724,0.7415587902069092
433,What does a function signature include?,A function signature includes the name of the function and the types of its arguments,The name of the function and the types of the parameters.,5.0,1,0.9660409688949585,0.7500000000000002,0.8796002864837646,0.755345344543457
434,What does a function signature include?,"A function signature includes a function 's return type, parameters and semi-colon.",The name of the function and the types of the parameters.,3.0,0,0.8418689370155334,0.6396021490668313,0.8881855010986328,0.6617504954338074
435,What does a function signature include?,the name of the function and the types of its arguments,The name of the function and the types of the parameters.,5.0,1,0.9764137268066406,0.8164965809277261,0.9187642335891724,0.7415587902069092
436,What does a function signature include?,the function 's name and parameters,The name of the function and the types of the parameters.,5.0,1,0.9219807386398315,1.0000000000000002,0.9361496567726135,0.8754624128341675
437,What does a function signature include?,The name of the function and the types of its arguments.,The name of the function and the types of the parameters.,5.0,1,0.9804397821426392,0.8164965809277261,0.9042074084281921,0.7405654788017273
438,What does a function signature include?,The portion of a function prototype that includes the name of the function and the types of its arguments,The name of the function and the types of the parameters.,5.0,1,0.9662386775016785,0.7071067811865475,0.9008556604385376,0.7193092107772827
439,What does a function signature include?,the name of the function and its parameters,The name of the function and the types of the parameters.,5.0,1,0.976073682308197,1.0000000000000002,0.9633246660232544,0.9048640727996826
440,What does a function signature include?,The function name and parameters,The name of the function and the types of the parameters.,5.0,1,0.9185192584991455,1.0000000000000002,0.9429588317871094,0.8915819525718689
441,What does a function signature include?,name of function and types of arguments,The name of the function and the types of the parameters.,5.0,1,0.92775958776474,0.8164965809277261,0.892501950263977,0.7016862630844116
442,What does a function signature include?,a function 's return type and parameter list,The name of the function and the types of the parameters.,3.0,0,0.86379075050354,0.447213595499958,0.9021358489990234,0.6942466497421265
443,What does a function signature include?,"it includes the name of the function, and the types of its arguments. it does not specify the function return type. Function in the same scope must have unqiue signatures.",The name of the function and the types of the parameters.,5.0,1,0.9487042427062988,0.6488856845230502,0.64598548412323,0.7068368196487427
444,What is the scope of global variables?,Any functions that follows their deceleration that are in the source code file are allowed to have access the variables. Also global scope variables retrain their value throughout the execution of the program.,File scope.,5.0,1,0.7154626250267029,0.33333333333333337,0.49486756324768066,0.27667346596717834
445,What is the scope of global variables?,they can be accessed by any C plus plus file anywhere.,File scope.,2.5,0,0.7286445498466492,0.4082482904638631,0.5298950672149658,0.39613252878189087
446,What is the scope of global variables?,Global variables have file scope.,File scope.,5.0,1,0.8700993061065674,0.7071067811865476,0.8416577577590942,0.624211847782135
447,What is the scope of global variables?,The scope of global variables are created by placing variable declarations outside any class or function definition. Global variables retain their values throughout the execution of the program and they can be referenced by any function that follows their declarations or definitions in the source file.,File scope.,2.5,0,0.7165997624397278,0.25000000000000006,0.5048192739486694,0.3311398923397064
448,What is the scope of global variables?,A global variable is an identifier that retains it is value throughout the execution of the program. It has file scope.,File scope.,5.0,1,0.7482172250747681,0.4714045207910317,0.6625435948371887,0.1453421413898468
449,What is the scope of global variables?,Global Variables can be used in any function as long as the appropriate. h file that holds the variable is included,File scope.,4.0,1,0.7272278666496277,0.316227766016838,0.5495779514312744,0.17765752971172333
450,What is the scope of global variables?,They can be accessed by any part of the program. It can be referenced by any function that follows the declarations or definitions in the source file.,File scope.,5.0,1,0.7264060378074646,0.3333333333333333,0.5312198400497437,0.27298402786254883
451,What is the scope of global variables?,can be accesed by any classes that have and object of that variables class in it,File scope.,3.0,0,0.6118985414505005,0.0,0.5890733003616333,0.16900773346424103
452,What is the scope of global variables?,Global variables have file-scope. The variable is know to all functions throught the file,File scope.,5.0,1,0.8258345127105713,0.6396021490668313,0.6560009717941284,0.6435668468475342
453,What is the scope of global variables?,The entire program,File scope.,4.5,1,0.5348964929580688,0.0,0.5164979100227356,0.3581896126270294
454,What is the scope of global variables?,They have file scope when placed outside a function.,File scope.,5.0,1,0.7862240672111511,0.632455532033676,0.7193220853805542,0.6046207547187805
455,What is the scope of global variables?,File scope.,File scope.,5.0,1,0.9999995231628418,1.0000000000000002,0.9999999403953552,0.9999998807907104
456,What is the scope of global variables?,They can be used throughout the program,File scope.,4.5,1,0.5557326674461365,0.0,0.5050016641616821,0.20887774229049683
457,What is the scope of global variables?,Global variable can b accessed by any class wit an object in the variables class,File scope.,3.0,0,0.6748982667922974,0.0,0.5067816376686096,0.12494353204965591
458,What is the scope of global variables?,The scope of global variables is at the file level.,File scope.,5.0,1,0.780493974685669,0.632455532033676,0.7886204719543457,0.5309047698974609
459,What is the scope of global variables?,Global variables all have file scope.,File scope.,5.0,1,0.8548026084899902,0.7071067811865476,0.706407904624939,0.5412606596946716
460,What is the scope of global variables?,it is accessible by all functions within a program,File scope.,4.5,1,0.6252573132514954,0.0,0.5130887627601624,0.29900026321411133
461,What is the scope of global variables?,"variables accessible anywhere in the program, as long as they are public.",File scope.,4.5,1,0.6506053805351257,0.0,0.49410295486450195,0.2757195830345154
462,What is the scope of global variables?,They can be referenced by any function following their declaration or definition inside the source file.,File scope.,5.0,1,0.7416366338729858,0.3535533905932738,0.613690972328186,0.3748379051685333
463,What is the scope of global variables?,"globally, anywhere in the program.",File scope.,4.5,1,0.6292675137519836,0.0,0.552839994430542,0.17093642055988312
464,What is the scope of global variables?,Global variables have a file scope,File scope.,5.0,1,0.8108620047569275,0.7071067811865476,0.840951681137085,0.5931976437568665
465,What is the scope of global variables?,The entire program.,File scope.,4.5,1,0.6553035378456116,0.0,0.5867164134979248,0.3698083758354187
466,What is the scope of global variables?,throughout the execution of the program,File scope.,4.5,1,0.5454360246658325,0.0,0.5749619007110596,0.23764236271381378
467,What is the scope of global variables?,"If a variable is declared global, any function or class can use that variable.",File scope.,4.5,1,0.6850472688674927,0.0,0.640700101852417,0.2168051302433014
468,What is the scope of global variables?,The entire program or file.,File scope.,5.0,1,0.7931312322616577,0.5773502691896258,0.733454167842865,0.5079516172409058
469,What is the scope of global variables?,throught the programm,File scope.,4.5,1,0.46108877658843994,0.0,0.6814491748809814,0.1457303762435913
470,What is the scope of global variables?,the whole code,File scope.,4.5,1,0.5684767365455627,0.0,0.5680385231971741,0.3024088740348816
471,What is the scope of global variables?,File scope,File scope.,5.0,1,0.9386091232299805,1.0000000000000002,0.9842343330383301,0.9792231321334839
472,What is the scope of global variables?,can be referenced by any function that follows their declarations or definitions in the source file,File scope.,5.0,1,0.7278595566749573,0.3779644730092273,0.6604567766189575,0.4148881733417511
473,What is the scope of global variables?,global variables have program scopeaccessible anywhere in program,File scope.,4.5,1,0.616386353969574,0.0,0.5359776616096497,0.42147529125213623
474,What is the scope of global variables?,variables that exist throught the entire script. their values can be changed anytime in the code and fucntions.,File scope.,4.5,1,0.6872930526733398,0.0,0.44206923246383667,0.33128660917282104
475,How does the compiler handle inline functions?,It expands the function 's definition in that place. Once the functions is called you can use it as many times as you need. The compiler just expands on the function.,It makes a copy of the function code in every place where a function call is made.,4.5,1,0.9572428464889526,0.5423261445466405,0.6910079717636108,0.3829820156097412
476,How does the compiler handle inline functions?,"When the compiler inline-expands a function call, the function 's code gets inserted into the caller 's code streamconceptually similar to what happens with a define macro. This can, depending on a zillion other things, improve performance, because the optimizer can procedurally integrate the called code optimize the called code into the caller.",It makes a copy of the function code in every place where a function call is made.,4.5,1,0.9525692462921143,0.5218624584427539,0.6450166702270508,0.5747244358062744
477,How does the compiler handle inline functions?,The inline keyword advises the compiler to copy the function 's code in place to avoid function calls; however the compiler can and typically does ignore the inline qualifier for all but the smallest functions.,It makes a copy of the function code in every place where a function call is made.,5.0,1,0.9279112219810486,0.529150262212918,0.4430781900882721,0.520058274269104
478,How does the compiler handle inline functions?,The compiler can ignore the inline qualifier and typically does so for all but the smallest functions.,It makes a copy of the function code in every place where a function call is made.,3.0,0,0.9067612886428833,0.0,0.392083078622818,0.3371990919113159
479,How does the compiler handle inline functions?,Placing the qualifier inline before a function 's return type in the function definition advises the compiler to generate a copy of the function 's code in place to avoid a function call.,It makes a copy of the function code in every place where a function call is made.,5.0,1,0.9554359316825867,0.7720486469779562,0.5798938870429993,0.5935540199279785
480,How does the compiler handle inline functions?,You declare your inline function in the header or before your int main . You then can call that function at anytime in your main program quickly and easily.,It makes a copy of the function code in every place where a function call is made.,2.0,0,0.9268670678138733,0.5,0.7651161551475525,0.46806347370147705
481,How does the compiler handle inline functions?,"It expands a small function out ... making your code longer, but also makes it run faster.",It makes a copy of the function code in every place where a function call is made.,4.0,1,0.9274668097496033,0.5443310539518174,0.26278936862945557,0.32890474796295166
482,How does the compiler handle inline functions?,the function is not treated as a separate unit like other functions,It makes a copy of the function code in every place where a function call is made.,3.5,0,0.9135347008705139,0.4082482904638631,0.26386362314224243,0.33953857421875
483,How does the compiler handle inline functions?,"When the program compiles, it will copy the function inplace, avoiding a function call.",It makes a copy of the function code in every place where a function call is made.,5.0,1,0.930232584476471,0.7453559924999299,0.527323305606842,0.5630311965942383
484,How does the compiler handle inline functions?,"It replaces all instances of that function call with the inline code itself, resulting in longer but faster programs.",It makes a copy of the function code in every place where a function call is made.,5.0,1,0.9314658641815186,0.447213595499958,0.5323208570480347,0.5311176776885986
485,How does the compiler handle inline functions?,The compiler can ignore the inline qualifier and typically does so for all but the smallest functions.,It makes a copy of the function code in every place where a function call is made.,3.0,0,0.9067612886428833,0.0,0.392083078622818,0.3371990919113159
486,How does the compiler handle inline functions?,Ignores the inline qualifier and typically does so for all but the smallest functions.,It makes a copy of the function code in every place where a function call is made.,3.0,0,0.897368848323822,0.0,0.25412866473197937,0.21697962284088135
487,How does the compiler handle inline functions?,If the function is small enough it will expand it but it will run faster as it will avoid making so many calls to the function.,It makes a copy of the function code in every place where a function call is made.,4.5,1,0.9248871207237244,0.6030226891555273,0.150161474943161,0.23185671865940094
488,How does the compiler handle inline functions?,it treats them as the same function,It makes a copy of the function code in every place where a function call is made.,2.0,0,0.9113754034042358,0.7071067811865476,0.4563572406768799,0.44097548723220825
489,How does the compiler handle inline functions?,"Inline functions are copied in place, instead of being referenced.",It makes a copy of the function code in every place where a function call is made.,5.0,1,0.8778775930404663,0.4082482904638631,0.399188756942749,0.37582045793533325
490,How does the compiler handle inline functions?,"For inline functions, the compiler creates a copy of the function 's code in place so it does not have to make a function call and add to the function call stack.",It makes a copy of the function code in every place where a function call is made.,5.0,1,0.9694408774375916,0.7606388292556652,0.6181951761245728,0.5768417119979858
491,How does the compiler handle inline functions?,it generates a copy of the function 's coding which eliminates calling the function,It makes a copy of the function code in every place where a function call is made.,5.0,1,0.9358038902282715,0.7453559924999299,0.5172349214553833,0.6842597723007202
492,How does the compiler handle inline functions?,not answered,It makes a copy of the function code in every place where a function call is made.,0.0,0,0.6248045563697815,0.0,0.019902652129530907,0.08864220231771469
493,How does the compiler handle inline functions?,It generates a copy of the function 's code by by inserting it in the program.,It makes a copy of the function code in every place where a function call is made.,4.5,1,0.9408128261566162,0.6666666666666669,0.791722297668457,0.7331200838088989
494,How does the compiler handle inline functions?,"tells the compiler to make a copy of function 's code in place to avoid a function call. it typically ignores it, except for the smallest functions.",It makes a copy of the function code in every place where a function call is made.,5.0,1,0.9728023409843445,0.6831300510639734,0.455780565738678,0.6235441565513611
495,How does the compiler handle inline functions?,The compiler can ignore the inline qualifier and typically does so for all but the smallest functions.,It makes a copy of the function code in every place where a function call is made.,2.0,0,0.9067612886428833,0.0,0.392083078622818,0.3371990919113159
496,How does the compiler handle inline functions?,"Multiple copies of the function code are inserted into the program, making it bigger.",It makes a copy of the function code in every place where a function call is made.,4.5,1,0.9316505789756775,0.474341649025257,0.5889954566955566,0.5985009670257568
497,How does the compiler handle inline functions?,compiler ignores inline qualifier,It makes a copy of the function code in every place where a function call is made.,2.5,0,0.3456575572490692,0.0,0.2005096971988678,0.1769615262746811
498,How does the compiler handle inline functions?,"It generates a copy of the function, if it is needed again.",It makes a copy of the function code in every place where a function call is made.,3.5,0,0.9631387591362,0.670820393249937,0.689300537109375,0.547105073928833
499,How does the compiler handle inline functions?,"The complier includes copies of inline functions instead of making function calls, but usually only with very small functions.",It makes a copy of the function code in every place where a function call is made.,5.0,1,0.9206355214118958,0.2672612419124244,0.28436657786369324,0.4405503273010254
500,How does the compiler handle inline functions?,Compiler generate a copy of the function 's code in placewhen appropriateto avoid a function call,It makes a copy of the function code in every place where a function call is made.,5.0,1,0.9342507719993591,0.7385489458759966,0.5646601915359497,0.5709505081176758
501,How does the compiler handle inline functions?,"instead of calling the function every time it is invoked, the compiler will replace the function call with a copy of the function body",It makes a copy of the function code in every place where a function call is made.,5.0,1,0.9628158211708069,0.7592566023652967,0.6304142475128174,0.6314278841018677
502,How does the compiler handle inline functions?,Expands the function into the program,It makes a copy of the function code in every place where a function call is made.,4.0,1,0.8430218696594238,0.5773502691896258,0.572791337966919,0.41006767749786377
503,How does the compiler handle inline functions?,it generates a copy of the functions code in place to avoid a function call,It makes a copy of the function code in every place where a function call is made.,5.0,1,0.969981849193573,0.7142857142857146,0.6293596029281616,0.5841138362884521
504,How does the compiler handle inline functions?,the function call will be replaced by the code that was defined in the inline function,It makes a copy of the function code in every place where a function call is made.,5.0,1,0.9402807950973511,0.790569415042095,0.6560920476913452,0.6136283874511719
505,How does the compiler handle inline functions?,"When the compiler inline-expands a function call, the function 's code gets inserted into the caller 's code streamconceptually similar to what happens with a define macro. This can, depending on a zillion other things, improve performance, because the optimizer can procedurally integrate the called code optimize the called code into the caller.",It makes a copy of the function code in every place where a function call is made.,4.5,1,0.9525692462921143,0.5218624584427539,0.6450166702270508,0.5747244358062744
506,What is the main advantage associated with function arguments that are passed by reference?,Overall the program has better performancemeans it is fasterbecause it does not have to copy large amounts of data.,It avoids making copies of large data structures when calling functions.,5.0,1,0.9025442004203796,0.44721359549995804,0.4680223762989044,0.2659716010093689
507,What is the main advantage associated with function arguments that are passed by reference?,because you cannot change the original and passing by reference limits memory needed for the program.,It avoids making copies of large data structures when calling functions.,4.5,1,0.8911046981811523,0.0,0.7991794347763062,0.3561451733112335
508,What is the main advantage associated with function arguments that are passed by reference?,Passing by reference can eliminate the pass-by-value overhead of copying large amounts of data.,It avoids making copies of large data structures when calling functions.,5.0,1,0.8869137167930603,0.44721359549995804,0.699906587600708,0.25141119956970215
509,What is the main advantage associated with function arguments that are passed by reference?,"It is often more efficient to pass references, rather than large objects, to functions. This allows the compiler to pass the address of the object while maintaining the syntax that would have been used to access the object.",It avoids making copies of large data structures when calling functions.,5.0,1,0.9262428879737854,0.31622776601683794,0.5642494559288025,0.37498190999031067
510,What is the main advantage associated with function arguments that are passed by reference?,"Pass by reference is good for performance reasons, because it can eliminate the pass by value overhead of copying large amounts of data.",It avoids making copies of large data structures when calling functions.,5.0,1,0.9159249067306519,0.3651483716701108,0.5762243270874023,0.2210489809513092
511,What is the main advantage associated with function arguments that are passed by reference?,You do not alter the original value of the variable that was passed.,It avoids making copies of large data structures when calling functions.,3.0,0,0.865234911441803,0.0,0.540863573551178,0.15116769075393677
512,What is the main advantage associated with function arguments that are passed by reference?,Do not have to make copies of stuff.,It avoids making copies of large data structures when calling functions.,4.5,1,0.8404842615127563,0.5773502691896258,0.6426361799240112,0.48987168073654175
513,What is the main advantage associated with function arguments that are passed by reference?,you do not use unessesary memory space to copy variables between functions,It avoids making copies of large data structures when calling functions.,5.0,1,0.8658367991447449,0.3779644730092273,0.8243237733840942,0.4791547656059265
514,What is the main advantage associated with function arguments that are passed by reference?,It elimitates the need to copy large amonts of data,It avoids making copies of large data structures when calling functions.,5.0,1,0.9080091714859009,0.5773502691896258,0.3426639437675476,0.39566537737846375
515,What is the main advantage associated with function arguments that are passed by reference?,The function can change the data stored in a variable passed by reference directly.,It avoids making copies of large data structures when calling functions.,3.5,0,0.8906117677688599,0.3535533905932738,0.43716421723365784,0.21697089076042175
516,What is the main advantage associated with function arguments that are passed by reference?,Gives called function the ability to access and modify the caller s argument data.,It avoids making copies of large data structures when calling functions.,3.5,0,0.88741135597229,0.3333333333333333,0.4277995228767395,0.27148622274398804
517,What is the main advantage associated with function arguments that are passed by reference?,Gives called function the ability to access and modify the caller s argument data directly.,It avoids making copies of large data structures when calling functions.,3.5,0,0.891093373298645,0.316227766016838,0.4374540150165558,0.22972837090492249
518,What is the main advantage associated with function arguments that are passed by reference?,It is more efficient and it changes the variable not online inside the function but outside so that the new value can be used elsewhere.,It avoids making copies of large data structures when calling functions.,3.0,0,0.9053953289985657,0.0,0.4788306653499603,0.21534287929534912
519,What is the main advantage associated with function arguments that are passed by reference?,you do not make another copy and waste memory,It avoids making copies of large data structures when calling functions.,5.0,1,0.850730299949646,0.0,0.660425066947937,0.3170577585697174
520,What is the main advantage associated with function arguments that are passed by reference?,"Passing by reference eliminates the copying of large amounts of data, typical with pass by value.",It avoids making copies of large data structures when calling functions.,5.0,1,0.8991088271141052,0.44721359549995804,0.7895791530609131,0.30645066499710083
521,What is the main advantage associated with function arguments that are passed by reference?,"If a function 's arguments are large in size, computing time and memory space is not wasted copying down the argument and passing it to the function. Also pass by reference gives the function called the permission to read edit the argument directly.",It avoids making copies of large data structures when calling functions.,5.0,1,0.9242398738861084,0.1796053020267749,0.5681453347206116,0.5231413841247559
522,What is the main advantage associated with function arguments that are passed by reference?,"Gives access to the caller data directly, also it allows for modifying the data.",It avoids making copies of large data structures when calling functions.,3.5,0,0.9025384187698364,0.6324555320336759,0.48434939980506897,0.23680704832077026
523,What is the main advantage associated with function arguments that are passed by reference?,"less overhead overall, and you modify the variable directly.",It avoids making copies of large data structures when calling functions.,3.5,0,0.8702365159988403,0.0,0.6797485947608948,0.08571497350931168
524,What is the main advantage associated with function arguments that are passed by reference?,The original variable being referenced can be modified directly by the called function.,It avoids making copies of large data structures when calling functions.,3.0,0,0.8640991449356079,0.0,0.44992539286613464,0.24536803364753723
525,What is the main advantage associated with function arguments that are passed by reference?,gives function ability to access and modify the caller 's argument data directly,It avoids making copies of large data structures when calling functions.,3.5,0,0.8682096004486084,0.3333333333333333,0.4384121596813202,0.23500478267669678
526,What is the main advantage associated with function arguments that are passed by reference?,Gives the called function the ability to access and modify the caller 's argument data directly.,It avoids making copies of large data structures when calling functions.,3.0,0,0.8908657431602478,0.316227766016838,0.42937996983528137,0.22894708812236786
527,What is the main advantage associated with function arguments that are passed by reference?,"Less overhead than passed by value, especially when using large numbers.",It avoids making copies of large data structures when calling functions.,3.5,0,0.8856102228164673,0.3779644730092273,0.622922420501709,0.08893483877182007
528,What is the main advantage associated with function arguments that are passed by reference?,"large data items can be passed without copying the entire data point, reducing execution time and the amout of memory space needed",It avoids making copies of large data structures when calling functions.,5.0,1,0.9326561689376831,0.5144957554275266,0.7536938786506653,0.399705708026886
529,What is the main advantage associated with function arguments that are passed by reference?,The data can be modified directly instead of making a copy of the data. Improves execution time with large amounts of data.,It avoids making copies of large data structures when calling functions.,4.0,1,0.9418888688087463,0.662266178532522,0.5796915292739868,0.29114893078804016
530,What is the main advantage associated with function arguments that are passed by reference?,Functions can directly modify arguments that are passed by reference.,It avoids making copies of large data structures when calling functions.,3.5,0,0.8833699226379395,0.4082482904638631,0.4596097469329834,0.22162610292434692
531,What is the main advantage associated with function arguments that are passed by reference?,It gives access and modify the caller 's argument data directly. It eliminate the pass by value overhead of copying large amounts ofdata,It avoids making copies of large data structures when calling functions.,5.0,1,0.9283492565155029,0.3651483716701108,0.6546337604522705,0.1921083927154541
532,What is the main advantage associated with function arguments that are passed by reference?,"it takes less memory, thus it would make the program faster",It avoids making copies of large data structures when calling functions.,4.0,1,0.862224280834198,0.0,0.5718578100204468,0.2233579158782959
533,What is the main advantage associated with function arguments that are passed by reference?,You are able to modify the variable that is referenced directly.,It avoids making copies of large data structures when calling functions.,3.5,0,0.8677802085876465,0.0,0.3460996150970459,0.09988123178482056
534,What is the main advantage associated with function arguments that are passed by reference?,"if you pass by reference, you can modify the value as opposed to passing by value where you cannot change the value",It avoids making copies of large data structures when calling functions.,3.5,0,0.8478512167930603,0.0,0.6548359394073486,0.19061127305030823
535,What is the main advantage associated with function arguments that are passed by reference?,"only the memory address is sent to the function, so no copy of the object sent needs to be made. It makes the function run faster, and saves memory.",It avoids making copies of large data structures when calling functions.,5.0,1,0.9107034802436829,0.0,0.6392219662666321,0.34982967376708984
536,What is the main advantage associated with function arguments that are passed by reference?,"Actual arguments are associated with dummy arguments when a function or subroutine is referenced. In a procedure reference, the actual argument list identifies the correspondence between the actual arguments provided in the list and the dummy arguments of the subprogram",It avoids making copies of large data structures when calling functions.,3.0,0,0.8881626129150391,0.0,0.5518249273300171,0.28626757860183716
537,How are overloaded functions differentiated by the compiler?,"The compiler selects the proper functions to execute based on number, types and order of arguments in the function call.","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",5.0,1,0.9442288279533386,0.42640143271122094,0.7868473529815674,0.49272990226745605
538,How are overloaded functions differentiated by the compiler?,They differentiated by the compiler by the conditions or inputs used for one of the overloaded functions.,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",3.0,0,0.9171426296234131,0.5345224838248489,0.8340889811515808,0.38139742612838745
539,How are overloaded functions differentiated by the compiler?,"The compiler distinguishes overloaded functions by their signatures. It encodes each function identifier with the number and types of its parameters to generate type-safe linkage, which ensures the proper overloaded function is called.","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",5.0,1,0.9501573443412781,0.5619514869490166,0.8420765399932861,0.6508174538612366
540,How are overloaded functions differentiated by the compiler?,"Overloaded functions are distinguished by their signatures, Name mangling or name decoration, and type-safe linkage ensures that proper overloaded functions is called and types of the arguments conform to tpes to the parameters.","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",5.0,1,0.9408745169639587,0.44232586846469146,0.7971824407577515,0.4085836112499237
541,How are overloaded functions differentiated by the compiler?,"The compiler selects proper function to execute based on number, types and order of arguments in the function call.","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",5.0,1,0.9446909427642822,0.6537204504606136,0.8086953163146973,0.5006074905395508
542,How are overloaded functions differentiated by the compiler?,"By the type they are initilized withint, char, etc.","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",3.0,0,0.7926408648490906,0.0,0.6025599241256714,0.2962397336959839
543,How are overloaded functions differentiated by the compiler?,"It selects the proper function to execute based on number, types and order of arguments in the function call.","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",5.0,1,0.9496676325798035,0.6301260378126045,0.8019107580184937,0.4666675925254822
544,How are overloaded functions differentiated by the compiler?,overloaded functions must have the same return type but different input parameters,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",3.0,0,0.9016976952552795,0.3779644730092273,0.71280437707901,0.34836968779563904
545,How are overloaded functions differentiated by the compiler?,"It examines the names, types, and order of arguments on each function.","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",5.0,1,0.9093853831291199,0.4082482904638631,0.693528413772583,0.4108806252479553
546,How are overloaded functions differentiated by the compiler?,unique function signatures,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",5.0,1,0.7470158338546753,0.5773502691896258,0.5456975698471069,0.7009307146072388
547,How are overloaded functions differentiated by the compiler?,"Is based on number, types, and order of arguments in the function call.","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",5.0,1,0.9229304194450378,0.4950737714883372,0.7431864738464355,0.38462159037590027
548,How are overloaded functions differentiated by the compiler?,"Compiler selects proper function to execute based on number, types and order of arguments in the function call.","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",5.0,1,0.9372320175170898,0.6537204504606136,0.8118317127227783,0.4764549136161804
549,How are overloaded functions differentiated by the compiler?,not answered,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",0.0,0,0.6117793321609497,0.0,0.16822630167007446,0.17464305460453033
550,How are overloaded functions differentiated by the compiler?,"they have to have same return type, but different input parameters","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",3.0,0,0.8789836168289185,0.0,0.6595719456672668,0.2967764139175415
551,How are overloaded functions differentiated by the compiler?,Overloaded functions are differentiated by their parameters.,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",4.5,1,0.8317734599113464,0.5,0.6738291382789612,0.42004263401031494
552,How are overloaded functions differentiated by the compiler?,"The compiler selects the right function to execute from the number, types and order of arguments in the function call.","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",5.0,1,0.9523463249206543,0.6301260378126045,0.8507230877876282,0.5005581974983215
553,How are overloaded functions differentiated by the compiler?,it creates a set of candidate functions then a set of viable functions,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",3.0,0,0.9142733216285706,0.0,0.7319238781929016,0.4194284975528717
554,How are overloaded functions differentiated by the compiler?,their function signature.,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",5.0,1,0.8762521147727966,0.948683298050514,0.5949639678001404,0.8804475665092468
555,How are overloaded functions differentiated by the compiler?,The number and type of its parameters.,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",5.0,1,0.9024451375007629,0.0,0.5671766996383667,0.46134787797927856
556,How are overloaded functions differentiated by the compiler?,by their function signature,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",5.0,1,0.8273337483406067,0.948683298050514,0.6163085699081421,0.9376660585403442
557,How are overloaded functions differentiated by the compiler?,"They have the same name, just different parameters.","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",3.5,0,0.8945062160491943,0.0,0.41368040442466736,0.27345603704452515
558,How are overloaded functions differentiated by the compiler?,"They are differntiated by number, types and order of arguments in the function call.","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",5.0,1,0.9087401032447815,0.4082482904638631,0.66874098777771,0.22503697872161865
559,How are overloaded functions differentiated by the compiler?,"it looks at the number, types, and order of arguments in the function call","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",5.0,1,0.9269372820854187,0.4082482904638631,0.7189028263092041,0.28897804021835327
560,How are overloaded functions differentiated by the compiler?,The compiler differentiates overloaded functions by their signature.,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",5.0,1,0.8837019801139832,0.7302967433402217,0.8041843771934509,0.6267561316490173
561,How are overloaded functions differentiated by the compiler?,"By the number, types, and order of their arguments","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",5.0,1,0.8507993221282959,0.0,0.5778606534004211,0.1963302344083786
562,How are overloaded functions differentiated by the compiler?,"Compiler selects proper function to execute based on number, types and order of arguments in the function call.","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",5.0,1,0.9372320175170898,0.6537204504606136,0.8118317127227783,0.4764549136161804
563,How are overloaded functions differentiated by the compiler?,paremeters,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",4.5,1,0.0,0.0,0.4497573673725128,0.18745091557502747
564,How are overloaded functions differentiated by the compiler?,"By the number, and the types and order of the parameters.","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",5.0,1,0.8946106433868408,0.0,0.5982679128646851,0.3976747691631317
565,How are overloaded functions differentiated by the compiler?,by the number and type of arguments,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",5.0,1,0.8537063002586365,0.0,0.5307410359382629,0.13329704105854034
566,How are overloaded functions differentiated by the compiler?,"by their signaturereturn type, argument list","Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",4.0,1,0.8290135264396667,0.0,0.6415798664093018,0.46819594502449036
567,How are overloaded functions differentiated by the compiler?,overloaded function simply invovles haing a method with the same name within the class. is used to implement a method for subclass which overrides in other words replaces the implementation of the super class. Overloading the concept of providing different meaning to a object based on the context of its presence. Overloading is one type of polymorphism and this is also a feature in programing.,"Based on the function signature. When an overloaded function is called, the compiler will find the function whose signature is closest to the given function call.",3.0,0,0.951120138168335,0.2324952774876386,0.7582599520683289,0.21754463016986847
568,"When defining a recursive function, what are possible causes for infinite recursion?","A base case that is the simplest case for a problem so that the function will lead to it, if this does not happen then it will end up as an infinite loop. And a condition to know when to terminate.","If the recursion step is defined incorrectly, or if the base case is not included.",5.0,1,0.9418509602546692,0.5144957554275266,0.5719715356826782,0.4120579957962036
569,"When defining a recursive function, what are possible causes for infinite recursion?",badly designed algorithyms. using recursion for a non recursive problem.,"If the recursion step is defined incorrectly, or if the base case is not included.",2.5,0,0.8532960414886475,0.3535533905932738,0.8365064859390259,0.22146375477313995
570,"When defining a recursive function, what are possible causes for infinite recursion?",Infinite recursion can occur when the base case is omitted or the recursion step is written incorrectly so that it never converges on the base case.,"If the recursion step is defined incorrectly, or if the base case is not included.",5.0,1,0.9655008912086487,0.8207826816681234,0.7710848450660706,0.8035003542900085
571,"When defining a recursive function, what are possible causes for infinite recursion?","Infinite recursion is an infinite loop if the condition is not met. Either omitting the base case, or writing the recursion step incorrectly so that it does not converge on the base case causes indefinite recursion, eventually exhausting memory.","If the recursion step is defined incorrectly, or if the base case is not included.",5.0,1,0.961190938949585,0.680336051416609,0.7193251848220825,0.42059260606765747
572,"When defining a recursive function, what are possible causes for infinite recursion?",Either omitting the base case or writing the recursion step incorrectly so that it does not converge on the base case can cause an infinite recursion.,"If the recursion step is defined incorrectly, or if the base case is not included.",5.0,1,0.9612281918525696,0.8000000000000002,0.801079273223877,0.792208194732666
573,"When defining a recursive function, what are possible causes for infinite recursion?",Not having a base case that returns a base value.,"If the recursion step is defined incorrectly, or if the base case is not included.",4.0,1,0.9157109260559082,0.7500000000000002,0.7041504383087158,0.4642704725265503
574,"When defining a recursive function, what are possible causes for infinite recursion?",Incorrect or missing base case. Must reduce to the base case. The function must get simpler each time it is runconverge to the base case.,"If the recursion step is defined incorrectly, or if the base case is not included.",5.0,1,0.9518044590950012,0.848528137423857,0.6381320953369141,0.6767570972442627
575,"When defining a recursive function, what are possible causes for infinite recursion?",no base case no change in values.,"If the recursion step is defined incorrectly, or if the base case is not included.",4.5,1,0.8852186799049377,0.7071067811865476,0.41404956579208374,0.2909405827522278
576,"When defining a recursive function, what are possible causes for infinite recursion?","If at each recursive call the problem does not diminish or if it does not diminish to a base case, can cause infinite recursion.","If the recursion step is defined incorrectly, or if the base case is not included.",5.0,1,0.9434950351715088,0.44721359549995804,0.6090425848960876,0.5506222248077393
577,"When defining a recursive function, what are possible causes for infinite recursion?",Omitting the base case or incorrectly calling the recursive step.,"If the recursion step is defined incorrectly, or if the base case is not included.",5.0,1,0.9343380928039551,0.7559289460184546,0.8763632774353027,0.7983293533325195
578,"When defining a recursive function, what are possible causes for infinite recursion?",The recursive problem cannot be reduced to reach the base case.,"If the recursion step is defined incorrectly, or if the base case is not included.",4.5,1,0.9335678219795227,0.5773502691896258,0.5835902690887451,0.61208176612854
579,"When defining a recursive function, what are possible causes for infinite recursion?","Lack of defining a base case, or writing the recursion step incorrectly so that it does not converge on the base case","If the recursion step is defined incorrectly, or if the base case is not included.",5.0,1,0.962169885635376,0.7826237921249264,0.8131693601608276,0.7219979763031006
580,"When defining a recursive function, what are possible causes for infinite recursion?",Not having the proper case to leave the recursion,"If the recursion step is defined incorrectly, or if the base case is not included.",4.0,1,0.9199320673942566,0.632455532033676,0.7657767534255981,0.458869993686676
581,"When defining a recursive function, what are possible causes for infinite recursion?","no base case, or the recursive calls do not converge to the base case","If the recursion step is defined incorrectly, or if the base case is not included.",5.0,1,0.932513415813446,0.8528028654224418,0.6842823028564453,0.651261031627655
582,"When defining a recursive function, what are possible causes for infinite recursion?","No base case, or an incorrectly written recursion step that does not converge on the base case will lead to infinite recursion.","If the recursion step is defined incorrectly, or if the base case is not included.",5.0,1,0.9606301188468933,0.8207826816681234,0.5782498121261597,0.6721819639205933
583,"When defining a recursive function, what are possible causes for infinite recursion?","If the recursion function never reaches or successfully defines the base case it will recurse forever. This happens many ways, such as the function does not progress towards the base case, or the function is coded poorly and does not even contain a base case.","If the recursion step is defined incorrectly, or if the base case is not included.",5.0,1,0.9695078730583191,0.6163156344279368,0.6730648279190063,0.7000624537467957
584,"When defining a recursive function, what are possible causes for infinite recursion?","not creating a base case, or in the case where the base case will never be met.","If the recursion step is defined incorrectly, or if the base case is not included.",5.0,1,0.9461949467658997,0.9128709291752769,0.6792140007019043,0.6344032883644104
585,"When defining a recursive function, what are possible causes for infinite recursion?",improper handling of cases such that not all possible values are able to be handled.,"If the recursion step is defined incorrectly, or if the base case is not included.",3.5,0,0.9026004672050476,0.0,0.8165921568870544,0.3864080309867859
586,"When defining a recursive function, what are possible causes for infinite recursion?",There is no base case. The recursion step does not reduce the problem during each recursive call.,"If the recursion step is defined incorrectly, or if the base case is not included.",4.5,1,0.9538042545318604,0.7071067811865476,0.5189318656921387,0.5744892358779907
587,"When defining a recursive function, what are possible causes for infinite recursion?","no base case, as in a single return that does not include calling the function again. a static value to end at.","If the recursion step is defined incorrectly, or if the base case is not included.",3.5,0,0.9449779987335205,0.4264014327112209,0.5529291033744812,0.5140820741653442
588,"When defining a recursive function, what are possible causes for infinite recursion?","Either omitting the base case, or writing the recursion step incorrectly so the it does not reach the base case can cause infinite recursion.","If the recursion step is defined incorrectly, or if the base case is not included.",5.0,1,0.9669858813285828,0.8000000000000002,0.8133262395858765,0.8254107236862183
589,"When defining a recursive function, what are possible causes for infinite recursion?",omitting the base case or writing the recursive call so that it does not converge upon the base case.,"If the recursion step is defined incorrectly, or if the base case is not included.",5.0,1,0.9534720182418823,0.7844645405527362,0.7693784236907959,0.7420735359191895
590,"When defining a recursive function, what are possible causes for infinite recursion?","Either omitting the base case, or writing the recursion step incorrectly so that it does not converge on the base case","If the recursion step is defined incorrectly, or if the base case is not included.",5.0,1,0.9635257720947266,0.8082903768654762,0.8635439276695251,0.7729839086532593
591,"When defining a recursive function, what are possible causes for infinite recursion?",Infinite recursion may occur if no base case is defined or if the call is not varied.,"If the recursion step is defined incorrectly, or if the base case is not included.",4.5,1,0.9654480814933777,0.7559289460184546,0.7344847917556763,0.7008858919143677
592,"When defining a recursive function, what are possible causes for infinite recursion?","Not having a base case, or building a recursion process that does not converge on the base case.","If the recursion step is defined incorrectly, or if the base case is not included.",5.0,1,0.9549853205680847,0.7715167498104597,0.7773444056510925,0.7770987749099731
593,"When defining a recursive function, what are possible causes for infinite recursion?","Either omitting the base case, or writing the recursion step incorerectly","If the recursion step is defined incorrectly, or if the base case is not included.",5.0,1,0.9426606893539429,0.7559289460184546,0.8281728029251099,0.8027746677398682
594,"When defining a recursive function, what are possible causes for infinite recursion?",no base case or if the programmar does not define the base case as the simplest case and it never gets reached,"If the recursion step is defined incorrectly, or if the base case is not included.",5.0,1,0.9548430442810059,0.8111071056538127,0.5085757374763489,0.3757553696632385
595,"When defining a recursive function, what are possible causes for infinite recursion?",No easily reached base case and no base case at all,"If the recursion step is defined incorrectly, or if the base case is not included.",5.0,1,0.8808675408363342,0.894427190999916,0.4726599454879761,0.5123528242111206
596,"When defining a recursive function, what are possible causes for infinite recursion?",function is never allowed to reach the base case,"If the recursion step is defined incorrectly, or if the base case is not included.",5.0,1,0.9220766425132751,0.632455532033676,0.47142350673675537,0.4685104489326477
597,"When defining a recursive function, what are possible causes for infinite recursion?","it has no base case, or the base case is never met","If the recursion step is defined incorrectly, or if the base case is not included.",5.0,1,0.9314919114112854,0.9428090415820634,0.5209071636199951,0.662703812122345
598,"When defining a recursive function, what are possible causes for infinite recursion?",recursion refers to situations in which functions call themselves. These types of functions are known as recursive functions. That being said Infinite recursion occurs when the function is designed in such a way as to call it self forever without stopping possible causes,"If the recursion step is defined incorrectly, or if the base case is not included.",3.0,0,0.9287595748901367,0.3713906763541038,0.420987606048584,0.45290181040763855
599,What are the similarities between iteration and recursion?,"Both involve a controlled repetition structures, and they both have a termination test. Also both of them can loop forever.",They both involve repetition; they both have termination tests; they can both occur infinitely.,5.0,1,0.953178882598877,0.6123724356957946,0.9116631746292114,0.7811169624328613
600,What are the similarities between iteration and recursion?,"As discussed earlier, recursion may be used to process iterative actions. Recursion is used for calculations where the answer can be described in a function that relates to itself.",They both involve repetition; they both have termination tests; they can both occur infinitely.,2.0,0,0.8804801106452942,0.0,0.48337849974632263,0.5416370034217834
601,What are the similarities between iteration and recursion?,Both iteration and recursion are based on control statements and involve repetition. They can both also occur indefinitely.,They both involve repetition; they both have termination tests; they can both occur infinitely.,5.0,1,0.9455162286758423,0.5773502691896257,0.8257122039794922,0.7001214027404785
602,What are the similarities between iteration and recursion?,Both are based on a control statement Iteration-repetition structure Recursion-selection structure Both involve repetition Iteration-explicitly uses repetition structure Recursion-repeated function calls Both involve a termination test Iteration-loop-termination test Recursion-base case Both gradually approach termination Iteration-modifies counter until loop-termination test fails Recursion-produces progressively simpler versions of problem Both can occur indefinitely Iteration-if loop-continuation condition never fails Recursion-if recursion step does not simplify the problem,They both involve repetition; they both have termination tests; they can both occur infinitely.,5.0,1,0.8387686014175415,0.4068942293855796,0.6992650032043457,0.7591072916984558
603,What are the similarities between iteration and recursion?,"Iteration and recursion have many similarities: both are based on a control statement, involve repetition, involve a termination test, gradually approach termination and can occur infinitely.",They both involve repetition; they both have termination tests; they can both occur infinitely.,5.0,1,0.9347994327545166,0.7000000000000001,0.8920376896858215,0.8625192642211914
604,What are the similarities between iteration and recursion?,"Both rely on repetition, both have a base case, both can become an infinite loop. Anything recursive can also be solved with iteration.",They both involve repetition; they both have termination tests; they can both occur infinitely.,5.0,1,0.9192919731140137,0.3333333333333333,0.7584220170974731,0.8031543493270874
605,What are the similarities between iteration and recursion?,"Both will repeatloopuntil a condition is met, and exit the loop. Both are capable of entering an infinite loop.",They both involve repetition; they both have termination tests; they can both occur infinitely.,4.0,1,0.8829039931297302,0.0,0.7481234073638916,0.6664303541183472
606,What are the similarities between iteration and recursion?,anything you can do iterativly you can do recursively,They both involve repetition; they both have termination tests; they can both occur infinitely.,3.0,0,0.7767798900604248,0.0,0.6361998319625854,0.5349664092063904
607,What are the similarities between iteration and recursion?,Both are repetative and both have a end test.,They both involve repetition; they both have termination tests; they can both occur infinitely.,4.5,1,0.924477219581604,0.0,0.687828779220581,0.8630931377410889
608,What are the similarities between iteration and recursion?,"Incorrectly writing either can result in infinite loops, both perform the same task over and over.",They both involve repetition; they both have termination tests; they can both occur infinitely.,3.5,0,0.9154245257377625,0.0,0.7406259775161743,0.7422516345977783
609,What are the similarities between iteration and recursion?,Both are based on a control statement. Both involve repetition. Both involve a termination test. Both gradually approach termination. Both can occur infinitely.,They both involve repetition; they both have termination tests; they can both occur infinitely.,5.0,1,0.9423213601112366,0.7592566023652967,0.9033507108688354,0.4410419762134552
610,What are the similarities between iteration and recursion?,"Both are based on a control statement, Both involve repetition, Both involve a termination test, Both gradually approach termination, Both can occur infinitely",They both involve repetition; they both have termination tests; they can both occur infinitely.,5.0,1,0.9337266087532043,0.7592566023652967,0.9033864736557007,0.8956023454666138
611,What are the similarities between iteration and recursion?,not answered,They both involve repetition; they both have termination tests; they can both occur infinitely.,0.0,0,0.6737021803855896,0.0,0.13221246004104614,0.17208321392536163
612,What are the similarities between iteration and recursion?,anything you can do recursively you can do iteratively,They both involve repetition; they both have termination tests; they can both occur infinitely.,3.0,0,0.7785056233406067,0.0,0.6701126098632812,0.4620860517024994
613,What are the similarities between iteration and recursion?,"Many problems can be solved by both iteration and recursion, and either may go into a condition of infinite execution if a termination test is omitted.",They both involve repetition; they both have termination tests; they can both occur infinitely.,3.5,0,0.9150611758232117,0.316227766016838,0.7012105584144592,0.7126913666725159
614,What are the similarities between iteration and recursion?,"Iteration and recursion both use repetition and perform several simple operations and algorithms successively until they reach a certain limit. So both involve a termination test to find that limit and both slowly approach that termination limit. Both are based on a control statement as well. If coded poorly, both can continue on for forever until the compiler or the computer either locks up, shuts down or halts the operation.",They both involve repetition; they both have termination tests; they can both occur infinitely.,5.0,1,0.9305657148361206,0.3606678538669729,0.7051259279251099,0.7280802726745605
615,What are the similarities between iteration and recursion?,"both based on control statement, involve repetition, and involve a termination test within loops",They both involve repetition; they both have termination tests; they can both occur infinitely.,5.0,1,0.8867034912109375,0.6963106238227914,0.7656818628311157,0.7975662350654602
616,What are the similarities between iteration and recursion?,they are methods of repeating the same task.,They both involve repetition; they both have termination tests; they can both occur infinitely.,2.0,0,0.8906870484352112,0.0,0.6376758813858032,0.6509308815002441
617,What are the similarities between iteration and recursion?,Both involve a termination test. They use a control statement and repition to solve the problem. They can also result in an infinite loop.,They both involve repetition; they both have termination tests; they can both occur infinitely.,5.0,1,0.9166993498802185,0.4082482904638631,0.7362766265869141,0.5625946521759033
618,What are the similarities between iteration and recursion?,"based on a control statement, involve repetition, involve a termination test.",They both involve repetition; they both have termination tests; they can both occur infinitely.,5.0,1,0.8591083884239197,0.7302967433402217,0.6779764890670776,0.7036393880844116
619,What are the similarities between iteration and recursion?,Both are bases on a control statement. Both involve repetition. Both involve a termination test. Both gradually approach termination. Both can occur infinitely.,They both involve repetition; they both have termination tests; they can both occur infinitely.,5.0,1,0.9445930123329163,0.7592566023652967,0.9138954877853394,0.4412440061569214
620,What are the similarities between iteration and recursion?,"both based on a control statement, both involve repitition, both involve a termination test, both gradually approach termination, both can potentially occur infinetly.",They both involve repetition; they both have termination tests; they can both occur infinitely.,5.0,1,0.929718554019928,0.6804138174397718,0.6831759214401245,0.7612593173980713
621,What are the similarities between iteration and recursion?,"they are both based on a control statement, both involve repetition, both involve a termination case, both graduatlly approach that termination case, and both can occur infinitely",They both involve repetition; they both have termination tests; they can both occur infinitely.,5.0,1,0.935889482498169,0.7000000000000001,0.887262225151062,0.875029444694519
622,What are the similarities between iteration and recursion?,"They both use repetition, a control or test to terminate, and both can infinitely repeat if not defined correctly.",They both involve repetition; they both have termination tests; they can both occur infinitely.,5.0,1,0.9417838454246521,0.4714045207910317,0.8823195695877075,0.8736063241958618
623,What are the similarities between iteration and recursion?,"Both are based on a control statement; both gradually approach termination ending with a termination test; both involve repetition, and can both repeat infinitely if their termination requirements are not met.",They both involve repetition; they both have termination tests; they can both occur infinitely.,5.0,1,0.9533210396766663,0.6396021490668314,0.8389256000518799,0.8704109191894531
624,What are the similarities between iteration and recursion?,"both are based on a control statement, involve repetition and involve a termination test. both gradually approach termination, both can occur infinitely",They both involve repetition; they both have termination tests; they can both occur infinitely.,5.0,1,0.9387137293815613,0.7592566023652967,0.9194284677505493,0.8297541737556458
625,What are the similarities between iteration and recursion?,they are used to solve the same type of problems. they do a task over and over again until a cirtain conditional statement is reachedits called the base case in recursion.,They both involve repetition; they both have termination tests; they can both occur infinitely.,3.5,0,0.8899475932121277,0.0,0.6704144477844238,0.361568808555603
626,What are the similarities between iteration and recursion?,Based on control statement; involve repetition; involve a terminal test; both can occur infinitly,They both involve repetition; they both have termination tests; they can both occur infinitely.,5.0,1,0.9273552894592285,0.6666666666666669,0.766685426235199,0.8567556142807007
627,What are the similarities between iteration and recursion?,"repetition, termination test, eventually terminate, occur infinately",They both involve repetition; they both have termination tests; they can both occur infinitely.,5.0,1,0.834367036819458,0.6546536707079773,0.7102480530738831,0.8105468153953552
628,What are the similarities between iteration and recursion?,both need to have some kind of base case to tell when the loop needs to stop.,They both involve repetition; they both have termination tests; they can both occur infinitely.,3.0,0,0.8690019845962524,0.0,0.5083104372024536,0.43767446279525757
629,What are the similarities between iteration and recursion?,"they both are able to do repetiive tasks. however recurisve calls itself with different parameters and defines and exit clause that is guaranteeed to be reached. Iterative includes a loop which iterates a pre-determined number of times, or checks for an exit clause every time through",They both involve repetition; they both have termination tests; they can both occur infinitely.,3.5,0,0.9040979146957397,0.0,0.740790605545044,0.7925875186920166
630,What are the two different ways of specifying the length of an array?,int n [10]; or or array of 10 integers and int n [arraySize] or or where arraySize is some positive integer defined by the user,"In the array declaration, or by using an initializer list.",4.0,1,0.8298156261444092,0.23570226039551587,0.5111902952194214,0.37896016240119934
631,What are the two different ways of specifying the length of an array?,by either inputing the different elements in the array at coding or giving the array specifacations as to the size of the array. it is also possible when giving it specifacations to tell the array to grow as needed.,"In the array declaration, or by using an initializer list.",4.0,1,0.9038496613502502,0.6963106238227914,0.5522732734680176,0.4755282402038574
632,What are the two different ways of specifying the length of an array?,You can initialize and array by using an initializer list in its declaration or by initializing its size with a constant variable.,"In the array declaration, or by using an initializer list.",5.0,1,0.9464069604873657,0.7071067811865478,0.8511715531349182,0.7734971046447754
633,What are the two different ways of specifying the length of an array?,Pass the length along with the array or use a vector.,"In the array declaration, or by using an initializer list.",3.0,0,0.8796210885047913,0.447213595499958,0.7393823862075806,0.45695167779922485
634,What are the two different ways of specifying the length of an array?,"One way is to declare a size of the array using a variable that is equal to an integer. The other way, if the size is omitted in the declaration, the compiler determines the size of the array based on the size of the initializer list.","In the array declaration, or by using an initializer list.",5.0,1,0.9215426445007324,0.447213595499958,0.6779146194458008,0.44181764125823975
635,What are the two different ways of specifying the length of an array?,"In the declarationint array [x]or with an initilizerint array [] equals 0,1,2, etc.","In the array declaration, or by using an initializer list.",5.0,1,0.8438801765441895,0.7559289460184545,0.6944338083267212,0.6040861010551453
636,What are the two different ways of specifying the length of an array?,"1. Declare the length of the arrayint array [10];2. Initialize the arrayint array [] equals 0, 1, 2, 3; or or compiler will assume size of 4","In the array declaration, or by using an initializer list.",5.0,1,0.8408796191215515,0.5,0.6862015724182129,0.4552988111972809
637,What are the two different ways of specifying the length of an array?,statically and dynamically,"In the array declaration, or by using an initializer list.",2.5,0,0.6421830654144287,0.0,0.4734863340854645,0.2667429745197296
638,What are the two different ways of specifying the length of an array?,Explicitly int array [10]; or by variable const int size equals 10; int array [size];,"In the array declaration, or by using an initializer list.",4.0,1,0.6833496689796448,0.4,0.5942283272743225,0.3954277038574219
639,What are the two different ways of specifying the length of an array?,"Array lengths can be explicitly specified by inputing the number of elements between the brackets [] during declaration, or implicitly by including an initializer list WITHOUT specifying a number between [], the compiler will automatically declare the array with the proper number of elements needed for the list.","In the array declaration, or by using an initializer list.",5.0,1,0.9406787157058716,0.5,0.6994702816009521,0.6028645634651184
640,What are the two different ways of specifying the length of an array?,Specify an array s size with a constant variable. And setting array elements with calculations.,"In the array declaration, or by using an initializer list.",3.5,0,0.8720600605010986,0.6030226891555273,0.7679827213287354,0.540492057800293
641,What are the two different ways of specifying the length of an array?,"statically, using and dynamically, using []","In the array declaration, or by using an initializer list.",4.0,1,0.7755837440490723,0.8164965809277261,0.6098217964172363,0.3374674320220947
642,What are the two different ways of specifying the length of an array?,"define it as array [5] or array [1,2,3,4,5]","In the array declaration, or by using an initializer list.",4.5,1,0.7177098989486694,0.894427190999916,0.6161880493164062,0.455512136220932
643,What are the two different ways of specifying the length of an array?,Static and dynamic.,"In the array declaration, or by using an initializer list.",2.5,0,0.7220178842544556,0.0,0.4542657136917114,0.2987120747566223
644,What are the two different ways of specifying the length of an array?,manually inside the brackets or automatically via an initializer list,"In the array declaration, or by using an initializer list.",5.0,1,0.8485863208770752,0.5773502691896258,0.7041863203048706,0.5151471495628357
645,What are the two different ways of specifying the length of an array?,"You can use an initializer list, or simply tell the compiler how many elements you want in the array. For an Initializer list: int a [] equals 10, 2, 3, 4, 5; For an elemental declaration: int b [5]; Both arrays have 5 elements in them, but array a is already initialized.","In the array declaration, or by using an initializer list.",5.0,1,0.9172250032424927,0.6286185570937123,0.6136971712112427,0.630531907081604
646,What are the two different ways of specifying the length of an array?,"In a string you can specify with the strlenarraynamecommand. This gets the length of the string. Another way is with integers where you initiate the size from the start, ex array [40] specifying a possible length of up to 40. Then it is passed by an object the actual ammout in the array. Another way is to declare it in an initializing program.","In the array declaration, or by using an initializer list.",4.5,1,0.9110192656517029,0.32879797461071464,0.6812699437141418,0.34838178753852844
647,What are the two different ways of specifying the length of an array?,"Implicit, namely when you give it values, like 1,2,3,4,5,6,7,8,9, at which the compiler will automatically give this a size. Static, during the declaration.","In the array declaration, or by using an initializer list.",5.0,1,0.8937417268753052,0.3535533905932738,0.7080432176589966,0.3788931667804718
648,What are the two different ways of specifying the length of an array?,"Supply an integer inside the brackets or the compiler counts the number of elements in the initializer list. int n [5]; int n [] equals 1,2,3,4,5","In the array declaration, or by using an initializer list.",5.0,1,0.8480431437492371,0.3651483716701108,0.6262089014053345,0.5259921550750732
649,What are the two different ways of specifying the length of an array?,either initializing the array with a specific length or initializing an array while declaring its contents.,"In the array declaration, or by using an initializer list.",5.0,1,0.8937568068504333,0.5773502691896258,0.8991581201553345,0.7597749829292297
650,What are the two different ways of specifying the length of an array?,within the brackets or by using an initializer list.,"In the array declaration, or by using an initializer list.",5.0,1,0.9431498050689697,0.8660254037844388,0.8829225897789001,0.6460462212562561
651,What are the two different ways of specifying the length of an array?,specify the number of elements in the array declaration with a constant or using a constant variable for future scalability,"In the array declaration, or by using an initializer list.",4.0,1,0.890963613986969,0.4803844614152615,0.7382111549377441,0.5096327662467957
652,What are the two different ways of specifying the length of an array?,with a number and with a variable,"In the array declaration, or by using an initializer list.",3.0,0,0.8217665553092957,0.0,0.6644922494888306,0.32451915740966797
653,What are the two different ways of specifying the length of an array?,"explicitly, by declaring it in bracketsi. e. int array [50];and implicitly, by initializing several valuesi. e. int array [] equals 1, 2, 3;","In the array declaration, or by using an initializer list.",5.0,1,0.8221323490142822,0.5,0.60533607006073,0.3662968575954437
654,What are the two different ways of specifying the length of an array?,"one way of specifying of array is A [10]; other way of specifying array is a [arraysize] equals [1,2,3,4,5,6,7,8,9,10","In the array declaration, or by using an initializer list.",4.5,1,0.8390743732452393,0.47140452079103173,0.6202100515365601,0.4655730724334717
655,What are the two different ways of specifying the length of an array?,1-Initializing an array in a declaration with an initializer list 2-Specifying an array s size with a constant variable,"In the array declaration, or by using an initializer list.",5.0,1,0.9093769192695618,0.7216878364870323,0.8517746925354004,0.7764043807983398
656,What are the two different ways of specifying the length of an array?,"Initializing the size in the brackets: int a [100]; Initializing the length by assigning variables: int a [] equals 1,2,3;","In the array declaration, or by using an initializer list.",5.0,1,0.767207145690918,0.0,0.6370047330856323,0.5571792125701904
657,What are the two different ways of specifying the length of an array?,user defined value or by the number of elements in initializer list,"In the array declaration, or by using an initializer list.",5.0,1,0.912786602973938,0.5345224838248489,0.8734908103942871,0.4686453342437744
658,What are the two different ways of specifying the length of an array?,"you can assign the size of it inside the brackets when you declare the array [3], or you can have it set by how many items you set the array equal to 1,2,3","In the array declaration, or by using an initializer list.",5.0,1,0.8730360269546509,0.5163977794943223,0.6212202310562134,0.5508357882499695
659,What are the two different ways of specifying the length of an array?,"use an arraylist, or have your program ask the array how many elements it has. As an obj it it should have member length that is the number of slots it has.","In the array declaration, or by using an initializer list.",4.0,1,0.8907328844070435,0.30151134457776363,0.7405482530593872,0.6532780528068542
660,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"strings that are used in an char array are much easier to manipulate than as a string object, because each character is stored separately rather than as a whole",The strings declared using an array of characters have a null element added at the end of the array.,2.5,0,0.9184697270393372,0.40451991747794525,0.3987147808074951,0.5035707950592041
661,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"the type string uses less storage and you have to change the string all at once. with an array of characters you can make permutations of words using the characters stored in the array, without needing to actually access and change the variables. with an array of characters you can just change how they are accessed.",The strings declared using an array of characters have a null element added at the end of the array.,3.0,0,0.9365257024765015,0.6085806194501847,0.5789002180099487,0.40058520436286926
662,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"Unlike in a string declared using type string, in a string declared using an array of characters the programmer must provide the null terminating character and must ensure the array is large enough to hold the string and null terminating character.",The strings declared using an array of characters have a null element added at the end of the array.,5.0,1,0.9574251174926758,0.5613413993878116,0.7542852759361267,0.7607084512710571
663,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"All strings represented by character arrays end with the null character. You declare an object of type string just like any other type, for example: string s;",The strings declared using an array of characters have a null element added at the end of the array.,5.0,1,0.94376140832901,0.3692744729379983,0.8378019332885742,0.8415462970733643
664,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"By using an array of characters, one can store and manipulate the strings rather than just having a type string variable.",The strings declared using an array of characters have a null element added at the end of the array.,2.5,0,0.9394274353981018,0.5698028822981898,0.5223608016967773,0.614808976650238
665,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,type string is an array of chars that will make an array of single letter characters while an array of strings will be an actual array of wordsor an array of char arrays,The strings declared using an array of characters have a null element added at the end of the array.,2.0,0,0.9532284736633301,0.8053872662568293,0.7553929090499878,0.6736053824424744
666,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"They are basically the same, however, a string ends with a null character, denoting the end of the stringand the size. A char array has potential to be any size, so it must be declared or limited.",The strings declared using an array of characters have a null element added at the end of the array.,3.5,0,0.9285861849784851,0.4583492485141057,0.7699571847915649,0.7512266635894775
667,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string is a class in the standard library and has method that modify it. Whereas the char array is on able to be modifie by the user.,The strings declared using an array of characters have a null element added at the end of the array.,4.0,1,0.9284529089927673,0.30151134457776363,0.6127153038978577,0.44693756103515625
668,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"By using an array of characters, you are limited to the size of the array of characters. By declaring by type the end of the string is acknowledged by white space.",The strings declared using an array of characters have a null element added at the end of the array.,3.5,0,0.9460946321487427,0.7126966450997985,0.7981440424919128,0.4740396738052368
669,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"The data class type string are designed to handle character data, and has many functions built into the class library to deal with them. An array of characters however is subject to all the same rules of any other array with no real additional functionality. Another difference is that the string class deals with the null character implicitly, unlike an array of characters, which must handle the null character explicitly.",The strings declared using an array of characters have a null element added at the end of the array.,5.0,1,0.9459932446479797,0.5143444998736398,0.6687748432159424,0.40497928857803345
670,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string declared used in an array of characters contains each character in the array and a special string-termination character called the null character versus the type string.,The strings declared using an array of characters have a null element added at the end of the array.,5.0,1,0.955450713634491,0.4677071733467427,0.8676317930221558,0.8236583471298218
671,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,A char array reads a string as each individual character. A string literal array reads the entire string.,The strings declared using an array of characters have a null element added at the end of the array.,3.0,0,0.9090614318847656,0.4264014327112209,0.6525381803512573,0.5885555744171143
672,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,array of characters can only hold as many characters as the array size and strings are not that limited.,The strings declared using an array of characters have a null element added at the end of the array.,4.0,1,0.9195978045463562,0.8249579113843056,0.45220693945884705,0.6074316501617432
673,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"Stings can only be modified by functions of the String class, an array of characters can be modified by the user",The strings declared using an array of characters have a null element added at the end of the array.,3.5,0,0.9266282320022583,0.40451991747794525,0.6815913915634155,0.5856302976608276
674,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"if by type string, the array contains an additional terminating null character",The strings declared using an array of characters have a null element added at the end of the array.,4.0,1,0.9121749401092529,0.474341649025257,0.9249839782714844,0.8445560932159424
675,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,The array of characters has a null character 0 at the end of the array to signify the array 's end. The string does not have this.,The strings declared using an array of characters have a null element added at the end of the array.,5.0,1,0.9746407270431519,0.8671099695241201,0.8115566968917847,0.6826213598251343
676,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,strings with type string are just that. Strings. They are not part of an array list at all where as one declared by an array is actually an array of characters able to be pointed and detected.,The strings declared using an array of characters have a null element added at the end of the array.,3.0,0,0.9490399360656738,0.7881104062391008,0.7000939249992371,0.6194339990615845
677,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"the array of characters has a set length, while the type string has virtually unlimited length.",The strings declared using an array of characters have a null element added at the end of the array.,4.0,1,0.9337703585624695,0.40451991747794525,0.44922828674316406,0.5226749181747437
678,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,Char array Individual letters can be accessed directly with array subscript notation. String array array subscript will return the entire string.,The strings declared using an array of characters have a null element added at the end of the array.,2.0,0,0.8819792866706848,0.7071067811865476,0.5931202173233032,0.3908722996711731
679,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,array of characters need a termination character as well as size specification whether its explicit or implicit.,The strings declared using an array of characters have a null element added at the end of the array.,5.0,1,0.9059423804283142,0.447213595499958,0.6428132057189941,0.424285888671875
680,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,when using an array individual characters can be accessed and manipulated.,The strings declared using an array of characters have a null element added at the end of the array.,2.5,0,0.887575089931488,0.6666666666666669,0.477499783039093,0.4212809205055237
681,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,strings declared using an array of characters could result in data loss if character array not initialized large enough.,The strings declared using an array of characters have a null element added at the end of the array.,4.0,1,0.9412745237350464,0.7559289460184545,0.7069665193557739,0.567786693572998
682,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"an array is passed by reference therefore if an array of characters is changed, the memory is changed not just the variable",The strings declared using an array of characters have a null element added at the end of the array.,3.5,0,0.9359371662139893,0.5976143046671969,0.6052824258804321,0.43641790747642517
683,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"the type string has several built-in functions not available when using a char array, but the individual characters in an array or more directly accessible than the characters in a string type string.",The strings declared using an array of characters have a null element added at the end of the array.,3.5,0,0.9424918293952942,0.5306686305052326,0.727141261100769,0.5233238935470581
684,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"declaring a string, it includes white spaces but declaring a array of character does not include white spaces",The strings declared using an array of characters have a null element added at the end of the array.,1.5,0,0.901131808757782,0.23570226039551587,0.6053078174591064,0.459075927734375
685,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"an array of characters has one element a string doesnt have. it is the termination element, or null",The strings declared using an array of characters have a null element added at the end of the array.,5.0,1,0.9476972222328186,0.7171371656006362,0.8540201187133789,0.647868812084198
686,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,Strings declared using the type string can vary in length. Strings declared using an array of characters can not extend past the array length.,The strings declared using an array of characters have a null element added at the end of the array.,4.0,1,0.9490391612052917,0.76271276980969,0.7306476831436157,0.5198564529418945
687,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"cant modify individual characters of a type string array, character type array can modify individual characters",The strings declared using an array of characters have a null element added at the end of the array.,2.5,0,0.865680992603302,0.5720775535473555,0.7469418048858643,0.5746253728866577
688,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"the type string is a class and is safer, while the other is just an array of characters.",The strings declared using an array of characters have a null element added at the end of the array.,3.5,0,0.9316806793212891,0.5070925528371101,0.3571435809135437,0.5041589140892029
689,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,"array it is the collection of similar data types ex: int a [10] ten indicates the size of array. [] is index of array, we can give only integer values to array of a. where as string mean collection of group of characters. string declarations have a datatype usually causes storage to be allocated in memory that is capable of holding some predetermined number of symbols. However Arrays can be declared to contain values of any non reference data type. Multiple arrarys of the same type",The strings declared using an array of characters have a null element added at the end of the array.,2.5,0,0.946050226688385,0.4987546680538165,0.6318781971931458,0.385388046503067
690,How are arrays passed to functions?,by reference only,by reference.,5.0,1,0.8877809643745422,1.0,0.6764550805091858,0.705079197883606
691,How are arrays passed to functions?,a reference pointer to an element in the array.,by reference.,4.5,1,0.6974969506263733,0.5,0.6642953753471375,0.5212999582290649
692,How are arrays passed to functions?,Arrays are passed to functions by reference.,by reference.,5.0,1,0.8051190972328186,0.5,0.6715459227561951,0.525261640548706
693,How are arrays passed to functions?,Arrays are passed by reference Individual array elements passed by value Functions that take arrays as arguments Function prototypes may include parameter names const array parameters,by reference.,5.0,1,0.6471074223518372,0.19999999999999996,0.4413401484489441,0.20767326653003693
694,How are arrays passed to functions?,Arrays are passed by reference.,by reference.,5.0,1,0.8487451076507568,0.5773502691896258,0.8419477343559265,0.584104061126709
695,How are arrays passed to functions?,"you must pass the array and its size to the function. Ex. functionarray, size;",by reference.,4.0,1,0.6792434453964233,0.0,0.5375050902366638,0.30362769961357117
696,How are arrays passed to functions?,"Usually the same way you pass anything else ... you do not have to specify the length of a char array, just pass it to the function by sending the name of the array. Example: char str [20]; isPalindromestr; or or this sends the char array to the function isPalindrome. Otherwise, would need to send the length of the array as well.",by reference.,3.5,0,0.6857083439826965,0.0,0.19885416328907013,0.10925041139125824
697,How are arrays passed to functions?,you pass a pointer to the first item and also pass the size.,by reference.,3.5,0,0.6566734313964844,0.0,0.4618685841560364,0.42714619636535645
698,How are arrays passed to functions?,By reference.,by reference.,5.0,1,1.0000001192092896,1.0,1.0000001192092896,1.000000238418579
699,How are arrays passed to functions?,"In two parts, the array itself, and it is size, so that the function it is being passed to can avoid out of bounds errors.",by reference.,4.0,1,0.6636437177658081,0.0,0.32527458667755127,0.17890214920043945
700,How are arrays passed to functions?,Specify array name without brackets. Array size is normally passed as another argument so the function can process the specific number of elements in the array. Arrays are passed by reference. Individual array elements passed by value. Functions that take arrays as arguments.,by reference.,5.0,1,0.7223986387252808,0.14586499149789456,0.2861754298210144,0.24760329723358154
701,How are arrays passed to functions?,Arrays are passed by reference.,by reference.,5.0,1,0.8487451076507568,0.5773502691896258,0.8419477343559265,0.584104061126709
702,How are arrays passed to functions?,the same way but with [] at the declaration and the actual function.,by reference.,3.0,0,0.7156510949134827,0.0,0.7240760922431946,0.20851971209049225
703,How are arrays passed to functions?,specify the array name without brackets.,by reference.,3.0,0,0.6516584753990173,0.0,0.5155023336410522,0.241588294506073
704,How are arrays passed to functions?,by reference,by reference.,5.0,1,0.9144575595855713,1.0,0.9868684411048889,0.9849526286125183
705,How are arrays passed to functions?,"You pass the name of the array to the function. So for: int bin [10]; you pass it to an array like so: jinglebin; but jingle must be declared correctly in order to receive an array, either with prototype void jingleint []; or with the definition in its initialization: void jingleint array []; It is also worth noting that arrays are passed to function by reference, so as to not copy large arrays over and over and burn memory. This gives the function complete control over the array however.",by reference.,5.0,1,0.702930748462677,0.1162476387438193,0.17252419888973236,0.31072166562080383
706,How are arrays passed to functions?,They are called by the function then the function must loop through the array to get the set of characters.,by reference.,2.0,0,0.6698558330535889,0.0,0.43616485595703125,0.342407763004303
707,How are arrays passed to functions?,"by reference by default, unless you specify const, at which the later will make the array unmodifiable.",by reference.,5.0,1,0.7535421848297119,0.3333333333333333,0.465215802192688,0.2926885485649109
708,How are arrays passed to functions?,"The function recieves both the array and the array size as parameters. functionarrayName, arraySize",by reference.,4.0,1,0.6386528611183167,0.0,0.45016199350357056,0.4075259864330292
709,How are arrays passed to functions?,specifying array name and passing as reference in an argument into the function,by reference.,5.0,1,0.6588788032531738,0.4082482904638631,0.47399696707725525,0.35822537541389465
710,How are arrays passed to functions?,1st you must specify the array name without brackets and then the array name and size are passed as two arguments in the function call.,by reference.,4.0,1,0.6593762040138245,0.0,0.3307373821735382,0.20385423302650452
711,How are arrays passed to functions?,"arrays are passed by reference, passing the starting address of array. programmer specifies the array name without brackets and passes the array size as another argument so the function can process the specific number of elements in the array",by reference.,5.0,1,0.6871126294136047,0.17407765595569785,0.2651514410972595,0.34874486923217773
712,How are arrays passed to functions?,by reference only,by reference.,5.0,1,0.8877809643745422,1.0,0.6764550805091858,0.705079197883606
713,How are arrays passed to functions?,by reference,by reference.,5.0,1,0.9144575595855713,1.0,0.9868684411048889,0.9849526286125183
714,How are arrays passed to functions?,by reference,by reference.,5.0,1,0.9144575595855713,1.0,0.9868684411048889,0.9849526286125183
715,How are arrays passed to functions?,by refrence,by reference.,5.0,1,0.38700512051582336,0.0,0.7600094079971313,0.3990849256515503
716,How are arrays passed to functions?,"functionint [], int length",by reference.,4.0,1,0.4442038834095001,0.0,0.6377966403961182,0.36231017112731934
717,How are arrays passed to functions?,by reference,by reference.,5.0,1,0.9144575595855713,1.0,0.9868684411048889,0.9849526286125183
718,How are arrays passed to functions?,by reference,by reference.,5.0,1,0.9144575595855713,1.0,0.9868684411048889,0.9849526286125183
719,How are arrays passed to functions?,"The function reads the variables, stores them. then returns the what ever the variable reads. The function then prints the content of the array.",by reference.,2.5,0,0.6883634328842163,0.0,0.36798369884490967,0.406471312046051
720,"What is the difference between an array declared as static, and one that is not?",a static array will store the new values that were assigned to each of its elements. meaning if you call a function twice it will use the last values that were returned the first time. if you do not declare it static then the new values will not be stored and will be reset to their original value,"The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",5.0,1,0.9567229151725769,0.4082482904638631,0.6812005043029785,0.5193592309951782
721,"What is the difference between an array declared as static, and one that is not?",a static array can only be referenced not accessed. Also static arrays can be used without creating an object.,"The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",4.0,1,0.9001857042312622,0.6963106238227914,0.5645545721054077,0.6210577487945557
722,"What is the difference between an array declared as static, and one that is not?",An array declared as static is not created and and initialized each time the function and it is also not destroyed when the function terminates.,"The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",5.0,1,0.966482937335968,0.7745966692414836,0.6859965324401855,0.7304551005363464
723,"What is the difference between an array declared as static, and one that is not?","A program intializes static local arrays when their declarations are first encountered. If a static array is not initialized explicityly by the programmer, earch element of that array is intialized to zero by the compiler when the array is created. Non-static array members cannot be initialized at all in C plus plus.","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",4.0,1,0.943452775478363,0.7027642214999339,0.7034481763839722,0.8079721927642822
724,"What is the difference between an array declared as static, and one that is not?",Arrays that are static remain the same size throughout the program execution.,"The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",4.0,1,0.9402887225151062,0.7071067811865477,0.7099324464797974,0.6149821877479553
725,"What is the difference between an array declared as static, and one that is not?","a static array will only be initilized once, a non static array will be re-initilized once the program reaches the initilization line again.","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",5.0,1,0.9476160407066345,0.7001400420140049,0.7172659635543823,0.6267462372779846
726,"What is the difference between an array declared as static, and one that is not?",An array declared as static is available from beginning of program to end. One with o static declaration disappears if it is not accessed within the right scope.,"The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",4.5,1,0.9586804509162903,0.6454972243679029,0.72948157787323,0.7852540612220764
727,"What is the difference between an array declared as static, and one that is not?",a static array has pre-runtime size and that size cannot be changed. A dynamic array gets its size at runtime.,"The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",3.0,0,0.8868463039398193,0.45226701686664544,0.7133884429931641,0.5725402235984802
728,"What is the difference between an array declared as static, and one that is not?","If an array is declared as static, it is not created each time the array is called.","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",5.0,1,0.9666732549667358,0.8333333333333333,0.6577919721603394,0.561268150806427
729,"What is the difference between an array declared as static, and one that is not?","An array that is not declared as static will re-initialize every time the function declaring it is called. A static array will initialize only once, at the declaration, and will store the values in it is elements throughout the duration of the program, even if the same function is called multiple times, a static array will only initialize once.","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",5.0,1,0.9787003993988037,0.7223151185146153,0.8390204906463623,0.6056383848190308
730,"What is the difference between an array declared as static, and one that is not?","All elements are initialized to zero if not explicitly initialized, this does not happen for automatic local arrays","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",4.5,1,0.9082189798355103,0.6123724356957946,0.5404613614082336,0.5633587837219238
731,"What is the difference between an array declared as static, and one that is not?","All elements are initialized to zero if not explicitly initialized for a static array, while a non-static array is not initialized to zero.","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",4.5,1,0.887191116809845,0.8249579113843056,0.6061496734619141,0.5267336368560791
732,"What is the difference between an array declared as static, and one that is not?",static cannot be changed,"The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",3.0,0,0.8479355573654175,0.7071067811865476,0.3922156095504761,0.3476864993572235
733,"What is the difference between an array declared as static, and one that is not?","A static array has a set size that cannot change. The data may not need all of the space assigned, or could go beyond the size.","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",4.0,1,0.9429463148117065,0.4082482904638631,0.5203322172164917,0.6617944240570068
734,"What is the difference between an array declared as static, and one that is not?","A static member prevents naming conflictsnot put into global namespacewhile allowing for information hidingprivate, public.","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",3.0,0,0.8914647102355957,0.30151134457776363,0.4479552209377289,0.22978363931179047
735,"What is the difference between an array declared as static, and one that is not?",A static local array exists for the duration of the program and its elements are initialized to 0 if not explicitly initialized. So a static local array 's elements will still be the same when called later unless specifically initialized to something else. This does not happen for automatic arrays.,"The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",5.0,1,0.9613444805145264,0.6711560552140245,0.7370096445083618,0.794256329536438
736,"What is the difference between an array declared as static, and one that is not?","Static arrays are those with a declared size, that is known to the program, whereas non-static arrays leave the size undeclared and open so it can be assigned later. Usually used for input purposes.","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",3.0,0,0.9596418738365173,0.5999999999999999,0.5925419330596924,0.584750235080719
737,"What is the difference between an array declared as static, and one that is not?","static arrays keep the values after the end of a function, while non static reinitialize every time.","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",5.0,1,0.926226019859314,0.6963106238227914,0.7611954808235168,0.5599935054779053
738,"What is the difference between an array declared as static, and one that is not?","Static arrays are created and initialized only once, and the values are not destroyed when the function terminates in the program. Automatic arrays reset everytime the function is called.","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",5.0,1,0.9613454341888428,0.7492686492653554,0.816240668296814,0.8141613006591797
739,"What is the difference between an array declared as static, and one that is not?","its not created and initialized each time program calls the function, and is not destroyed every time the function ends in the program.","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",5.0,1,0.9670786261558533,0.7001400420140049,0.7652884721755981,0.4759523868560791
740,"What is the difference between an array declared as static, and one that is not?","When we declare it static the array is not destroyed after the function is over. When an array is not declared as static, the array is created and initialized every time a function calls it.","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",5.0,1,0.9744946360588074,0.8215838362577494,0.6952786445617676,0.6815394163131714
741,"What is the difference between an array declared as static, and one that is not?",the static array exists for the duration of the program,"The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",4.5,1,0.8990446329116821,0.7745966692414836,0.7280371189117432,0.7345744371414185
742,"What is the difference between an array declared as static, and one that is not?",an array declared as static can only be declared once,"The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",3.5,0,0.9185261726379395,0.9428090415820636,0.735129714012146,0.7616326808929443
743,"What is the difference between an array declared as static, and one that is not?","A static array exists in memory until the program terminates, whereas an automaticor normalarray is removed when the function that created it terminates","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",5.0,1,0.9471995234489441,0.5345224838248489,0.7700894474983215,0.6222988367080688
744,"What is the difference between an array declared as static, and one that is not?",not answered,"The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",0.0,0,0.6615928411483765,0.0,0.2500767111778259,0.13314202427864075
745,"What is the difference between an array declared as static, and one that is not?",Only constants can be used to declare the size of automatic and static arrays Exists for the duration of the program Is initialized when its declaration is first encountered All elements are initialized to zero if not explicitly initialized,"The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",5.0,1,0.946384608745575,0.6123724356957947,0.7898685932159424,0.7563294172286987
746,"What is the difference between an array declared as static, and one that is not?",A static array cannot be changed in the program.,"The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",3.0,0,0.9447875618934631,0.8660254037844388,0.5526162385940552,0.6274782419204712
747,"What is the difference between an array declared as static, and one that is not?",static arrays are available throughout the program,"The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",5.0,1,0.8510526418685913,0.8660254037844388,0.5744236707687378,0.5142350196838379
748,"What is the difference between an array declared as static, and one that is not?","a static array is allocated when the program starts and is freed when the program exits but has limited scope, while an array that is not declared static is allocated and freed when it comes into and out of scope.","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",5.0,1,0.9637659192085266,0.6499336836196815,0.6569641828536987,0.5443341135978699
749,"What is the difference between an array declared as static, and one that is not?","if they are declared fixed or static that means they cannot change size once their storage has been allocated, however one that is not or dynamic arrarys can be resized.","The arrays declared as static live throughout the life of the program; that is, they are initialized only once, when the function that declares the array it is first called.",3.0,0,0.9313799738883972,0.4264014327112209,0.5310519337654114,0.39616531133651733
750,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"at least 2, depending on how many arrays are being used.","All the dimensions, except the first one.",2.5,0,0.8823734521865845,0.0,0.46031618118286133,0.16494221985340118
751,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,all of them.,"All the dimensions, except the first one.",3.5,0,0.0,0.0,0.0,0.0
752,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"When passing a multi-dimensional array, all dimensions must be specified except for the first dimension.","All the dimensions, except the first one.",5.0,1,0.9221394658088684,0.3779644730092273,0.7854956984519958,0.6737762093544006
753,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,It depends what parameters you are passing in a multidimensional. A multideminsional can have more than two dimensions.,"All the dimensions, except the first one.",3.5,0,0.9087599515914917,0.4082482904638631,0.49152281880378723,0.4020436406135559
754,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,The first dimension is not required however the subsequent dimensionsare needed for the compiler.,"All the dimensions, except the first one.",5.0,1,0.9131069779396057,0.0,0.33802980184555054,0.367875874042511
755,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,all but the first,"All the dimensions, except the first one.",5.0,1,0.0,0.0,0.0,0.0
756,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,All of the dimensions must be specified.,"All the dimensions, except the first one.",3.5,0,0.9119837284088135,0.7071067811865476,0.6082594394683838,0.45984768867492676
757,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,just the first one at least.,"All the dimensions, except the first one.",2.0,0,0.9105786085128784,0.0,0.6604185104370117,0.35918885469436646
758,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"Two paramaters, the array and how many columns. arraya [], [3]","All the dimensions, except the first one.",4.0,1,0.7664819359779358,0.0,0.43523430824279785,0.17035406827926636
759,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"The size of the first dimension can be omitted, same as a regular array. However, for every dimension outside the first, the size of those dimensions must be specified when passed, for example, a multi-dimensional array of [2] [4] [6] with the name MultiArray would be passed as: MultiArray [] [4] [6], 2","All the dimensions, except the first one.",4.5,1,0.8759710788726807,0.18898223650461365,0.5719548463821411,0.540887713432312
760,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,Size of subsequent dimensions are required. Compiler must know how many elements to skip to move to the second element in the first dimension,"All the dimensions, except the first one.",4.5,1,0.914364755153656,0.30151134457776363,0.4335208237171173,0.38033628463745117
761,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,Every dimension after the first.,"All the dimensions, except the first one.",5.0,1,0.9213017821311951,0.0,0.7400420904159546,0.6148301362991333
762,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,both,"All the dimensions, except the first one.",2.5,0,0.0,0.0,0.0,0.0
763,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"the size of the first dimension does not need to be specified, but all other dimensions do.","All the dimensions, except the first one.",5.0,1,0.9485104084014893,0.4082482904638631,0.5125904679298401,0.6786206960678101
764,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"when passingin maina multidimensional array to a function, no dimensions need be specified","All the dimensions, except the first one.",2.0,0,0.8254696130752563,0.3535533905932738,0.3961995244026184,0.3962838649749756
765,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"All dimensions except for the first one need to be specified when passing an array to a function, the compiler needs to know how many memory addresses to skip to make it back to the 2nd element in the first dimension. The size of the first dimension does not need to be specified.","All the dimensions, except the first one.",5.0,1,0.9335420727729797,0.1924500897298752,0.45063579082489014,0.2979922890663147
766,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,as many as there are dimensions. Most commonly just rows and columns,"All the dimensions, except the first one.",3.5,0,0.8764461278915405,0.447213595499958,0.5647415518760681,0.5713172554969788
767,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"at least 2, but it should always equal the number of dimensions that the argument is expecting ... like ... blah [] [] [] [] will require 4 dimensional array input. blah [] [] [] will require a 3 dimensional array. blah [] [] will require a 2 dimensional array.","All the dimensions, except the first one.",3.0,0,0.7536742091178894,0.15249857033260467,0.4299347996711731,0.3038725256919861
768,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"None, just pass the array name.","All the dimensions, except the first one.",2.0,0,0.8760730624198914,0.0,0.5537388920783997,0.2825954258441925
769,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,all subsequent dimensions after the first dimension. first is not needed to be specified.,"All the dimensions, except the first one.",5.0,1,0.9354515671730042,0.447213595499958,0.6579422354698181,0.6370084285736084
770,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"all dimensions, excluding the first one.","All the dimensions, except the first one.",5.0,1,0.9801860451698303,0.7071067811865476,0.9082908034324646,0.9282568693161011
771,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,all dimensions but the first,"All the dimensions, except the first one.",5.0,1,0.9547841548919678,1.0,0.9407679438591003,0.9088888168334961
772,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,the first needs to be specified by size and the rest need only be statedfirst like this [3] then [] [] [],"All the dimensions, except the first one.",3.0,0,0.7803143858909607,0.0,0.6103630065917969,0.5704331398010254
773,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,one less than the number of dimensions the array contains,"All the dimensions, except the first one.",4.5,1,0.8787801265716553,0.5,0.5408123731613159,0.5129543542861938
774,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,not answered,"All the dimensions, except the first one.",0.0,0,0.6308818459510803,0.0,0.3647400140762329,0.2989359200000763
775,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,one,"All the dimensions, except the first one.",2.0,0,0.0,0.0,0.0,0.0
776,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,All subsequent dimensions after the first one.,"All the dimensions, except the first one.",5.0,1,0.9467285871505737,0.7071067811865476,0.7514169216156006,0.7194291353225708
777,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,two or more,"All the dimensions, except the first one.",2.5,0,0.0,0.0,0.0,0.0
778,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,1 less than the total number of dimensions,"All the dimensions, except the first one.",4.5,1,0.8130375146865845,0.5773502691896258,0.6029620170593262,0.6110219955444336
779,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,"Multi dimensional arrays are accessed using more than 1 index, one for each dimension at least.","All the dimensions, except the first one.",3.5,0,0.8614705801010132,0.0,0.6060577630996704,0.38298219442367554
780,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,compilation error,Run-time error.,1.0,0,0.6033677458763123,0.7071067811865476,0.9058982133865356,0.44143912196159363
781,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,compilation error.,Run-time error.,1.0,0,0.7521222233772278,0.7071067811865476,0.9290317893028259,0.4666295647621155
782,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,Using an index outside the bounds of the array generates a run-time error.,Run-time error.,5.0,1,0.8169680833816528,0.5773502691896257,0.8233508467674255,0.6961982846260071
783,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run-time error,Run-time error.,5.0,1,0.9701896905899048,1.0000000000000002,0.9874709248542786,0.9902476668357849
784,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,Its a run-time error.,Run-time error.,5.0,1,0.9390603303909302,1.0000000000000002,0.9717427492141724,0.9161993265151978
785,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time error,Run-time error.,5.0,1,0.9011210799217224,1.0000000000000002,0.971966028213501,0.9363133907318115
786,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,Run-time error.,Run-time error.,5.0,1,1.0,1.0000000000000002,1.0,0.9999998211860657
787,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run-time error,Run-time error.,5.0,1,0.9701896905899048,1.0000000000000002,0.9874709248542786,0.9902476668357849
788,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,compilation error,Run-time error.,1.0,0,0.6033677458763123,0.7071067811865476,0.9058982133865356,0.44143912196159363
789,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,"This is a run-time error. The program will compile AND execute, so these errors can be difficult to debug.",Run-time error.,5.0,1,0.8678452372550964,0.5773502691896257,0.6350903511047363,0.903744101524353
790,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,this is a run-time error or execution-time error.,Run-time error.,5.0,1,0.9411030411720276,0.9128709291752771,0.9330756664276123,0.8302594423294067
791,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,Run-time.,Run-time error.,5.0,1,0.9280121326446533,1.0000000000000002,0.6762422323226929,0.7779680490493774
792,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time,Run-time error.,5.0,1,0.8109177350997925,1.0000000000000002,0.5918287634849548,0.7182108759880066
793,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,Generates a compilation error. The compiler will complain that the variable you are referring to was never declared.,Run-time error.,1.0,0,0.7880430221557617,0.3535533905932738,0.5937012434005737,0.5721486806869507
794,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run-time,Run-time error.,5.0,1,0.8828099966049194,1.0000000000000002,0.6421661972999573,0.7574784755706787
795,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,Run-time error.,Run-time error.,5.0,1,1.0,1.0000000000000002,1.0,0.9999998211860657
796,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time error,Run-time error.,5.0,1,0.9011210799217224,1.0000000000000002,0.971966028213501,0.9363133907318115
797,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,runtime error.,Run-time error.,5.0,1,0.7152106165885925,0.7071067811865476,0.9654064178466797,0.6663661599159241
798,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,Compilation error.,Run-time error.,1.0,0,0.7521222233772278,0.7071067811865476,0.9290317893028259,0.4666295647621155
799,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run-time error,Run-time error.,5.0,1,0.9701896905899048,1.0000000000000002,0.9874709248542786,0.9902476668357849
800,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run-time error,Run-time error.,5.0,1,0.9701896905899048,1.0000000000000002,0.9874709248542786,0.9902476668357849
801,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run-time error,Run-time error.,5.0,1,0.9701896905899048,1.0000000000000002,0.9874709248542786,0.9902476668357849
802,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,compilation error.,Run-time error.,1.0,0,0.7521222233772278,0.7071067811865476,0.9290317893028259,0.4666295647621155
803,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run-time error,Run-time error.,5.0,1,0.9701896905899048,1.0000000000000002,0.9874709248542786,0.9902476668357849
804,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,not answered,Run-time error.,0.0,0,0.5819714069366455,0.0,0.6344258189201355,0.1426602602005005
805,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run-time error,Run-time error.,5.0,1,0.9701896905899048,1.0000000000000002,0.9874709248542786,0.9902476668357849
806,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,compilation error,Run-time error.,1.0,0,0.6033677458763123,0.7071067811865476,0.9058982133865356,0.44143912196159363
807,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,compilation error,Run-time error.,1.0,0,0.6033677458763123,0.7071067811865476,0.9058982133865356,0.44143912196159363
808,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,"It will NOT cause a compilation error. It will either give a run-time error, or will give the value at that actual location in memory, causing a logic error.",Run-time error.,5.0,1,0.8482735753059387,0.662266178532522,0.4459760785102844,0.17235815525054932
809,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,it is a run-time error,Run-time error.,5.0,1,0.908218502998352,1.0000000000000002,0.9338807463645935,0.8985962867736816
810,"How are bi-dimensional arrays stored in memory, by rows or by columns?","usually it is by rows then followed by the column, but it is up to the programmer to determine how values are stored in bi-dimensional arrays.",By rows.,2.5,0,0.7048190236091614,0.30151134457776363,0.25813040137290955,0.19926786422729492
811,"How are bi-dimensional arrays stored in memory, by rows or by columns?",by rows.,By rows.,5.0,1,0.9999998211860657,1.0,0.9999999403953552,0.9999998807907104
812,"How are bi-dimensional arrays stored in memory, by rows or by columns?",Multi-dimensional arrays are stored in memory by rows.,By rows.,5.0,1,0.774491548538208,0.4082482904638631,0.5968730449676514,0.5493440628051758
813,"How are bi-dimensional arrays stored in memory, by rows or by columns?","A bi-dimensional or two-dimensional array is stored in a row-column matrix. Where the first index indicates the row and the second indicates the column. This means that when array elements are accessed in the order in which they are actually stored in memory, the right index changes faster than the left.",By rows.,4.5,1,0.6672393083572388,0.0,0.3943758010864258,0.36354219913482666
814,"How are bi-dimensional arrays stored in memory, by rows or by columns?",They are stored in memory in rows.,By rows.,5.0,1,0.6962904334068298,0.5773502691896258,0.6704311370849609,0.669987142086029
815,"How are bi-dimensional arrays stored in memory, by rows or by columns?",rows,By rows.,5.0,1,0.7139224410057068,1.0,0.9616202712059021,0.6108484268188477
816,"How are bi-dimensional arrays stored in memory, by rows or by columns?",By rows.,By rows.,5.0,1,0.9999998211860657,1.0,0.9999999403953552,0.9999998807907104
817,"How are bi-dimensional arrays stored in memory, by rows or by columns?",by rows,By rows.,5.0,1,0.9180000424385071,1.0,0.9833954572677612,0.9687954187393188
818,"How are bi-dimensional arrays stored in memory, by rows or by columns?",m-by-n. by row-column.,By rows.,4.0,1,0.7617085576057434,0.0,0.8182584643363953,0.16757676005363464
819,"How are bi-dimensional arrays stored in memory, by rows or by columns?",bi-dimensional arrays are stored by rows,By rows.,5.0,1,0.7518357038497925,0.447213595499958,0.6894822120666504,0.5842719078063965
820,"How are bi-dimensional arrays stored in memory, by rows or by columns?",By rows.,By rows.,5.0,1,0.9999998211860657,1.0,0.9999999403953552,0.9999998807907104
821,"How are bi-dimensional arrays stored in memory, by rows or by columns?",By column.,By rows.,1.0,0,0.8108457326889038,0.0,0.8379311561584473,0.3524611294269562
822,"How are bi-dimensional arrays stored in memory, by rows or by columns?",columns,By rows.,1.0,0,0.4820253551006317,0.0,0.8303329348564148,0.370653361082077
823,"How are bi-dimensional arrays stored in memory, by rows or by columns?",By rows,By rows.,5.0,1,0.9180000424385071,1.0,0.9833954572677612,0.9687954187393188
824,"How are bi-dimensional arrays stored in memory, by rows or by columns?",by-dimensional arrays are stored by row,By rows.,5.0,1,0.8110831379890442,0.0,0.7317132353782654,0.6723354458808899
825,"How are bi-dimensional arrays stored in memory, by rows or by columns?","x by y is row by column. So x is rows, and y is columns. Since the length of the row is not needed when passing the array to the function, this leads me to believe that bi-dimensional arrays are stored by rows at a time.",By rows.,5.0,1,0.7675700187683105,0.42640143271122094,0.3216151297092438,0.45371854305267334
826,"How are bi-dimensional arrays stored in memory, by rows or by columns?","Both, they are stored in seperate sections.",By rows.,2.5,0,0.6353780627250671,0.0,0.6423366665840149,0.1364125907421112
827,"How are bi-dimensional arrays stored in memory, by rows or by columns?","by rows, then columns.",By rows.,4.5,1,0.8976877927780151,0.7071067811865476,0.852600634098053,0.7679233551025391
828,"How are bi-dimensional arrays stored in memory, by rows or by columns?",Rows,By rows.,5.0,1,0.7139224410057068,1.0,0.9616202712059021,0.6108484268188477
829,"How are bi-dimensional arrays stored in memory, by rows or by columns?",by rows of rows,By rows.,5.0,1,0.885531485080719,1.0,0.9365854263305664,0.8973780870437622
830,"How are bi-dimensional arrays stored in memory, by rows or by columns?",by rows,By rows.,5.0,1,0.9180000424385071,1.0,0.9833954572677612,0.9687954187393188
831,"How are bi-dimensional arrays stored in memory, by rows or by columns?",rows,By rows.,5.0,1,0.7139224410057068,1.0,0.9616202712059021,0.6108484268188477
832,"How are bi-dimensional arrays stored in memory, by rows or by columns?",stored by rows,By rows.,5.0,1,0.8404394388198853,0.7071067811865476,0.8834537863731384,0.8103101253509521
833,"How are bi-dimensional arrays stored in memory, by rows or by columns?",by rows,By rows.,5.0,1,0.9180000424385071,1.0,0.9833954572677612,0.9687954187393188
834,"How are bi-dimensional arrays stored in memory, by rows or by columns?",by rows,By rows.,5.0,1,0.9180000424385071,1.0,0.9833954572677612,0.9687954187393188
835,"How are bi-dimensional arrays stored in memory, by rows or by columns?",by rows,By rows.,5.0,1,0.9180000424385071,1.0,0.9833954572677612,0.9687954187393188
836,"How are bi-dimensional arrays stored in memory, by rows or by columns?",rows,By rows.,5.0,1,0.7139224410057068,1.0,0.9616202712059021,0.6108484268188477
837,"How are bi-dimensional arrays stored in memory, by rows or by columns?",by row and column,By rows.,2.5,0,0.7977150678634644,0.0,0.8961634635925293,0.7836794853210449
838,"How are bi-dimensional arrays stored in memory, by rows or by columns?",by rows,By rows.,5.0,1,0.9180000424385071,1.0,0.9833954572677612,0.9687954187393188
839,"How are bi-dimensional arrays stored in memory, by rows or by columns?",No answer,By rows.,1.0,0,0.42384952306747437,0.0,0.4053496718406677,0.12007816135883331
840,"In one sentence, what is the main idea implemented by insertion sort?","Takes an element of an array and compares it with the next element, depending on the values of the two elements they will switch and then the program will compare the new switched element with the next one in the array.","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",3.0,0,0.9490035772323608,0.7223151185146154,0.6235882043838501,0.4575198292732239
841,"In one sentence, what is the main idea implemented by insertion sort?","Insertion sort divides the list into sorted and unsorted regions, then takes each item from the unsorted region and inserts it into its correct order in the sorted region.","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",5.0,1,0.9261581301689148,0.4522670168666455,0.7691484689712524,0.7545291185379028
842,"In one sentence, what is the main idea implemented by insertion sort?",The sorted array or list is built one entry at a time.,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",3.5,0,0.9291709065437317,0.7071067811865477,0.6938307285308838,0.6094264984130859
843,"In one sentence, what is the main idea implemented by insertion sort?",It starts with the second element and checks it to see if it is less than the elementsto the left of it and if it is it inserts it into its corrected position.,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",5.0,1,0.9565271139144897,0.629940788348712,0.732995867729187,0.5774809122085571
844,"In one sentence, what is the main idea implemented by insertion sort?",Compare two numbers at a time and swap until the entire list is sorted.,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",2.0,0,0.9290703535079956,0.5345224838248489,0.6726453304290771,0.46590420603752136
845,"In one sentence, what is the main idea implemented by insertion sort?","Assume the first number is sorted, then move down the list and insert the numbers you come across into the corresponding place on the sorted side of the list.","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",5.0,1,0.9549945592880249,0.5163977794943223,0.7820444703102112,0.5966007709503174
846,"In one sentence, what is the main idea implemented by insertion sort?",insertion sort is were after k iterations the first k items in the array are sorted it take the k plus 1 item and inserts it into the correct position in the already sorted k elements.,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",4.5,1,0.9350082874298096,0.692820323027551,0.6741975545883179,0.5790092349052429
847,"In one sentence, what is the main idea implemented by insertion sort?",Looking at the 2nd element move forward and place the element in the correct spot.,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",4.5,1,0.9468486309051514,0.6324555320336759,0.6504549980163574,0.4589114189147949
848,"In one sentence, what is the main idea implemented by insertion sort?","Starting at the beginning of an array, take each element in order and place it in it is correct position relative to all previously sorted elements.","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",5.0,1,0.9737324714660645,0.645497224367903,0.7421596646308899,0.6682912707328796
849,"In one sentence, what is the main idea implemented by insertion sort?",To sort the elements in an array by removing an element from the input data and inserting it at the correct position.,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",5.0,1,0.9386985898017883,0.632455532033676,0.7460181713104248,0.6800222396850586
850,"In one sentence, what is the main idea implemented by insertion sort?","Insertion sort removes an element from the data, and inserts it at the correct position in the already sorted list.","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",5.0,1,0.9543464183807373,0.632455532033676,0.7934514284133911,0.6163641810417175
851,"In one sentence, what is the main idea implemented by insertion sort?",Take a number and choose a pivot point and insert the number in the correct position from the pivot point.,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",3.0,0,0.932243287563324,0.25,0.7196502685546875,0.4910917580127716
852,"In one sentence, what is the main idea implemented by insertion sort?",have a marker and sort everything to the left of the value for every new value when moving to the right.,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",3.0,0,0.9573934078216553,0.44721359549995804,0.8016306161880493,0.5492388010025024
853,"In one sentence, what is the main idea implemented by insertion sort?",The main idea behind insertion sort is to take a random variable from the right and insert it in order to the left.,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",4.5,1,0.9634138345718384,0.44721359549995804,0.7349841594696045,0.6340608596801758
854,"In one sentence, what is the main idea implemented by insertion sort?",Insertion sort progresses through a list of elements and determines where the next element should be inserted into an already sorted array starting with sorting and using the first two elements.,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",4.5,1,0.9359869360923767,0.625,0.7331925630569458,0.6228708028793335
855,"In one sentence, what is the main idea implemented by insertion sort?","it goes through the list only once, picking each integer and putting it in its desired position, then continuing.","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",4.0,1,0.9632934331893921,0.3535533905932738,0.659700870513916,0.6304171681404114
856,"In one sentence, what is the main idea implemented by insertion sort?",Inserting array items in to their appropriate positions from smallest to largest at a pivot which starts on the second element of the array.,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",3.5,0,0.9396877884864807,0.5669467095138409,0.7325855493545532,0.6186256408691406
857,"In one sentence, what is the main idea implemented by insertion sort?",Insert the item into its proper position by shifting larger sorted array values to the right.,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",3.0,0,0.9302898645401001,0.5976143046671971,0.6925963163375854,0.48973917961120605
858,"In one sentence, what is the main idea implemented by insertion sort?",a comparison sort in which the sorted array is built one entry at a time,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",4.0,1,0.9261443614959717,0.6546536707079773,0.7048646807670593,0.6042817831039429
859,"In one sentence, what is the main idea implemented by insertion sort?","Insertion sort is an algorithm where the first element of the array is in the sorted list, all the other pick one by one and taken from the unsorted array, to the sorted array.","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",4.5,1,0.9490102529525757,0.7559289460184546,0.7052038311958313,0.6697453260421753
860,"In one sentence, what is the main idea implemented by insertion sort?","Every iteration of an insertion sort takes away an element from the input data, inserting it at the right position in the sorted list.","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",5.0,1,0.960108757019043,0.5241424183609593,0.7344177961349487,0.61593097448349
861,"In one sentence, what is the main idea implemented by insertion sort?",the insertion sort creates a new array and inserts each item in its place with respect to the new array.,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",4.0,1,0.9226108193397522,0.5477225575051663,0.697960615158081,0.6862177848815918
862,"In one sentence, what is the main idea implemented by insertion sort?","Insertion sort takes each entitity of an unsorted array in order, and sorts it into the correct position between the entities it has sorted.","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",5.0,1,0.9498257637023926,0.5000000000000001,0.7785190343856812,0.7158300876617432
863,"In one sentence, what is the main idea implemented by insertion sort?","it takes the second element and swaps it with the 1st if it is less and keeps it there if its larger, then it goes to the third element and inserts it in the right places with respect to the first 2 elements and so on ...","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",5.0,1,0.9658913612365723,0.566946709513841,0.6878001689910889,0.5133423805236816
864,"In one sentence, what is the main idea implemented by insertion sort?","Starting with the first element in the array, each following element is put in place by determining if it is smaller or larger than the starting element.","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",4.0,1,0.9553773403167725,0.6488856845230502,0.7167671322822571,0.5851455330848694
865,"In one sentence, what is the main idea implemented by insertion sort?","one by one, each item is taken and placed into the correct place in the sorted portion of the array until there are no more items","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",4.5,1,0.9546641111373901,0.4714045207910317,0.6937050819396973,0.7260183095932007
866,"In one sentence, what is the main idea implemented by insertion sort?",you take each element and insert it in the correct position with respect to all the elements before it,"Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",5.0,1,0.9544387459754944,0.7071067811865477,0.5969678163528442,0.6727341413497925
867,"In one sentence, what is the main idea implemented by insertion sort?","Insertion sort is a simple sorting algorithm, a comparison sort in which the sorted arrayor listis built one entry at a time.","Taking one array element at a time, from left to right, it inserts it in the right position among the already sorted elements on its left.",4.0,1,0.9154953956604004,0.3651483716701108,0.6652315258979797,0.5920174717903137
868,"In one sentence, what is the main idea implemented by selection sort?",Searches an array for the largest or the smallest element and is moved out to the front of the array then it will search for the next largest or the smallest element to move out to the front,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",5.0,1,0.9482073187828064,0.6155870112510926,0.6958988308906555,0.46295639872550964
869,"In one sentence, what is the main idea implemented by selection sort?","Selection sort searches the whole array for the largest item and puts it at the end of the array, then searches for the second largest item and puts it at the second to last spot and so on.","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",4.5,1,0.9540652632713318,0.3779644730092273,0.6557431817054749,0.4720749855041504
870,"In one sentence, what is the main idea implemented by selection sort?",Finds the minimum value and swap it with the value in the first position.,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",5.0,1,0.9498128294944763,0.3535533905932738,0.8141302466392517,0.5083621740341187
871,"In one sentence, what is the main idea implemented by selection sort?",It finds the minimum element in the array and swaps it with the first element then repeats this step swapping the minimum element with nth positions in the array.,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",5.0,1,0.9636578559875488,0.8486684247915056,0.8520127534866333,0.7502239346504211
872,"In one sentence, what is the main idea implemented by selection sort?","Find the lowest value and place it at the front, then find the next lowest and place it in front of the last value, etc.","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",4.5,1,0.9337201118469238,0.0,0.6395831108093262,0.3631798326969147
873,"In one sentence, what is the main idea implemented by selection sort?","Cycle through the unsorted list, place the minimum in the next slot in the sorted list, and repeat.","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",4.5,1,0.9139856696128845,0.30151134457776363,0.8248246312141418,0.6254569292068481
874,"In one sentence, what is the main idea implemented by selection sort?",find the minimum value in the list swap it with the first element in the list the find the second largest and swap it with the second element in the array continue like this until the array is sorted.,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",5.0,1,0.9585173726081848,0.5604485383178051,0.8071889877319336,0.6176957488059998
875,"In one sentence, what is the main idea implemented by selection sort?",Find the smallest and put it in the current position till you get to the end.,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",5.0,1,0.9324603080749512,0.447213595499958,0.6041831970214844,0.37968647480010986
876,"In one sentence, what is the main idea implemented by selection sort?",Find the lowest unsorted value in the array and place it at the current positionstarting at the first element in the arrayand advance the current position by one.,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",5.0,1,0.9460472464561462,0.545544725589981,0.728975772857666,0.47559672594070435
877,"In one sentence, what is the main idea implemented by selection sort?",To sort the elements by comparing two elements and swapping the smaller one to sort the elements in the array.,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",3.5,0,0.9507619142532349,0.6859943405700354,0.7298513054847717,0.7149820327758789
878,"In one sentence, what is the main idea implemented by selection sort?","Selection sort finds the minimum value in the list, swaps it with the first value in the list, and repeats throughout the list.","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",4.5,1,0.9393362402915955,0.32444284226152514,0.7904034852981567,0.6607329845428467
879,"In one sentence, what is the main idea implemented by selection sort?","Select the minimum number from the array and put it in the current position, then move on","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",5.0,1,0.9591736793518066,0.7071067811865477,0.7940618991851807,0.6485399603843689
880,"In one sentence, what is the main idea implemented by selection sort?",Find the lowest value and place it in the front of the list and swap it with that value. Continue moving right.,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",5.0,1,0.9462189674377441,0.30151134457776363,0.7895219326019287,0.48306193947792053
881,"In one sentence, what is the main idea implemented by selection sort?",The main idea behind selection sort is to take the least variable from the right and put it directly to the left.,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",4.5,1,0.9556528329849243,0.5000000000000001,0.6998270153999329,0.5129281878471375
882,"In one sentence, what is the main idea implemented by selection sort?","Find the smallest value in the list and make it the first element, then find the smallest value of the leftover list and make it the first element of the leftover list and continue until the list is sorted.","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",5.0,1,0.9445163011550903,0.3244428422615251,0.6510031223297119,0.4666275978088379
883,"In one sentence, what is the main idea implemented by selection sort?",It runs through and finds the lowestor highestvalue and puts it in its desired position.,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",4.5,1,0.9258831739425659,0.0,0.5604344606399536,0.37811943888664246
884,"In one sentence, what is the main idea implemented by selection sort?","Places the smallest item in the list at position 1, and then proceeds to each value until the last position of the ray is reached.","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",5.0,1,0.9466298818588257,0.0,0.676235020160675,0.4354667663574219
885,"In one sentence, what is the main idea implemented by selection sort?",Search for the largest item in an array and swap it with the last unsorted item.,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",4.5,1,0.9135729074478149,0.3333333333333333,0.6633926630020142,0.6919209361076355
886,"In one sentence, what is the main idea implemented by selection sort?",finds the smallest element and places in 1st position. then the process is repeated on the rest of the array.,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",5.0,1,0.9539316296577454,0.4242640687119287,0.6824495196342468,0.379372775554657
887,"In one sentence, what is the main idea implemented by selection sort?",Selection sort is an algorithm that selects the larges item the array and puts it in its place; then select the next largest until the array is sorted,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",4.5,1,0.9372371435165405,0.5163977794943223,0.7106138467788696,0.5691136121749878
888,"In one sentence, what is the main idea implemented by selection sort?",Select the smallest number in the list and move it to the front of the list and then advance to the next number.,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",5.0,1,0.9308342337608337,0.0,0.6974236369132996,0.3938789963722229
889,"In one sentence, what is the main idea implemented by selection sort?",the selection sort chooses the largest or smallest value in an unsorted list and creates a new list using the selection depending on how it is sorted.,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",4.5,1,0.9173052906990051,0.0,0.7202534675598145,0.3997195065021515
890,"In one sentence, what is the main idea implemented by selection sort?","Selection sort finds the smallest number left unsorted in an array, and puts it at the end of what it has sorted","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",4.5,1,0.9439259767532349,0.4264014327112209,0.6666325926780701,0.48493820428848267
891,"In one sentence, what is the main idea implemented by selection sort?","selects the minimum from the remaining elements of the array, and palces the miminum in the current position and moves to the next position","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",5.0,1,0.9386005997657776,0.6201736729460425,0.879892885684967,0.5410377383232117
892,"In one sentence, what is the main idea implemented by selection sort?","To put the biggest element at the end of the list and place the next highest element behind it, and so on.","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",3.5,0,0.9585492014884949,0.6666666666666666,0.4842366874217987,0.41161730885505676
893,"In one sentence, what is the main idea implemented by selection sort?","the sort finds the largest item and places it at the end, then then next largest is found and placed next to last, continue until there is only one number left, this is the beginning of the sorted array","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",4.5,1,0.9493197798728943,0.3535533905932738,0.6226742267608643,0.5072019696235657
894,"In one sentence, what is the main idea implemented by selection sort?","you loop through the entire list, and for each iteration you find the smallest element and move it to the current position.","Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",5.0,1,0.9595043063163757,0.474341649025257,0.7434388399124146,0.6760556697845459
895,"In one sentence, what is the main idea implemented by selection sort?",Find the minimum value in the list swap it with the value in the first position; repeat the steps above for remainder of the liststarting in the second position.,"Taking one array element at a time, from left to right, it identifies the minimum from the remaining elements and swaps it with the current element.",5.0,1,0.9421603083610535,0.25,0.8265990018844604,0.6047463417053223
896,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?","The run time for this sorting program is n to the power of 2. Best case is the list is already sorted, worst case is the list is sorted but in reverse.",Nthe length of the arrayoperations achieved for a sorted array.,3.5,0,0.8834465146064758,0.447213595499958,0.5335489511489868,0.4962943196296692
897,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?","Insertion sort is Onand performs n minus 1 operations in the best-case scenario, which is when the list or array is already sorted.",Nthe length of the arrayoperations achieved for a sorted array.,4.5,1,0.8635004162788391,0.4082482904638631,0.6654863357543945,0.5619990825653076
898,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?","The number of operations for insertions sort, under best-case, is nn minus 1divided by 2. The best case for insertion sort is on a sorted list where it runs is On.",Nthe length of the arrayoperations achieved for a sorted array.,3.0,0,0.8751682043075562,0.21320071635561044,0.5844796895980835,0.41011881828308105
899,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?","Best case would be Onor n minus 1, because that is what it takes to scan the array and make one swap. The array would then be sorted and would take only 1 operation.",Nthe length of the arrayoperations achieved for a sorted array.,4.0,1,0.8519250750541687,0.5669467095138409,0.47592341899871826,0.2793070375919342
900,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",Best case-1 Worst Case-N,Nthe length of the arrayoperations achieved for a sorted array.,2.0,0,0.6272379755973816,0.0,0.4619051218032837,0.16791236400604248
901,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",It will donoperations wherenis the number of elements in the array. Best case is when all the elements are already sorted.,Nthe length of the arrayoperations achieved for a sorted array.,5.0,1,0.8947622179985046,0.4264014327112209,0.6887155771255493,0.4382225275039673
902,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",On,Nthe length of the arrayoperations achieved for a sorted array.,3.5,0,0.0,0.0,0.0,0.0
903,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",Best case is all elements sorted. n minus 1.,Nthe length of the arrayoperations achieved for a sorted array.,4.0,1,0.8335845470428467,0.447213595499958,0.5614717602729797,0.41776520013809204
904,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?","The best case scenario for an insertion sort, where all the elements of the array have been already sorted, will cause the for loop to iterate x timesx being the number of elements in the arrayand the while loop to never have to iterate, resulting in the insertion sort to require x operations.",Nthe length of the arrayoperations achieved for a sorted array.,5.0,1,0.895546019077301,0.25000000000000006,0.4361529052257538,0.5567590594291687
905,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",1 operation. the best case scenario s where it is already sorted and does one comparision.,Nthe length of the arrayoperations achieved for a sorted array.,3.0,0,0.8379953503608704,0.3779644730092273,0.5903089642524719,0.1913335770368576
906,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?","n operations, where n is the number of items.",Nthe length of the arrayoperations achieved for a sorted array.,4.0,1,0.822911262512207,0.0,0.7519441843032837,0.3843284249305725
907,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n minus 1,Nthe length of the arrayoperations achieved for a sorted array.,3.5,0,0.49144914746284485,0.0,0.538559079170227,0.08485493063926697
908,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?","On, the list is already sorted.",Nthe length of the arrayoperations achieved for a sorted array.,4.5,1,0.8293382525444031,0.7071067811865476,0.6442930698394775,0.4739497900009155
909,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",Insertion sort will take n minus 1 operations if the array is in reverse order.,Nthe length of the arrayoperations achieved for a sorted array.,4.0,1,0.8583395481109619,0.3779644730092273,0.6189899444580078,0.40576040744781494
910,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?","In the best case scenario of an already sorted list, insertion sort will progress once through the list. So the number of operations is directly proportional to the number of elements in the list. Also noted as Onin big o notation.",Nthe length of the arrayoperations achieved for a sorted array.,5.0,1,0.888792097568512,0.18898223650461363,0.630216121673584,0.5535332560539246
911,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",1 where there is a list of two ints and only one must be moved.,Nthe length of the arrayoperations achieved for a sorted array.,2.5,0,0.8514427542686462,0.0,0.5222485065460205,0.2866181433200836
912,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?","Best case is N, while the worst case is N factorial.",Nthe length of the arrayoperations achieved for a sorted array.,3.0,0,0.7936006784439087,0.0,0.4866245985031128,0.1912061721086502
913,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n minus 1 The best case is when the array is already sorted.,Nthe length of the arrayoperations achieved for a sorted array.,4.5,1,0.8908369541168213,0.632455532033676,0.6862342357635498,0.5637492537498474
914,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",worst case its equals Ontime best case its equals On to the power of 2time,Nthe length of the arrayoperations achieved for a sorted array.,3.0,0,0.8301622271537781,0.0,0.46725520491600037,0.2450733333826065
915,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",On,Nthe length of the arrayoperations achieved for a sorted array.,3.5,0,0.0,0.0,0.0,0.0
916,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",N number of times. Where N equals the number of elements in the list. Best-case scenario is that the elements in the list are already sorted.,Nthe length of the arrayoperations achieved for a sorted array.,5.0,1,0.8891337513923645,0.23570226039551587,0.7020121812820435,0.3022320866584778
917,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",the best case scenario for insertion sort is a list that is already sorted. the number of operations would be the same as the number of elements,Nthe length of the arrayoperations achieved for a sorted array.,5.0,1,0.8891621232032776,0.27735009811261463,0.5346221327781677,0.527777910232544
918,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?","insertion sort will make zero operationsand length 1 comparisonsin the best case scenario, that is, when the array its given is already in order.",Nthe length of the arrayoperations achieved for a sorted array.,3.5,0,0.8749741315841675,0.3922322702763682,0.5354681015014648,0.5438166260719299
919,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",thetanthe best case senario is that everything is already sorted,Nthe length of the arrayoperations achieved for a sorted array.,4.5,1,0.785394549369812,0.447213595499958,0.5829659700393677,0.3839184045791626
920,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n operations The best case scenario is when all the numbers are in increasing order.,Nthe length of the arrayoperations achieved for a sorted array.,5.0,1,0.8455356955528259,0.0,0.5810078382492065,0.43377697467803955
921,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?","it could be considered that having only one item would be the easiest to sort, but this could also be a trivial result as nothing is moved having two items allows the algorithm to sort the items into the correct order",Nthe length of the arrayoperations achieved for a sorted array.,2.5,0,0.8379208445549011,0.0,0.2048100233078003,0.2842386066913605
922,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",the best case is if it only has to look through the list once. The best case scenario is when it goes through the list and does not have to make any changesthe list is already sorted,Nthe length of the arrayoperations achieved for a sorted array.,4.0,1,0.8297113180160522,0.20412414523193154,0.43568432331085205,0.24776244163513184
923,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",very simplistic it moves one element from the list by one and inserting them in their correct position into a new slot then starting over. best case is01,Nthe length of the arrayoperations achieved for a sorted array.,2.5,0,0.8597959876060486,0.0,0.5023853182792664,0.2986481785774231
924,What is the base case for a recursive implementation of merge sort?,"The base case for a recursive merge sort is one number. One number by itself is a sorted list, regardless of what number it is.",When the size of the array to be sorted is 1or 2,5.0,1,0.9019875526428223,0.24253562503633297,0.6179189085960388,0.33218371868133545
925,What is the base case for a recursive implementation of merge sort?,The base case for a recursive implementation of merge sort is when the sequence being passed to merge sort has less than 2 elements.,When the size of the array to be sorted is 1or 2,5.0,1,0.9009845852851868,0.0,0.6935358643531799,0.4814511835575104
926,What is the base case for a recursive implementation of merge sort?,The base case for a recursive implementation of merge sort is one.,When the size of the array to be sorted is 1or 2,5.0,1,0.8665900826454163,0.0,0.6421011686325073,0.3578397035598755
927,What is the base case for a recursive implementation of merge sort?,The best case is the same as the worst case On log nfor a recursive merge sort.,When the size of the array to be sorted is 1or 2,2.0,0,0.8743812441825867,0.0,0.47481414675712585,0.11582370102405548
928,What is the base case for a recursive implementation of merge sort?,there is one object in the split array to sort.,When the size of the array to be sorted is 1or 2,5.0,1,0.9120584726333618,0.5,0.5453428626060486,0.6852411031723022
929,What is the base case for a recursive implementation of merge sort?,The base case is when the length of the current array is 1.,When the size of the array to be sorted is 1or 2,5.0,1,0.9286677837371826,0.447213595499958,0.8151977062225342,0.3991447985172272
930,What is the base case for a recursive implementation of merge sort?,Onlogn,When the size of the array to be sorted is 1or 2,2.5,0,0.0,0.0,0.5111465454101562,0.25962918996810913
931,What is the base case for a recursive implementation of merge sort?,Best case is one element. One element is sorted.,When the size of the array to be sorted is 1or 2,5.0,1,0.8615468740463257,0.3779644730092273,0.6245761513710022,0.1875583827495575
932,What is the base case for a recursive implementation of merge sort?,If the array being sorted has 0 or 1 elements,When the size of the array to be sorted is 1or 2,4.5,1,0.8766641616821289,0.8164965809277261,0.7853068113327026,0.6509376764297485
933,What is the base case for a recursive implementation of merge sort?,"Tnequals 0, if n is less than 2.",When the size of the array to be sorted is 1or 2,4.0,1,0.744029700756073,0.0,0.628343939781189,0.2937314808368683
934,What is the base case for a recursive implementation of merge sort?,"A list size of 1, where it is already sorted.",When the size of the array to be sorted is 1or 2,5.0,1,0.9109634757041931,0.8164965809277261,0.8074477910995483,0.49072393774986267
935,What is the base case for a recursive implementation of merge sort?,Single element in the array,When the size of the array to be sorted is 1or 2,5.0,1,0.8091629147529602,0.5773502691896258,0.4947972893714905,0.5249137878417969
936,What is the base case for a recursive implementation of merge sort?,Onlogn,When the size of the array to be sorted is 1or 2,2.0,0,0.0,0.0,0.5111465454101562,0.25962918996810913
937,What is the base case for a recursive implementation of merge sort?,n multiplied by logn,When the size of the array to be sorted is 1or 2,2.0,0,0.43310338258743286,0.0,0.6506890058517456,0.2708953619003296
938,What is the base case for a recursive implementation of merge sort?,A list or array of only 1 element.,When the size of the array to be sorted is 1or 2,5.0,1,0.8744928240776062,0.5773502691896258,0.6391857266426086,0.39526480436325073
939,What is the base case for a recursive implementation of merge sort?,where you only must merge sort once,When the size of the array to be sorted is 1or 2,3.5,0,0.8188151717185974,0.0,0.5628772974014282,0.38608014583587646
940,What is the base case for a recursive implementation of merge sort?,A single Element on the Array.,When the size of the array to be sorted is 1or 2,5.0,1,0.8398916125297546,0.5773502691896258,0.5202112197875977,0.5105463862419128
941,What is the base case for a recursive implementation of merge sort?,There is only one element in the subarray.,When the size of the array to be sorted is 1or 2,5.0,1,0.8937714695930481,0.0,0.4035116136074066,0.43692100048065186
942,What is the base case for a recursive implementation of merge sort?,"if the array length is less than or equal to 1, then that array is returned to the other array and merged together",When the size of the array to be sorted is 1or 2,4.5,1,0.9209344387054443,0.8320502943378437,0.7335648536682129,0.5200297236442566
943,What is the base case for a recursive implementation of merge sort?,"ifright is greater than leftmid equalsright plus leftdivided by 2; m sortnumbers, temp, left, mid; m sortnumbers, temp, mid plus 1, right; mergenumbers, temp, left, mid plus 1, right;",When the size of the array to be sorted is 1or 2,2.0,0,0.6697255373001099,0.0,0.6895284652709961,0.3854868710041046
944,What is the base case for a recursive implementation of merge sort?,The sequence of numbers has zero or one elements.,When the size of the array to be sorted is 1or 2,5.0,1,0.8730709552764893,0.0,0.5605530738830566,0.4379170835018158
945,What is the base case for a recursive implementation of merge sort?,one element in an array,When the size of the array to be sorted is 1or 2,5.0,1,0.8126984238624573,0.7071067811865476,0.5770379304885864,0.55161452293396
946,What is the base case for a recursive implementation of merge sort?,array of length 1,When the size of the array to be sorted is 1or 2,5.0,1,0.7705442309379578,0.7071067811865476,0.7608303427696228,0.498590886592865
947,What is the base case for a recursive implementation of merge sort?,the array has one element,When the size of the array to be sorted is 1or 2,5.0,1,0.85008704662323,0.7071067811865476,0.5897163152694702,0.43392324447631836
948,What is the base case for a recursive implementation of merge sort?,"When there is only one element in the array, or when the starting element in the array is the same as the ending element.",When the size of the array to be sorted is 1or 2,4.5,1,0.9118064641952515,0.5163977794943222,0.6664372682571411,0.5146018266677856
949,What is the base case for a recursive implementation of merge sort?,"when each half or the original array has nothing else to sort, and puts the halfs back together",When the size of the array to be sorted is 1or 2,2.5,0,0.8811655044555664,0.4082482904638631,0.6043314933776855,0.5219107270240784
950,What is the base case for a recursive implementation of merge sort?,the size of the list being sent is is less than or equal to 1,When the size of the array to be sorted is 1or 2,4.5,1,0.9259674549102783,0.5,0.7139326333999634,0.43430376052856445
951,What is the base case for a recursive implementation of merge sort?,On log n,When the size of the array to be sorted is 1or 2,2.0,0,0.5524651408195496,0.0,0.45312631130218506,0.1586807370185852
952,What is a pointer?,Its a location in memory that contains the memory address of another location in memory that contains information.,A variable that contains the address in memory of another variable.,5.0,1,0.9435252547264099,0.7947194142390264,0.9513248801231384,0.7385597229003906
953,What is a pointer?,A pointer is a variable that contains a memory address as its value.,A variable that contains the address in memory of another variable.,5.0,1,0.9584879875183105,0.7715167498104598,0.9515482187271118,0.6873258352279663
954,What is a pointer?,A pointer is a variable which stores the address of another variable.,A variable that contains the address in memory of another variable.,5.0,1,0.9645525813102722,0.8451542547285168,0.8916918039321899,0.8494236469268799
955,What is a pointer?,Pointers are variables that contain as their values memory addresses of other variables.,A variable that contains the address in memory of another variable.,5.0,1,0.8774917125701904,0.3333333333333333,0.9028880596160889,0.7168830633163452
956,What is a pointer?,A data type whose value refers to another value stored elsewhere in the computer memory using its address.,A variable that contains the address in memory of another variable.,4.5,1,0.9358282089233398,0.4082482904638631,0.9183340072631836,0.5753756761550903
957,What is a pointer?,a pointer holds a memory location,A variable that contains the address in memory of another variable.,4.5,1,0.8486362099647522,0.5,0.9097321033477783,0.6392494440078735
958,What is a pointer?,a name that represents actual location or value of a data type. int star of bPtr points to an integer value.,A variable that contains the address in memory of another variable.,4.5,1,0.914128303527832,0.0,0.6689305901527405,0.4282087981700897
959,What is a pointer?,A variable that stores the address of another variable,A variable that contains the address in memory of another variable.,5.0,1,0.9617477059364319,0.912870929175277,0.8778222799301147,0.9109939336776733
960,What is a pointer?,a pointer is a programming language data type whose value refers directly toor points toanother value stored elsewhere in the computer memory using its address,A variable that contains the address in memory of another variable.,5.0,1,0.9226980209350586,0.3244428422615252,0.8532431721687317,0.5745776295661926
961,What is a pointer?,A data type whose value refers to another value stored somewhere else in the computer memory using its address.,A variable that contains the address in memory of another variable.,5.0,1,0.9347454905509949,0.4082482904638631,0.8771698474884033,0.5516687631607056
962,What is a pointer?,"It is like a variable however instead of holding data, it holds a location in memory.",A variable that contains the address in memory of another variable.,4.5,1,0.9330424070358276,0.474341649025257,0.819999098777771,0.6858351230621338
963,What is a pointer?,A pointer is a reference to a location in memory,A variable that contains the address in memory of another variable.,5.0,1,0.9034846425056458,0.5,0.9116314649581909,0.5951105356216431
964,What is a pointer?,A pointer is a reference to the memory location of an object.,A variable that contains the address in memory of another variable.,4.5,1,0.9308066368103027,0.447213595499958,0.9222719669342041,0.5712343454360962
965,What is a pointer?,A pointer is a variable that contains the memory address of a variable that has a value.,A variable that contains the address in memory of another variable.,5.0,1,0.9709814786911011,0.8819171036881968,0.9512763023376465,0.6793946027755737
966,What is a pointer?,"It is a variable that contains not only a star of value but has a memory address associated with it, and can be moved along a string or an array by jumping up one memory address.",A variable that contains the address in memory of another variable.,3.5,0,0.9386594891548157,0.6416889479197481,0.7335286140441895,0.515058696269989
967,What is a pointer?,Contains a variable 's memory address as a value.,A variable that contains the address in memory of another variable.,5.0,1,0.9616832733154297,0.8451542547285168,0.9644216895103455,0.7331351637840271
968,What is a pointer?,variable that points to the memory address of another variable and it is type specific.,A variable that contains the address in memory of another variable.,5.0,1,0.9648011922836304,0.816496580927726,0.9035072326660156,0.7464154362678528
969,What is a pointer?,An element that references a memory cell,A variable that contains the address in memory of another variable.,5.0,1,0.8959729075431824,0.5,0.8583991527557373,0.5536409020423889
970,What is a pointer?,Is a reference call to the place in memory where the object is stored.,A variable that contains the address in memory of another variable.,4.0,1,0.9282813668251038,0.447213595499958,0.9101511240005493,0.5741798877716064
971,What is a pointer?,a variable that contains the address of another variable,A variable that contains the address in memory of another variable.,5.0,1,0.9763807058334351,1.0000000000000002,0.8574341535568237,0.9040212631225586
972,What is a pointer?,"A pointer variable contains the number of a memory address as its value, which may be null or 0, or the address of some value stored in memory.",A variable that contains the address in memory of another variable.,5.0,1,0.9526452422142029,0.6236095644623237,0.9126149415969849,0.5967415571212769
973,What is a pointer?,A pointer is a variable that contains a memory address of anther variable,A variable that contains the address in memory of another variable.,5.0,1,0.9587362408638,0.8819171036881968,0.938983678817749,0.8379620313644409
974,What is a pointer?,A variable that contains the memory address of another variable that contains a specific value.,A variable that contains the address in memory of another variable.,5.0,1,0.9849897027015686,0.8728715609439698,0.9639396667480469,0.775366485118866
975,What is a pointer?,a variable with a memory address as the value,A variable that contains the address in memory of another variable.,4.5,1,0.9570367336273193,0.8164965809277261,0.966438353061676,0.7606076598167419
976,What is a pointer?,it is a type that points to something else. It is the memory address of something else,A variable that contains the address in memory of another variable.,4.5,1,0.8818264007568359,0.7071067811865476,0.7545371055603027,0.3350917100906372
977,What is a pointer?,A pointer is a way to get at another object. Essentially it is a way to grab an instance of an object and then either pass that instance a message or retreive some data from that object. A pointer is actually just an address of where an instance is held in memory.,A variable that contains the address in memory of another variable.,4.5,1,0.9138147234916687,0.23249527748763862,0.8249961733818054,0.45154523849487305
978,What does the address -LRB- ADDRESS -RRB- operator return?,This operator returns the memory address of its operand.,The memory address of its operand.,5.0,1,0.9613034725189209,0.7745966692414836,0.8515218496322632,0.8025258779525757
979,What does the address -LRB- ADDRESS -RRB- operator return?,The address operator returns the memory address of its operand.,The memory address of its operand.,5.0,1,0.9656569957733154,0.8164965809277261,0.847691535949707,0.8081494569778442
980,What does the address -LRB- ADDRESS -RRB- operator return?,Returns memory address of its operand.,The memory address of its operand.,5.0,1,0.9720982313156128,0.8660254037844388,0.9533791542053223,0.9230380058288574
981,What does the address -LRB- ADDRESS -RRB- operator return?,The addressADDRESSoperator returns the memory address of its operand.,The memory address of its operand.,5.0,1,0.9809023141860962,0.7745966692414836,0.888615071773529,0.8020027875900269
982,What does the address -LRB- ADDRESS -RRB- operator return?,Returns the memory address of its operand.,The memory address of its operand.,5.0,1,0.9832506775856018,0.8660254037844388,0.949116587638855,0.9169654846191406
983,What does the address -LRB- ADDRESS -RRB- operator return?,returns the place in memory of that element,The memory address of its operand.,4.0,1,0.8695521354675293,0.5,0.7516428232192993,0.48307180404663086
984,What does the address -LRB- ADDRESS -RRB- operator return?,The address of the where the data is stored: address of b will return the address of b.,The memory address of its operand.,4.5,1,0.8930826783180237,0.8660254037844387,0.7277024984359741,0.3504488468170166
985,What does the address -LRB- ADDRESS -RRB- operator return?,The ADDRESS operator returns the address of a variable,The memory address of its operand.,5.0,1,0.8752138614654541,0.7559289460184545,0.7811673879623413,0.4775663912296295
986,What does the address -LRB- ADDRESS -RRB- operator return?,"the ampersandADDRESSmeans pass by reference. When the function is called, a pointer to the variable, instead of the variable itself, will be passed into the function.",The memory address of its operand.,3.0,0,0.8661438822746277,0.0,0.7271919250488281,0.4357338547706604
987,What does the address -LRB- ADDRESS -RRB- operator return?,ADDRESS returns the memory address of its operand.,The memory address of its operand.,5.0,1,0.9768019318580627,0.8728715609439697,0.9135484099388123,0.8994844555854797
988,What does the address -LRB- ADDRESS -RRB- operator return?,the address of the variable in memory,The memory address of its operand.,5.0,1,0.9250870943069458,0.8164965809277261,0.8611752390861511,0.5768462419509888
989,What does the address -LRB- ADDRESS -RRB- operator return?,Returns the address location in memory of the item.,The memory address of its operand.,4.5,1,0.8974217772483826,0.632455532033676,0.8778830766677856,0.5635514259338379
990,What does the address -LRB- ADDRESS -RRB- operator return?,The address operator returns the memory address of its operand.,The memory address of its operand.,5.0,1,0.9656569957733154,0.8164965809277261,0.847691535949707,0.8081494569778442
991,What does the address -LRB- ADDRESS -RRB- operator return?,The ADDRESS operator returns the memory address of the variable it precedes.,The memory address of its operand.,5.0,1,0.9345179200172424,0.7071067811865475,0.8132104277610779,0.6014425754547119
992,What does the address -LRB- ADDRESS -RRB- operator return?,"The memory address of operand, 0x 000000 or something along those lines.",The memory address of its operand.,4.5,1,0.9056623578071594,0.7071067811865477,0.7616087794303894,0.7293102741241455
993,What does the address -LRB- ADDRESS -RRB- operator return?,The object 's memory address.,The memory address of its operand.,4.5,1,0.9172199368476868,0.8164965809277261,0.896625280380249,0.6712531447410583
994,What does the address -LRB- ADDRESS -RRB- operator return?,the reference to a variable,The memory address of its operand.,4.5,1,0.7990041375160217,0.0,0.7123858332633972,0.22076696157455444
995,What does the address -LRB- ADDRESS -RRB- operator return?,returns the memory address of its operand,The memory address of its operand.,5.0,1,0.9652906060218811,0.8660254037844388,0.9387403130531311,0.9263351559638977
996,What does the address -LRB- ADDRESS -RRB- operator return?,memory address of its operand,The memory address of its operand.,5.0,1,0.9711030125617981,1.0000000000000002,0.9832225441932678,0.9654949903488159
997,What does the address -LRB- ADDRESS -RRB- operator return?,returns the address number of the specified variable,The memory address of its operand.,4.5,1,0.8730837106704712,0.447213595499958,0.8116570711135864,0.4222511649131775
998,What does the address -LRB- ADDRESS -RRB- operator return?,"It returns the memory address of it is operand. That is, if applied to a normal variable, it gives the variable 's memory address, just as a pointer variable might.",The memory address of its operand.,4.5,1,0.8959161043167114,0.5892556509887897,0.7981104850769043,0.8999395370483398
999,What does the address -LRB- ADDRESS -RRB- operator return?,The ADDRESS is a unary operator that returns the memory address of its operand,The memory address of its operand.,5.0,1,0.947600781917572,0.769800358919501,0.8062068819999695,0.7453444004058838
1000,What does the address -LRB- ADDRESS -RRB- operator return?,the address of the variable it is attached to,The memory address of its operand.,4.0,1,0.8768011331558228,0.5773502691896258,0.838017463684082,0.4272986650466919
1001,What does the address -LRB- ADDRESS -RRB- operator return?,the memory address of its operand,The memory address of its operand.,5.0,1,0.9845530986785889,1.0000000000000002,0.98905348777771,0.9887315630912781
1002,What does the address -LRB- ADDRESS -RRB- operator return?,returns the address of what it is put in front of,The memory address of its operand.,4.5,1,0.8366658091545105,0.7071067811865476,0.7569652795791626,0.5154392123222351
1003,What does the address -LRB- ADDRESS -RRB- operator return?,returns a pointer,The memory address of its operand.,3.5,0,0.6558520197868347,0.0,0.7245486974716187,0.32782605290412903
1004,What does the star -LRB- STAR -RRB- operator return?,returns a synonym for the object to which its pointer operand points.,An aliassynonymfor the name of the object that its operand points to in memory. It is the dereferencing operator.,5.0,1,0.9506082534790039,0.7071067811865477,0.7899647951126099,0.6379778385162354
1005,What does the star -LRB- STAR -RRB- operator return?,The star operator returns a synonym for the object to which its pointer operand points.,An aliassynonymfor the name of the object that its operand points to in memory. It is the dereferencing operator.,5.0,1,0.9544689059257507,0.7071067811865476,0.7370713949203491,0.6080423593521118
1006,What does the star -LRB- STAR -RRB- operator return?,Returns synonym for the object its operand points to.,An aliassynonymfor the name of the object that its operand points to in memory. It is the dereferencing operator.,5.0,1,0.9335189461708069,0.7745966692414836,0.7181873321533203,0.5886678695678711
1007,What does the star -LRB- STAR -RRB- operator return?,"It returns a synonym, alias or nickname of the name of the object that its operand points to in memorydereferencing the pointer.",An aliassynonymfor the name of the object that its operand points to in memory. It is the dereferencing operator.,5.0,1,0.9717361927032471,0.5773502691896257,0.9335030317306519,0.776475727558136
1008,What does the star -LRB- STAR -RRB- operator return?,Returns an alias or nickname for the object to which the pointer operand points.,An aliassynonymfor the name of the object that its operand points to in memory. It is the dereferencing operator.,5.0,1,0.9468156695365906,0.6546536707079773,0.8410943150520325,0.7892657518386841
1009,What does the star -LRB- STAR -RRB- operator return?,the STAR operator returns the value in the memory address the element points to.,An aliassynonymfor the name of the object that its operand points to in memory. It is the dereferencing operator.,4.0,1,0.9483510255813599,0.6123724356957946,0.7866331338882446,0.4594895839691162
1010,What does the star -LRB- STAR -RRB- operator return?,The STAR returns the value,An aliassynonymfor the name of the object that its operand points to in memory. It is the dereferencing operator.,4.0,1,0.8060333132743835,0.0,0.30492836236953735,0.19156122207641602
1011,What does the star -LRB- STAR -RRB- operator return?,The STAR operator returns the dereferenced pointer variableie: it returns the value of whatever variable the pointer is pointing to,An aliassynonymfor the name of the object that its operand points to in memory. It is the dereferencing operator.,5.0,1,0.930255651473999,0.25819888974716115,0.7175940275192261,0.40835699439048767
1012,What does the star -LRB- STAR -RRB- operator return?,The dereferencing operator returns the dereferenced object.,An aliassynonymfor the name of the object that its operand points to in memory. It is the dereferencing operator.,4.5,1,0.8710857629776001,0.7745966692414836,0.7297616004943848,0.37143778800964355
1013,What does the star -LRB- STAR -RRB- operator return?,multiplied by returns the synonym for the object its operand points to.,An aliassynonymfor the name of the object that its operand points to in memory. It is the dereferencing operator.,5.0,1,0.9339655637741089,0.7071067811865477,0.7061557769775391,0.4957726299762726
1014,What does the star -LRB- STAR -RRB- operator return?,it returns the information in the address the pointer points to.,An aliassynonymfor the name of the object that its operand points to in memory. It is the dereferencing operator.,4.0,1,0.9399524331092834,0.447213595499958,0.7010366916656494,0.418682336807251
1015,What does the star -LRB- STAR -RRB- operator return?,the star operator returns the value at the memory address the pointer is pointing at.,An aliassynonymfor the name of the object that its operand points to in memory. It is the dereferencing operator.,4.5,1,0.9335216879844666,0.5000000000000001,0.7741094827651978,0.4592033624649048
1016,What does the star -LRB- STAR -RRB- operator return?,The star operator returns the object at that memory location.,An aliassynonymfor the name of the object that its operand points to in memory. It is the dereferencing operator.,4.0,1,0.927039623260498,0.7071067811865477,0.7541701197624207,0.5561217069625854
1017,What does the star -LRB- STAR -RRB- operator return?,The STAR operator returns the value of the object 's memory address it precedes.,An aliassynonymfor the name of the object that its operand points to in memory. It is the dereferencing operator.,3.5,0,0.9557316899299622,0.6123724356957946,0.7928052544593811,0.4883328676223755
1018,What does the star -LRB- STAR -RRB- operator return?,The value of the object that the operand points to,An aliassynonymfor the name of the object that its operand points to in memory. It is the dereferencing operator.,4.5,1,0.9424315690994263,0.8660254037844388,0.5772813558578491,0.4989856481552124
1019,What does the star -LRB- STAR -RRB- operator return?,The value stored in the object being pointed to.,An aliassynonymfor the name of the object that its operand points to in memory. It is the dereferencing operator.,4.0,1,0.9367581605911255,0.5,0.6129754185676575,0.43002793192863464
1020,What does the star -LRB- STAR -RRB- operator return?,the value of the variable the pointer points to.,An aliassynonymfor the name of the object that its operand points to in memory. It is the dereferencing operator.,4.0,1,0.941131591796875,0.5,0.6790789365768433,0.28738105297088623
1021,What does the star -LRB- STAR -RRB- operator return?,returns synonym for the object its operand points to,An aliassynonymfor the name of the object that its operand points to in memory. It is the dereferencing operator.,5.0,1,0.9125007390975952,0.7745966692414836,0.7190451622009277,0.6001876592636108
1022,What does the star -LRB- STAR -RRB- operator return?,synonym for the object its operand points to,An aliassynonymfor the name of the object that its operand points to in memory. It is the dereferencing operator.,5.0,1,0.9156938791275024,0.8660254037844388,0.6339271664619446,0.6711366176605225
1023,What does the star -LRB- STAR -RRB- operator return?,Returns synonym for the object its operand points to,An aliassynonymfor the name of the object that its operand points to in memory. It is the dereferencing operator.,5.0,1,0.9125007390975952,0.7745966692414836,0.7190451622009277,0.6001876592636108
1024,What does the star -LRB- STAR -RRB- operator return?,"It dereferences a pointer, meaning it returns the value stored in the memory address a pointer refers to.",An aliassynonymfor the name of the object that its operand points to in memory. It is the dereferencing operator.,4.5,1,0.9481629729270935,0.2886751345948129,0.8929793834686279,0.38866961002349854
1025,What does the star -LRB- STAR -RRB- operator return?,It is unary operator that returns the value of the variable located at the address,An aliassynonymfor the name of the object that its operand points to in memory. It is the dereferencing operator.,4.0,1,0.9367008805274963,0.3779644730092273,0.7672919631004333,0.3308227062225342
1026,What does the star -LRB- STAR -RRB- operator return?,a reference to a equals variable,An aliassynonymfor the name of the object that its operand points to in memory. It is the dereferencing operator.,2.0,0,0.8256415724754333,0.0,0.42491719126701355,0.14544375240802765
1027,What does the star -LRB- STAR -RRB- operator return?,a synonym for the object to which its pointer operand points,An aliassynonymfor the name of the object that its operand points to in memory. It is the dereferencing operator.,5.0,1,0.9379199147224426,0.7745966692414836,0.7327491044998169,0.6275879144668579
1028,What does the star -LRB- STAR -RRB- operator return?,it returns the actual data at the address pointed to,An aliassynonymfor the name of the object that its operand points to in memory. It is the dereferencing operator.,3.5,0,0.8923442959785461,0.0,0.553174614906311,0.3013540208339691
1029,What does the star -LRB- STAR -RRB- operator return?,will return zero or many characters placed before the operator,An aliassynonymfor the name of the object that its operand points to in memory. It is the dereferencing operator.,2.0,0,0.8804943561553955,0.447213595499958,0.5343154072761536,0.3724198639392853
1030,How can an array be addressed in pointer or offset notation?,The array itself can be signed to a pointer or each element of the array can be assigned to a pointer.,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",3.0,0,0.9544371962547302,0.8703882797784893,0.8064680099487305,0.7191051840782166
1031,How can an array be addressed in pointer or offset notation?,An array can be addressed in pointer or offset notation by setting a pointer variable equal to the variable name of the array. Elements of the array can then be accessed by adding an offset value to the pointer variable.,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",4.5,1,0.9639644622802734,0.6793662204867574,0.8401232361793518,0.7141152620315552
1032,How can an array be addressed in pointer or offset notation?,Element b [n] can be accessed by multiplied bybPtr plus n.,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",4.0,1,0.7450835704803467,0.447213595499958,0.6256412267684937,0.5030901432037354
1033,How can an array be addressed in pointer or offset notation?,Using either the name of the array as a pointer or using a separate pointer that points to the array.,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",3.0,0,0.9609460234642029,0.7559289460184545,0.8276063203811646,0.7817665338516235
1034,How can an array be addressed in pointer or offset notation?,An element b [3] can be referenced by using multiplied bybPtr plus 3instead.,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",4.0,1,0.8207825422286987,0.3779644730092273,0.590743362903595,0.4591667056083679
1035,How can an array be addressed in pointer or offset notation?,you get the memory location of the first element and the you add an offset to it to get other elements.,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",5.0,1,0.9265229105949402,0.4082482904638631,0.7642174959182739,0.6886407732963562
1036,How can an array be addressed in pointer or offset notation?,yes multiplied byarray plus offset,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",4.0,1,0.6228700876235962,0.0,0.48972487449645996,0.5619930028915405
1037,How can an array be addressed in pointer or offset notation?,"The name of an array is considered to be a pointer in C plus plus, and can be passed as such in functions parameters. Declaring int a [10]; creates a pointer a which stores the address of a [0].","By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",3.5,0,0.9187115430831909,0.4866642633922878,0.8570584058761597,0.6852222681045532
1038,How can an array be addressed in pointer or offset notation?,Element b [n] can be accessed by multiplied bybPtr plus nis an example of how an array can be addressed as pointer or offset notation.,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",4.5,1,0.8999233245849609,0.5000000000000001,0.7929080128669739,0.6144659519195557
1039,How can an array be addressed in pointer or offset notation?,multiplied byarray plus element,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",4.0,1,0.6780360341072083,0.5,0.539801836013794,0.583907425403595
1040,How can an array be addressed in pointer or offset notation?,multiplied by f [3],"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",2.5,0,0.5041331052780151,0.0,0.3888530731201172,0.26762402057647705
1041,How can an array be addressed in pointer or offset notation?,you can have a pointer to the front of the array and add to the memory locationor offset from the initial value.,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",5.0,1,0.9509744644165039,0.5000000000000001,0.7834688425064087,0.6201997995376587
1042,How can an array be addressed in pointer or offset notation?,"The pointer to the array will initially point to the first element of that array. When the pointer is incremented, it will point to the next element, and so on.","By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",3.5,0,0.9678362607955933,0.915208630644859,0.8969618678092957,0.8832943439483643
1043,How can an array be addressed in pointer or offset notation?,With int x [10]; int star of xPtr; xPtr equals x; Address address of x [1] is the same as xPtr plus 1.,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",4.0,1,0.7276716232299805,0.0,0.5553857088088989,0.4716641902923584
1044,How can an array be addressed in pointer or offset notation?,Takes the number of array elements and points to each at a time,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",2.0,0,0.9286912679672241,0.4082482904638631,0.7205926775932312,0.7107275128364563
1045,How can an array be addressed in pointer or offset notation?,The array can act as a pointer or be referenced by a pointer. multiplied byarrayPtr plus 3or multiplied byarray plus 3,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",4.0,1,0.8944956064224243,0.5,0.6809808015823364,0.6728282570838928
1046,How can an array be addressed in pointer or offset notation?,by using the multiplied bypointer plus element-index,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",4.0,1,0.8585813641548157,0.5477225575051663,0.6960875988006592,0.6253341436386108
1047,How can an array be addressed in pointer or offset notation?,using the star operator. array: b [n] can be accessed by multiplied bybpointer plus n,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",4.5,1,0.8159045577049255,0.3535533905932738,0.630082905292511,0.18913501501083374
1048,How can an array be addressed in pointer or offset notation?,Element A [n] can be accessed by multiplied byAPtr plus n,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",4.0,1,0.8015486001968384,0.447213595499958,0.6188184022903442,0.53303462266922
1049,How can an array be addressed in pointer or offset notation?,"by referencing a pointer and referring to other pointers relative to the first pointerpointer plus 1, pointer plus 2, etc","By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",3.0,0,0.9071548581123352,0.5547001962252291,0.8222448229789734,0.6629047393798828
1050,How can an array be addressed in pointer or offset notation?,"First, some pointer variable must reference the first entity in the array. Any variable in the array can then be accessed by referring to that first entity 's address plus some offset. i. e. ptrToArray equals array; nthEntity equals multiplied byptrToArray plus n;","By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",5.0,1,0.9406174421310425,0.47809144373375745,0.8913043737411499,0.7293200492858887
1051,How can an array be addressed in pointer or offset notation?,ADDRESS [b 3] is as bptr plus 3. Array can be treated as pointer,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",3.5,0,0.8253652453422546,0.5773502691896258,0.740106999874115,0.5544336438179016
1052,How can an array be addressed in pointer or offset notation?,a [i] equals multiplied bya plus i,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",4.0,1,0.6296360492706299,0.0,0.4582298696041107,0.49655941128730774
1053,How can an array be addressed in pointer or offset notation?,address of b [3] bPtr plus 3,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",4.0,1,0.5994051694869995,0.0,0.44772160053253174,0.47468000650405884
1054,How can an array be addressed in pointer or offset notation?,multiplied byarrayName plus index,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",4.0,1,0.5996302366256714,0.5,0.6687426567077637,0.6675148010253906
1055,How can an array be addressed in pointer or offset notation?,multi-dimensional array,"By initializing a pointer to point to the first element of the array, and then incrementing this pointer with the index of the array element.",1.0,0,0.5706312656402588,0.5773502691896258,0.46911460161209106,0.3056482672691345
1056,What does the sizeof operator return?,the number of bytes of an array during program compilation.,The size in bytes of its operand.,4.5,1,0.8657019734382629,0.447213595499958,0.7303893566131592,0.4031727910041809
1057,What does the sizeof operator return?,The sizeof operator returns the size of the operand.,The size in bytes of its operand.,4.0,1,0.9085653424263,0.632455532033676,0.7774085998535156,0.5695890188217163
1058,What does the sizeof operator return?,Returns size of operand in bytes.,The size in bytes of its operand.,5.0,1,0.9447615742683411,0.8660254037844388,0.9628294706344604,0.8559091091156006
1059,What does the sizeof operator return?,It returns the size of an array in bytes.,The size in bytes of its operand.,4.5,1,0.939487099647522,0.7071067811865476,0.9175542593002319,0.5237689018249512
1060,What does the sizeof operator return?,Returns the size of the array in bytes during the program compilation.,The size in bytes of its operand.,4.5,1,0.8990424275398254,0.5773502691896258,0.777641236782074,0.44660383462905884
1061,What does the sizeof operator return?,it returns the size of the argument passed in,The size in bytes of its operand.,4.0,1,0.8481668829917908,0.5,0.6313822269439697,0.30275970697402954
1062,What does the sizeof operator return?,The byte size of the date stored ina variable.,The size in bytes of its operand.,4.5,1,0.9035605788230896,0.4082482904638631,0.7995479106903076,0.47335919737815857
1063,What does the sizeof operator return?,sizeof returns the size of the operand in bytes,The size in bytes of its operand.,5.0,1,0.9347183108329773,0.7745966692414836,0.9329679012298584,0.8157258033752441
1064,What does the sizeof operator return?,"The amount of memory required for a specific parameter such as ints, doubles.",The size in bytes of its operand.,3.5,0,0.8555033802986145,0.0,0.7226765155792236,0.22456471621990204
1065,What does the sizeof operator return?,sizeof returns the size of the operand in bytes.,The size in bytes of its operand.,5.0,1,0.9543183445930481,0.7745966692414836,0.9344539642333984,0.8483603000640869
1066,What does the sizeof operator return?,the size of the information in bits.,The size in bytes of its operand.,2.5,0,0.891372799873352,0.5773502691896258,0.8416727185249329,0.4912049174308777
1067,What does the sizeof operator return?,the size of the string.,The size in bytes of its operand.,3.0,0,0.8980875015258789,0.7071067811865476,0.6895154118537903,0.3554667830467224
1068,What does the sizeof operator return?,sizeof returns the size in bytes of the respective object.,The size in bytes of its operand.,4.5,1,0.9313745498657227,0.5773502691896258,0.8873003721237183,0.6358020901679993
1069,What does the sizeof operator return?,The sizeof operator returns the total number of bytes of its operand.,The size in bytes of its operand.,5.0,1,0.9219706058502197,0.5345224838248489,0.8725229501724243,0.610950767993927
1070,What does the sizeof operator return?,"The size of an operand in bytes. Used with variable names, type names, and constant values",The size in bytes of its operand.,5.0,1,0.8994385600090027,0.5000000000000001,0.8859080076217651,0.9008806943893433
1071,What does the sizeof operator return?,the size in bytes needed to store the object in memory,The size in bytes of its operand.,4.5,1,0.8900988698005676,0.5773502691896258,0.7114853858947754,0.4662989377975464
1072,What does the sizeof operator return?,the size of the list object.,The size in bytes of its operand.,3.0,0,0.8822997808456421,0.5773502691896258,0.8080466985702515,0.3452007472515106
1073,What does the sizeof operator return?,the sizeof operator returns the size in bytes of an array parameter,The size in bytes of its operand.,4.0,1,0.9085332751274109,0.5345224838248489,0.8454387187957764,0.4531254768371582
1074,What does the sizeof operator return?,the size of operand in bytes,The size in bytes of its operand.,5.0,1,0.9637153148651123,1.0000000000000002,0.9807277321815491,0.8779873251914978
1075,What does the sizeof operator return?,returns the size in bytes of the specified data,The size in bytes of its operand.,4.5,1,0.9177987575531006,0.632455532033676,0.8984989523887634,0.5847243666648865
1076,What does the sizeof operator return?,"It returns the size of an operand in memory, which is checked at compiler-time.",The size in bytes of its operand.,4.0,1,0.8746120929718018,0.5345224838248489,0.655878484249115,0.47909417748451233
1077,What does the sizeof operator return?,Return size of operand in bytes,The size in bytes of its operand.,5.0,1,0.9233470559120178,0.8660254037844388,0.948744535446167,0.7592568397521973
1078,What does the sizeof operator return?,the total number of bytes of an object.,The size in bytes of its operand.,4.5,1,0.900431752204895,0.5,0.8798059225082397,0.5561246871948242
1079,What does the sizeof operator return?,total number of bytes in the array,The size in bytes of its operand.,4.5,1,0.891736626625061,0.5,0.866012692451477,0.4927293360233307
1080,What does the sizeof operator return?,it returns the size in bytes of a certain variable type,The size in bytes of its operand.,4.5,1,0.9133874177932739,0.5773502691896258,0.8638181686401367,0.5186788439750671
1081,What does the sizeof operator return?,"it yields the size in bytes of the operand, which can be an expression or the parenthesized name of a type",The size in bytes of its operand.,4.0,1,0.8996723890304565,0.6546536707079773,0.9006317257881165,0.6722379922866821
1082,What are the different ways to pass a pointer to a function?,They can be passed by value or by reference,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",2.5,0,0.7767961621284485,0.0,0.5086808204650879,0.3331311047077179
1083,What are the different ways to pass a pointer to a function?,"Nonconstant pointer to nonconstant data, nonconstant pointer to constant data, constant pointer to nonconstant data, constant pointer to constant data.","There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",5.0,1,0.986076831817627,1.0,0.8549541234970093,0.7635608911514282
1084,What are the different ways to pass a pointer to a function?,Nonconstant pointer to nonconstant data Nonconstant pointer to constant data Constant pointer to nonconstant data Constant pointer to constant data,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",5.0,1,0.9527432918548584,1.0,0.821251630783081,0.7244149446487427
1085,What are the different ways to pass a pointer to a function?,"Four different ways: Nonconstant pointer to nonconstant data, a nonconstant pointer to constant data, a constant pointer to nonconstant data and a constant pointer to constant data.","There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",5.0,1,0.9859371781349182,0.9923953268977463,0.9827625155448914,0.9778202772140503
1086,What are the different ways to pass a pointer to a function?,Pass-by-value or pass-by-reference.,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",2.5,0,0.6025561690330505,0.0,0.608015239238739,0.20590808987617493
1087,What are the different ways to pass a pointer to a function?,you can pass a pointer to a pointer or pass a reference to pointer.,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",2.5,0,0.8446162343025208,0.8017837257372732,0.49299779534339905,0.4284761846065521
1088,What are the different ways to pass a pointer to a function?,by address address of bPtr or directly bPtr.,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",2.5,0,0.7285000085830688,0.0,0.5281237363815308,0.20449179410934448
1089,What are the different ways to pass a pointer to a function?,"Nonconstant pointer to nonconstant data, constant pointer to nonconstant data, nonconstant pointer to constant data, constant pointer to constant data.","There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",5.0,1,0.986076831817627,1.0,0.8584116697311401,0.7403552532196045
1090,What are the different ways to pass a pointer to a function?,By argument and reference.,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",2.0,0,0.7422577738761902,0.0,0.48342379927635193,0.2803558111190796
1091,What are the different ways to pass a pointer to a function?,"Nonconstant pointer to nonconstant data, nonconstant pointer to constant data, constant pointer to nonconstant data, and constant pointer to constant data.","There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",5.0,1,0.9885074496269226,1.0,0.8717442750930786,0.7926409840583801
1092,What are the different ways to pass a pointer to a function?,pass by value and pass by reference with reference or pointer arguments.,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",2.5,0,0.8222590684890747,0.30151134457776363,0.634164035320282,0.21432310342788696
1093,What are the different ways to pass a pointer to a function?,you can pass them with the pointerSTARor the memory addressADDRESS,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",2.5,0,0.7734931707382202,0.0,0.5293645858764648,0.36504560708999634
1094,What are the different ways to pass a pointer to a function?,nonconst implies nonconst const implies nonconst nonconst implies const const implies const,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",5.0,1,0.5341184735298157,0.0,0.6018426418304443,0.5722455978393555
1095,What are the different ways to pass a pointer to a function?,Nonconstant pointer to nonconstant data Constant pointer to nonconstant data Nonconstant pointer to constant data Constant point to constant data,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",5.0,1,0.9619593024253845,0.9847982464479192,0.8131710886955261,0.7017441391944885
1096,What are the different ways to pass a pointer to a function?,"Non-constant pointer to non-constant data, non-constant pointer to constant data, constant pointer to constant data, constant pointer to non-constant data.","There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",5.0,1,0.9394925236701965,0.8728715609439697,0.834967315196991,0.7558351159095764
1097,What are the different ways to pass a pointer to a function?,Pass by reference with reference arguments. functionint ADDRESSPass by reference with pointer arguments. functionint STAR,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",2.5,0,0.787544846534729,0.2182178902359924,0.5278506875038147,0.36372697353363037
1098,What are the different ways to pass a pointer to a function?,you can pass the reference or the dereference in a function,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",2.0,0,0.8427482843399048,0.0,0.5002439618110657,0.4492924213409424
1099,What are the different ways to pass a pointer to a function?,1. nonconstant pointer to nonconstant data. Its delcaration does no include const qualifier. 2. nonconstant pointer to constant data. Provides the performance of pass-by-reference and the protection of pass-by-value 3. Constant pointer to nonconstant data. 4. Constant pointer to constant date.,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",5.0,1,0.9081100821495056,0.8838834764831845,0.729731559753418,0.5630645751953125
1100,What are the different ways to pass a pointer to a function?,"constant pointer to constant data, constant pointer to nonconstant data, nonconstant pointer to constant data, nonconstant pointer to nonconstant data","There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",5.0,1,0.9819510579109192,1.0,0.8526102304458618,0.7636421918869019
1101,What are the different ways to pass a pointer to a function?,Nonconstant pointer to nonconstant data Nonconstant pointer to constant data Constant pointer to nonconstant data Constant pointer to constant data,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",5.0,1,0.9527432918548584,1.0,0.821251630783081,0.7244149446487427
1102,What are the different ways to pass a pointer to a function?,"Pointers may be passed to functions by value, by reference with reference arguments, or by reference with pointer arguments.","There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",2.5,0,0.8685617446899414,0.23570226039551587,0.5875828266143799,0.39078137278556824
1103,What are the different ways to pass a pointer to a function?,There are four way to pass pointer to a function 1. non constant pointer to non constant data 2. non constant pointer to constant data. 3. constant pointer to non constant data. 4. constant pointer to constant data.,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",5.0,1,0.9493151903152466,0.8814089405208616,0.8901357650756836,0.8137529492378235
1104,What are the different ways to pass a pointer to a function?,nonconstant pointer to nonconstant data nonconstant pointer to constant data constant pointer to nonconstant data constant pointer to constant data,"There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",5.0,1,0.9527432918548584,1.0,0.821251630783081,0.7244149446487427
1105,What are the different ways to pass a pointer to a function?,"pass by value, pass by reference with reference arguments, pass by reference with pointer arguments","There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",2.5,0,0.8073434233665466,0.20412414523193154,0.6467410326004028,0.2468177229166031
1106,What are the different ways to pass a pointer to a function?,"you can pass it where either the pointer cant be moved, the data pointed to cant be changed, or both or neither","There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",4.0,1,0.8296865224838257,0.5773502691896258,0.6895527839660645,0.3103976547718048
1107,What are the different ways to pass a pointer to a function?,"there are only two ways to pass something, by value and by reference. Use of dot or pointer operators within the receiving function and use of  ADDRESS operator inside the passing function","There are four ways: nonconstant pointer to constant data, nonconstant pointer to nonconstant data, constant pointer to constant data, constant pointer to nonconstant data.",2.5,0,0.8728591203689575,0.2711630722733202,0.6115760803222656,0.1342162787914276
1108,What is a function pointer?,A pointer that points to the memory address of the beginning part of a functions. pretty much the pointer points to the function so it can be called to execute.,The address of the location in memory where the function code resides.,5.0,1,0.9110316038131714,0.4330127018922194,0.8708562850952148,0.7254031896591187
1109,What is a function pointer?,A function pointer is a pointer that contains the address of the function in memory.,The address of the location in memory where the function code resides.,5.0,1,0.9175323247909546,0.6963106238227914,0.9527278542518616,0.7964363098144531
1110,What is a function pointer?,"Function Pointers are pointers, i. e. variables, which point to the address of a function.",The address of the location in memory where the function code resides.,5.0,1,0.8815159201622009,0.6396021490668313,0.7928915023803711,0.5804833173751831
1111,What is a function pointer?,"A pointer to a function is the address where the code for the function resides. They can be passed to functions, returned from functions, stored in arrays and assigned to other pointers.",The address of the location in memory where the function code resides.,5.0,1,0.9338191151618958,0.5892556509887896,0.8396536111831665,0.8275294899940491
1112,What is a function pointer?,It contains the address of the function in memory.,The address of the location in memory where the function code resides.,5.0,1,0.9576354026794434,0.8660254037844388,0.9684712290763855,0.857492208480835
1113,What is a function pointer?,when it is dereferenced a function pointer calls its function with zero or more arguments.,The address of the location in memory where the function code resides.,3.5,0,0.8330631256103516,0.6666666666666666,0.5805865526199341,0.5025964379310608
1114,What is a function pointer?,a pointer to a function,The address of the location in memory where the function code resides.,3.5,0,0.7680058479309082,0.7071067811865476,0.686854362487793,0.5400630831718445
1115,What is a function pointer?,"A pointer to a function itself, contains the address of the function and can be used to call that function",The address of the location in memory where the function code resides.,5.0,1,0.911552369594574,0.7844645405527362,0.7749577760696411,0.6895966529846191
1116,What is a function pointer?,"Function Pointers are pointers, i. e. variables, which point to the address of a function.",The address of the location in memory where the function code resides.,5.0,1,0.8815159201622009,0.6396021490668313,0.7928915023803711,0.5804833173751831
1117,What is a function pointer?,A pointer to a function that contains the addresses of the function.,The address of the location in memory where the function code resides.,5.0,1,0.9158433675765991,0.7559289460184546,0.8367580771446228,0.7574899792671204
1118,What is a function pointer?,a pointer that contains the address of a function,The address of the location in memory where the function code resides.,5.0,1,0.890847384929657,0.7071067811865476,0.82841956615448,0.6953219175338745
1119,What is a function pointer?,a function pointer is a pointer to a function. It can be used in substitution for calling a function.,The address of the location in memory where the function code resides.,5.0,1,0.8518620133399963,0.75,0.69614577293396,0.6698885560035706
1120,What is a function pointer?,Points to the memory address of a function. Kind of like breaking a branch off of a tree object and hitting other objects with it.,The address of the location in memory where the function code resides.,5.0,1,0.8956920504570007,0.5000000000000001,0.4394068717956543,0.8300936818122864
1121,What is a function pointer?,"They are pointers that contain the addresses to functions, they can be passed and returned from functions, as well as stored in arrays and assigned to other function pointers.",The address of the location in memory where the function code resides.,5.0,1,0.8766555190086365,0.25,0.7831064462661743,0.46536582708358765
1122,What is a function pointer?,Pointer variables that point to function addresses.,The address of the location in memory where the function code resides.,5.0,1,0.8361530900001526,0.447213595499958,0.7931029796600342,0.6639806032180786
1123,What is a function pointer?,Contains the address of the function in memory.,The address of the location in memory where the function code resides.,5.0,1,0.9570103883743286,0.8660254037844388,0.9714864492416382,0.8559512495994568
1124,What is a function pointer?,"a pointer that points to a function itself, which allows passing a function as a parameter to another function.",The address of the location in memory where the function code resides.,4.0,1,0.8576681017875671,0.8017837257372732,0.6725864410400391,0.5719696283340454
1125,What is a function pointer?,pointers that contain the addresses of functions.,The address of the location in memory where the function code resides.,5.0,1,0.8847028017044067,0.0,0.8401292562484741,0.6252472400665283
1126,What is a function pointer?,is a pointer that contains the address of a function,The address of the location in memory where the function code resides.,5.0,1,0.8872480392456055,0.7071067811865476,0.8293549418449402,0.7407107949256897
1127,What is a function pointer?,a pointer that contains the address of the function definition,The address of the location in memory where the function code resides.,4.5,1,0.9048676490783691,0.632455532033676,0.8140949010848999,0.7110737562179565
1128,What is a function pointer?,"A function pointer contains the memory address of a function. Using a function pointer, a function can be passed to or returned by another function. Function pointers can also be stored in arrays.",The address of the location in memory where the function code resides.,5.0,1,0.8964249491691589,0.6598288790738581,0.7960907816886902,0.8068545460700989
1129,What is a function pointer?,Function pointer is a pointer to a function. function pointer contains address of functions,The address of the location in memory where the function code resides.,5.0,1,0.8264063596725464,0.6172133998483678,0.7941553592681885,0.6828973293304443
1130,What is a function pointer?,a pointer that contains the address of a function in memory.,The address of the location in memory where the function code resides.,5.0,1,0.9271700382232666,0.7745966692414836,0.9656949639320374,0.7650036811828613
1131,What is a function pointer?,it contains the address of the function in memory,The address of the location in memory where the function code resides.,5.0,1,0.9522860050201416,0.8660254037844388,0.9682881832122803,0.8420062065124512
1132,What is a function pointer?,it is a pointer that points to the address of a function.,The address of the location in memory where the function code resides.,5.0,1,0.8953210115432739,0.7071067811865476,0.8007543087005615,0.7111894488334656
1133,What is a function pointer?,"When dereferenced, a function pointer invokes a function, passing it zero or more arguments just like a normal function. In programming languages like C, function pointers can be used to simplify code, such as replacing large switch statements.",The address of the location in memory where the function code resides.,4.0,1,0.8578330874443054,0.5735393346764045,0.5948763489723206,0.4110977053642273
1134,What is a linked list?,"Consists of sequence of nodes, each containing a number of data fields and one or two links called pointers that point to the next or previous nodes.",A collection of elements that can be allocated dynamically.,4.5,1,0.907270073890686,0.0,0.7167202234268188,0.4005145728588104
1135,What is a linked list?,A linked list is a list in which each item in the list points to the next item in the list.,A collection of elements that can be allocated dynamically.,4.5,1,0.8471317291259766,0.0,0.585216760635376,0.35996848344802856
1136,What is a linked list?,"A linked list is a chain of structs or records called nodes and you have the ability to add, delete, or retrieve items.",A collection of elements that can be allocated dynamically.,4.5,1,0.8898741006851196,0.0,0.7277283668518066,0.50030118227005
1137,What is a linked list?,"A list of elements, or nodes, that are linked to one another such that each element points to the next element.",A collection of elements that can be allocated dynamically.,4.5,1,0.926180899143219,0.3333333333333333,0.7608044147491455,0.39269697666168213
1138,What is a linked list?,"A sequence of nodes, each containing data fieldsspecified by programmerand pointerswhich can point to the next or previous nodes.",A collection of elements that can be allocated dynamically.,4.5,1,0.9078302979469299,0.0,0.665485143661499,0.44261419773101807
1139,What is a linked list?,a list of nodes where each node contains a data member and also a pointer to the next node.,A collection of elements that can be allocated dynamically.,4.5,1,0.8902050852775574,0.0,0.6665453910827637,0.395821213722229
1140,What is a linked list?,A list of items linked together. Each item is linked to its successor.,A collection of elements that can be allocated dynamically.,4.5,1,0.8911396265029907,0.0,0.6807556748390198,0.33426904678344727
1141,What is a linked list?,A linked list is a chain of nodes that each store a single piece of data and pointer variables that point to other nodes in the list.,A collection of elements that can be allocated dynamically.,4.5,1,0.9130903482437134,0.0,0.5939133763313293,0.3201778829097748
1142,What is a linked list?,"one of the fundamental data structures, and can be used to implement other data structures. It consists of a sequence of nodes, each containing arbitrary data fields and one or two referenceslinkspointing to the next and previous nodes.",A collection of elements that can be allocated dynamically.,4.5,1,0.9269048571586609,0.0,0.7222204208374023,0.41900011897087097
1143,What is a linked list?,"A data structure in a sequence of nodes, each containing arbitrary data fields and one or two referenceslinkspointing to the next and previous nodes.",A collection of elements that can be allocated dynamically.,4.5,1,0.9070041179656982,0.0,0.726814866065979,0.41326674818992615
1144,What is a linked list?,Information in memory linked to the next piece of information and can only be linked forwards and not backwards.,A collection of elements that can be allocated dynamically.,3.5,0,0.8946782350540161,0.0,0.5086042881011963,0.22136007249355316
1145,What is a linked list?,"A linked list is a data structure that is not necessarily in the same contiguous memory spacesuch as arrays. It holds the data type and points to the next data item in the list, or in a doubly linked list also to the previous item.",A collection of elements that can be allocated dynamically.,5.0,1,0.9164178371429443,0.0,0.5610355734825134,0.43174871802330017
1146,What is a linked list?,A linked list is a data structure containing one or more data elements with a pointer to the next node.,A collection of elements that can be allocated dynamically.,4.5,1,0.9167593121528625,0.30151134457776363,0.6589605808258057,0.4182537794113159
1147,What is a linked list?,"A series of Nodes structures with a value and a pointer that point to a similar Node. Not quite an array, but still can carry a list of values.",A collection of elements that can be allocated dynamically.,4.5,1,0.9276543259620667,0.0,0.613487720489502,0.3453836441040039
1148,What is a linked list?,A data type that contains a pointer to at least the next element in a list.,A collection of elements that can be allocated dynamically.,4.5,1,0.9013386368751526,0.0,0.6868133544921875,0.44520121812820435
1149,What is a linked list?,Each component contains a Node a data item and a pointer to the next item in the list,A collection of elements that can be allocated dynamically.,4.5,1,0.880878746509552,0.0,0.6896955370903015,0.4188387393951416
1150,What is a linked list?,"A linked list is a chain of structs or records called nodes. Each node has at least two members, one of which points to the next item or node in the list.",A collection of elements that can be allocated dynamically.,4.5,1,0.9036232233047485,0.0,0.6352550983428955,0.3011387586593628
1151,What is a linked list?,"An array based list that uses an implicit ordering scheme, often using pointers.",A collection of elements that can be allocated dynamically.,2.5,0,0.8666269779205322,0.0,0.7229067087173462,0.3834225833415985
1152,What is a linked list?,a series of structures containing data items and a pointer that links the structure to the next structure.,A collection of elements that can be allocated dynamically.,4.5,1,0.9157912731170654,0.0,0.7546466588973999,0.4907362759113312
1153,What is a linked list?,"A linked list is a collection of Objects each containing at least one data member, and a pointer to the next object in the listand the previous object in the case of a doubly linked list",A collection of elements that can be allocated dynamically.,4.5,1,0.9101368188858032,0.21320071635561047,0.6281883716583252,0.31475237011909485
1154,What is a linked list?,A link list is a data structure which is built from structures and pointers. It forms a chain of nodes with pointers representing the links of the chain and holding the entire thing together,A collection of elements that can be allocated dynamically.,4.0,1,0.9074780941009521,0.0,0.5997707843780518,0.3208802342414856
1155,What is a linked list?,its a list of pointers that are linked 2 each other. every pointer points to the next pointer which has the next element,A collection of elements that can be allocated dynamically.,4.5,1,0.8979690074920654,0.0,0.5422294735908508,0.33368104696273804
1156,What is a linked list?,linear collection of self-referential nodes connected by pointers.,A collection of elements that can be allocated dynamically.,4.0,1,0.8141571283340454,0.3779644730092273,0.7648820877075195,0.37158238887786865
1157,What is a linked list?,the items of a data structure are linked to each other using pointers,A collection of elements that can be allocated dynamically.,4.5,1,0.9125350117683411,0.0,0.747065544128418,0.3785003423690796
1158,What is a linked list?,A list of objects where each object contains a link to the next item in the list,A collection of elements that can be allocated dynamically.,4.5,1,0.8788737058639526,0.0,0.7222896814346313,0.4268811345100403
1159,What is a linked list?,"A linked list is one of the fundamental data structures, and can be used to implement other data structures. It consists of a sequence of nodes, each containing arbitrary data fields and one or two referenceslinkspointing to the next and previous nodes.",A collection of elements that can be allocated dynamically.,4.5,1,0.9313238859176636,0.0,0.6864590644836426,0.3973850607872009
1160,What is the main advantage of linked lists over arrays?,Elements can be inserted into a link list at any point and does not need to be resized unlike an array needs to be.,The linked lists can be of variable length.,5.0,1,0.9023839831352234,0.0,0.29999294877052307,0.41318854689598083
1161,What is the main advantage of linked lists over arrays?,"Unlike arrays, linked lists can insert and delete without shifting data and change in size easily.",The linked lists can be of variable length.,5.0,1,0.9003021121025085,0.4264014327112209,0.4085181653499603,0.4157944321632385
1162,What is the main advantage of linked lists over arrays?,"Array size is fixed, but Linked is not fixed.",The linked lists can be of variable length.,5.0,1,0.8806252479553223,0.37796447300922725,0.4737544059753418,0.22760289907455444
1163,What is the main advantage of linked lists over arrays?,You can insert into and delete items from a pointer-based linked list without shifting data.,The linked lists can be of variable length.,4.5,1,0.8934276700019836,0.3333333333333333,0.40483149886131287,0.29804667830467224
1164,What is the main advantage of linked lists over arrays?,Arrays must be of a defined size ... elements can be added to a linked list with o defining any size.,The linked lists can be of variable length.,5.0,1,0.9289664626121521,0.30151134457776363,0.5464121699333191,0.4013499319553375
1165,What is the main advantage of linked lists over arrays?,"The principal benefit of a linked list over a conventional array is that the order of the linked items may be different from the order that the data items are stored in memory or on disk, allowing the list of items to be traversed in a different order. A linked list is a self-referential datatype because it contains a pointer or link to another datum of the same type. Linked lists permit insertion and removal of nodes at any point in the list in constant time",The linked lists can be of variable length.,4.0,1,0.9350893497467041,0.39528470752104755,0.5363713502883911,0.5490944981575012
1166,What is the main advantage of linked lists over arrays?,You can expand when you need it. You do not have to predetermine the size.,The linked lists can be of variable length.,5.0,1,0.8347493410110474,0.0,0.31215015053749084,0.47918280959129333
1167,What is the main advantage of linked lists over arrays?,Linked lists are able to grow and shrink in size as needed,The linked lists can be of variable length.,5.0,1,0.8683209419250488,0.5345224838248489,0.5225017666816711,0.5887600183486938
1168,What is the main advantage of linked lists over arrays?,Linked list is able to grow in size as needed. Does not require the shifting of items during insertions and deletions,The linked lists can be of variable length.,5.0,1,0.9029791951179504,0.2886751345948129,0.3118131160736084,0.513263463973999
1169,What is the main advantage of linked lists over arrays?,"A linked list is not fixed in size, and does not require the shifting of items during insertions and deletions.",The linked lists can be of variable length.,5.0,1,0.910719096660614,0.316227766016838,0.2858515977859497,0.5337935090065002
1170,What is the main advantage of linked lists over arrays?,There is no limit as to how many you create where an array can only hold a given amount of information.,The linked lists can be of variable length.,3.0,0,0.8934721946716309,0.0,0.3792867064476013,0.32973915338516235
1171,What is the main advantage of linked lists over arrays?,Linked lists have constant time insertion and deletion,The linked lists can be of variable length.,3.5,0,0.8633679747581482,0.5773502691896258,0.5293000936508179,0.5139632821083069
1172,What is the main advantage of linked lists over arrays?,"Linked lists can be grown dynamically, items do not require shifting, and they have a greater awesome factor than that of arrays.",The linked lists can be of variable length.,5.0,1,0.900966465473175,0.4264014327112209,0.4140932559967041,0.39271169900894165
1173,What is the main advantage of linked lists over arrays?,Linked lists have an indefinite size. They can be added to and taken away from very easily with little difficulty in the shifting of data.,The linked lists can be of variable length.,5.0,1,0.9083347320556641,0.4082482904638631,0.3478250801563263,0.5553683042526245
1174,What is the main advantage of linked lists over arrays?,"Nearly infinite size, limited only by system memory and also the ability to expand the size dynamically.",The linked lists can be of variable length.,5.0,1,0.8818220496177673,0.0,0.5112607479095459,0.30296561121940613
1175,What is the main advantage of linked lists over arrays?,"They grow as needed, while arrays are of fixed size.",The linked lists can be of variable length.,5.0,1,0.8707826733589172,0.0,0.44146034121513367,0.24915969371795654
1176,What is the main advantage of linked lists over arrays?,Does not have a fixed size. Linked list is able to grow as needed. The time to access an array bases list takes a contant amount of time where as an linked-base like depends on i,The linked lists can be of variable length.,5.0,1,0.9105545282363892,0.39223227027636814,0.6375188827514648,0.47176605463027954
1177,What is the main advantage of linked lists over arrays?,Linked lists can grow and shrink as you need them to. Arrays have a fixed size.,The linked lists can be of variable length.,5.0,1,0.9009132981300354,0.5000000000000001,0.5481082201004028,0.5858613848686218
1178,What is the main advantage of linked lists over arrays?,more memory can be allocated on the fly for more items,The linked lists can be of variable length.,4.5,1,0.8432742953300476,0.0,0.4961741268634796,0.4950883388519287
1179,What is the main advantage of linked lists over arrays?,"A linked list may be increased in size as needed, while an array 's size is set when it is created",The linked lists can be of variable length.,5.0,1,0.8993895053863525,0.30151134457776363,0.5700509548187256,0.39024263620376587
1180,What is the main advantage of linked lists over arrays?,"Array has a fixed size, but linked list is able to grow in size as needed",The linked lists can be of variable length.,5.0,1,0.8944896459579468,0.30151134457776363,0.5111047625541687,0.4173468053340912
1181,What is the main advantage of linked lists over arrays?,its resizeable,The linked lists can be of variable length.,5.0,1,0.5411906242370605,0.0,0.48234042525291443,0.4849618673324585
1182,What is the main advantage of linked lists over arrays?,Linked lists do not have a set size and can grow or shrink as needed.,The linked lists can be of variable length.,5.0,1,0.8879550695419312,0.5345224838248489,0.5568701028823853,0.6284977197647095
1183,What is the main advantage of linked lists over arrays?,linked lists are abe to grow as needed to a new size,The linked lists can be of variable length.,5.0,1,0.8724735379219055,0.5345224838248489,0.4265136122703552,0.4607921242713928
1184,What is the main advantage of linked lists over arrays?,"The size is not fixed, easier sorting because of no shifting, easier to insert items into the list",The linked lists can be of variable length.,5.0,1,0.889089047908783,0.0,0.282972514629364,0.25092148780822754
1185,What is the main advantage of linked lists over arrays?,The size of array is restricted to declaration. Insertion or Deletion of values in middle of array is not possible.,The linked lists can be of variable length.,5.0,1,0.9185640811920166,0.0,0.37345612049102783,0.2443256974220276
1186,What is the main advantage of arrays over linked lists?,Array can retrieve memory from any place in the list while in a link list you have to traverse through each individual node.,"The elements in an array can be accessed directlyas opposed to linked lists, which require iterative traversal.",5.0,1,0.9065344333648682,0.2886751345948129,0.6318177580833435,0.6847569346427917
1187,What is the main advantage of arrays over linked lists?,"Arrays require less memory than linked lists and allow direct access to a specified item. Also, insertion and deletion in arrays does not require a list traversal.","The elements in an array can be accessed directlyas opposed to linked lists, which require iterative traversal.",4.5,1,0.9545395970344543,0.545544725589981,0.6379128694534302,0.53544020652771
1188,What is the main advantage of arrays over linked lists?,"Access to a particular element is very fast, because its location in memory can be determined mathematically and accessed directly.","The elements in an array can be accessed directlyas opposed to linked lists, which require iterative traversal.",5.0,1,0.9309999346733093,0.316227766016838,0.6657900810241699,0.4179183840751648
1189,What is the main advantage of arrays over linked lists?,Arrays are good for random access and good for sequential access which are both in constant time. Where linked lists are linear for random access. Arrays are faster in this case.,"The elements in an array can be accessed directlyas opposed to linked lists, which require iterative traversal.",5.0,1,0.9195173382759094,0.26261286571944514,0.6049513816833496,0.4313203990459442
1190,What is the main advantage of arrays over linked lists?,"An array is capable of accessing any part of that array based on the index. The link list must be traversed from the beginning or the end, that is, data can only be accessed if it is adjacent to the previous or next nodes.","The elements in an array can be accessed directlyas opposed to linked lists, which require iterative traversal.",5.0,1,0.9333836436271667,0.5,0.7358882427215576,0.604518473148346
1191,What is the main advantage of arrays over linked lists?,"On the other hand, arrays allow random access, while linked lists allow only sequential access to elements. Singly-linked lists, in fact, can only be traversed in one direction.","The elements in an array can be accessed directlyas opposed to linked lists, which require iterative traversal.",5.0,1,0.9352376461029053,0.5773502691896257,0.6713694334030151,0.6527491211891174
1192,What is the main advantage of arrays over linked lists?,You have to keep up with the head of the list.,"The elements in an array can be accessed directlyas opposed to linked lists, which require iterative traversal.",2.0,0,0.8143088817596436,0.0,0.48385247588157654,0.20597220957279205
1193,What is the main advantage of arrays over linked lists?,Arrays are easier to implement and require less memory,"The elements in an array can be accessed directlyas opposed to linked lists, which require iterative traversal.",3.5,0,0.8936846852302551,0.447213595499958,0.5368618369102478,0.3671106696128845
1194,What is the main advantage of arrays over linked lists?,Linked list has an increase complexity of the implementation. The linked list has an array that keeps growing which leads to a increase in memory.,"The elements in an array can be accessed directlyas opposed to linked lists, which require iterative traversal.",2.5,0,0.9162940979003906,0.48666426339228774,0.4769442677497864,0.38268548250198364
1195,What is the main advantage of arrays over linked lists?,You do not have to iterate through the entire list to access elements.,"The elements in an array can be accessed directlyas opposed to linked lists, which require iterative traversal.",4.5,1,0.8992209434509277,0.447213595499958,0.4912817180156708,0.6614086031913757
1196,What is the main advantage of arrays over linked lists?,you can go forwards and backwards and point to any piece of data at any given time where linked lists have to point to the next piece of data.,"The elements in an array can be accessed directlyas opposed to linked lists, which require iterative traversal.",3.0,0,0.8844039440155029,0.33333333333333337,0.5439009666442871,0.5806937217712402
1197,What is the main advantage of arrays over linked lists?,Take up less memory and are contiguously stored,"The elements in an array can be accessed directlyas opposed to linked lists, which require iterative traversal.",4.0,1,0.8360395431518555,0.0,0.5152743458747864,0.25949347019195557
1198,What is the main advantage of arrays over linked lists?,"Arrays, being fixed, are less error prone.","The elements in an array can be accessed directlyas opposed to linked lists, which require iterative traversal.",2.0,0,0.8413414359092712,0.0,0.4567587077617645,0.31124016642570496
1199,What is the main advantage of arrays over linked lists?,"Arrays have a set list of values. Meaning you can pick a spot in the array such as a [7] picks the 8th spot in the array. With linked lists you have to keep track with pointers if you want to take specific nodes out, otherwise you must traverse the entire list.","The elements in an array can be accessed directlyas opposed to linked lists, which require iterative traversal.",5.0,1,0.904309868812561,0.4364357804719849,0.5929152965545654,0.24658477306365967
1200,What is the main advantage of arrays over linked lists?,"direct access to elements, and speed, linked lists have increased search times to access elements even if the list is sorted.like getting the last element without a pointer directly to the end of the list.","The elements in an array can be accessed directlyas opposed to linked lists, which require iterative traversal.",4.5,1,0.9254370927810669,0.4529108136578385,0.6660443544387817,0.6541759967803955
1201,What is the main advantage of arrays over linked lists?,Array items are accessed directly with equal access time,"The elements in an array can be accessed directlyas opposed to linked lists, which require iterative traversal.",5.0,1,0.8780781030654907,0.5345224838248489,0.5910248756408691,0.5281681418418884
1202,What is the main advantage of arrays over linked lists?,Array-bases implementations require less memory than a pointer-bases one.,"The elements in an array can be accessed directlyas opposed to linked lists, which require iterative traversal.",3.5,0,0.8527724742889404,0.4714045207910317,0.6151477098464966,0.4113631844520569
1203,What is the main advantage of arrays over linked lists?,You can access specific elements quickly in an array. In a linked list you must traverse the list to get access the same element.,"The elements in an array can be accessed directlyas opposed to linked lists, which require iterative traversal.",5.0,1,0.9254442453384399,0.44721359549995804,0.7409899234771729,0.5745871663093567
1204,What is the main advantage of arrays over linked lists?,link lists only allow sequential access where arrays allow random access,"The elements in an array can be accessed directlyas opposed to linked lists, which require iterative traversal.",4.5,1,0.8716546297073364,0.2773500981126146,0.6462883949279785,0.5446314811706543
1205,What is the main advantage of arrays over linked lists?,"Any entitiy in an array may accessed immediately, whereas a linked list must be traversed one item at a time because each object only points adjacent objects","The elements in an array can be accessed directlyas opposed to linked lists, which require iterative traversal.",5.0,1,0.917561948299408,0.4803844614152616,0.7123269438743591,0.6598383784294128
1206,What is the main advantage of arrays over linked lists?,Array based implementation requires less memory than lined lists based implementation,"The elements in an array can be accessed directlyas opposed to linked lists, which require iterative traversal.",3.5,0,0.8735793232917786,0.3922322702763681,0.6024882793426514,0.43489962816238403
1207,What is the main advantage of arrays over linked lists?,Array-based implementations require less memory than a pointer-based ones,"The elements in an array can be accessed directlyas opposed to linked lists, which require iterative traversal.",3.5,0,0.8561182022094727,0.447213595499958,0.6059845089912415,0.4336658716201782
1208,What is the main advantage of arrays over linked lists?,"You can go up and down an array, but you can only go one direction while traversing a linked list.","The elements in an array can be accessed directlyas opposed to linked lists, which require iterative traversal.",3.0,0,0.8793349862098694,0.632455532033676,0.7229925990104675,0.6992267370223999
1209,What is the main advantage of arrays over linked lists?,"arrays allow for the random access of any item cotained a any time, linked lists must be gone through toget to the desired item","The elements in an array can be accessed directlyas opposed to linked lists, which require iterative traversal.",5.0,1,0.90571528673172,0.3651483716701108,0.5964615345001221,0.5017906427383423
1210,What is the main advantage of arrays over linked lists?,"In arrays you have direct access to each element, but in linked lists you have to traverse the list up to the element that you need.","The elements in an array can be accessed directlyas opposed to linked lists, which require iterative traversal.",5.0,1,0.9143449068069458,0.4082482904638631,0.7221161723136902,0.7285200953483582
1211,What is the main advantage of arrays over linked lists?,"Array size is fixed. But Linked is not fixed, data is also accessed quicker in array list, also memory requirement is less and no pointers required. Arrays have random access and less overheads compared to Linked list have sequential access only with too much overheads and no cache memory support. On the other hand, arrays allow random access, while linked lists allow only sequential access to elements. Singly-linked lists, in fact, can only be traversed in one direction.","The elements in an array can be accessed directlyas opposed to linked lists, which require iterative traversal.",5.0,1,0.943497359752655,0.4767312946227963,0.6513330340385437,0.33562982082366943
1212,How are linked lists passed as arguments to a function?,They are passed by reference because you want the function to change the pointer,By reference.,4.5,1,0.6938433647155762,0.4082482904638631,0.49693816900253296,0.3404621481895447
1213,How are linked lists passed as arguments to a function?,Linked lists are passed as arguments to a function by passing the head pointer of the list by reference.,By reference.,5.0,1,0.7737605571746826,0.316227766016838,0.4246140718460083,0.3965287208557129
1214,How are linked lists passed as arguments to a function?,minus A function with access to a linked list 's head pointer has access to the entire list. Pass the head ponter to a function as a reference argument.,By reference.,5.0,1,0.6899179220199585,0.20412414523193154,0.4050750136375427,0.23924237489700317
1215,How are linked lists passed as arguments to a function?,By using a node.,By reference.,2.5,0,0.7886021733283997,0.0,0.7481135129928589,0.42359864711761475
1216,How are linked lists passed as arguments to a function?,Pass-by-reference,By reference.,5.0,1,0.7144590616226196,0.7071067811865476,0.839924693107605,0.7302061319351196
1217,How are linked lists passed as arguments to a function?,you send a pointer to an object of the LinkedList class,By reference.,2.5,0,0.6036861538887024,0.0,0.49916383624076843,0.3468419909477234
1218,How are linked lists passed as arguments to a function?,Passed as a pointer to the head.,By reference.,4.0,1,0.6666578650474548,0.0,0.6389920711517334,0.40971246361732483
1219,How are linked lists passed as arguments to a function?,Passing the head pointer of a linked list to a function gives that function access to all nodes of that linked list,By reference.,4.5,1,0.631000280380249,0.0,0.33171001076698303,0.27456068992614746
1220,How are linked lists passed as arguments to a function?,You have to pass the head pointer to a function since it has access to the entire list.,By reference.,4.0,1,0.6472141742706299,0.0,0.4249371290206909,0.32332462072372437
1221,How are linked lists passed as arguments to a function?,You pass the head pointer to a function as a reference argument.,By reference.,5.0,1,0.7004280090332031,0.4082482904638631,0.6669126749038696,0.42219191789627075
1222,How are linked lists passed as arguments to a function?,not answered,By reference.,0.0,0,0.4804224669933319,0.0,0.4867454767227173,0.29655417799949646
1223,How are linked lists passed as arguments to a function?,passes a pointer to a linked list object,By reference.,2.5,0,0.5995612144470215,0.0,0.5414153337478638,0.4682316780090332
1224,How are linked lists passed as arguments to a function?,"The linked list object contains the head, through which the other elements are accessible.",By reference.,3.5,0,0.6795257329940796,0.0,0.6071892976760864,0.2342330664396286
1225,How are linked lists passed as arguments to a function?,By the head of the list. It takes the head address and traverses from there on in.,By reference.,4.0,1,0.6906718015670776,0.0,0.6314904689788818,0.3846655488014221
1226,How are linked lists passed as arguments to a function?,as a pointer node.,By reference.,3.0,0,0.6366080641746521,0.0,0.7910645604133606,0.5032262802124023
1227,How are linked lists passed as arguments to a function?,A method with access to a linked list 's head pointer as access to the entire list,By reference.,4.0,1,0.6379864811897278,0.0,0.4598888158798218,0.36675339937210083
1228,How are linked lists passed as arguments to a function?,A function with access to a linked list 's head pointer has access to the entire list. Pass the head pointer to a function as a reference argument,By reference.,5.0,1,0.6704052090644836,0.2,0.43303120136260986,0.3712911307811737
1229,How are linked lists passed as arguments to a function?,the head pointer is passed to a function as a reference argument.,By reference.,5.0,1,0.6994640231132507,0.4082482904638631,0.6398906707763672,0.42305731773376465
1230,How are linked lists passed as arguments to a function?,the pointer to the first element is passed to a function,By reference.,4.0,1,0.6124760508537292,0.0,0.6077054142951965,0.3966953754425049
1231,How are linked lists passed as arguments to a function?,"linked lists are passed by reference, specificly the Head pointer",By reference.,5.0,1,0.7410019636154175,0.3779644730092273,0.6488686800003052,0.4721626043319702
1232,How are linked lists passed as arguments to a function?,Pass the head pointer to a function as a reference argument,By reference.,5.0,1,0.659275233745575,0.4082482904638631,0.6680089235305786,0.4238561987876892
1233,How are linked lists passed as arguments to a function?,by refrenece,By reference.,5.0,1,0.7020882368087769,0.0,0.6890430450439453,0.3526417315006256
1234,How are linked lists passed as arguments to a function?,By passing the head pointer and going through the list as needed inside the function.,By reference.,4.0,1,0.6964223384857178,0.0,0.36544859409332275,0.3461112976074219
1235,How are linked lists passed as arguments to a function?,linked lists are passed by using pointers,By reference.,3.0,0,0.6901378631591797,0.0,0.5048290491104126,0.44554877281188965
1236,How are linked lists passed as arguments to a function?,the head object is passed to the function,By reference.,3.5,0,0.5945091843605042,0.0,0.6848931312561035,0.37413427233695984
1237,How are linked lists passed as arguments to a function?,"Linked lists permit insertion and removal of nodes at any point in the list in constant time, [1] but do not allow random access.",By reference.,1.5,0,0.6860459446907043,0.0,0.17724740505218506,0.19687575101852417
1238,What is the difference between a circular linked list and a basic linked list?,They are passed by reference because you want the function to change the pointer,The last element in a circular linked list points to the head of the list.,0.5,0,0.8792329430580139,0.0,0.5008562207221985,0.25480541586875916
1239,What is the difference between a circular linked list and a basic linked list?,"In a circular linked list, every node has a successor which means that the last node 's successor is the head or first node.",The last element in a circular linked list points to the head of the list.,5.0,1,0.917026698589325,0.4454354031873741,0.785575270652771,0.4788781404495239
1240,What is the difference between a circular linked list and a basic linked list?,A circular linked list is a linked list that links items in a continuous circle. This allows the full list to be traversed by starting at any item in the list; a fixed head or tail is not required.,The last element in a circular linked list points to the head of the list.,4.5,1,0.9509562849998474,0.7895420339517232,0.3487952947616577,0.5668219327926636
1241,What is the difference between a circular linked list and a basic linked list?,"In a circular linked list, the last node points to the first node.",The last element in a circular linked list points to the head of the list.,5.0,1,0.9472181797027588,0.6681531047810612,0.8248356580734253,0.5462992191314697
1242,What is the difference between a circular linked list and a basic linked list?,"On a circular linked list, the end element points to the head, thus making the circle. A basic link list has nothing pointing to the head, and the last element points to null.",The last element in a circular linked list points to the head of the list.,5.0,1,0.9683446884155273,0.7999999999999999,0.5661773681640625,0.7885898351669312
1243,What is the difference between a circular linked list and a basic linked list?,the circular linked list 's last node points to the begining of the list while a standard linked list points to NULL,The last element in a circular linked list points to the head of the list.,5.0,1,0.9621076583862305,0.8864052604279187,0.7563238739967346,0.4932379722595215
1244,What is the difference between a circular linked list and a basic linked list?,The last item in the list points to the head,The last element in a circular linked list points to the head of the list.,5.0,1,0.9607064723968506,0.8164965809277261,0.8763054609298706,0.6493110656738281
1245,What is the difference between a circular linked list and a basic linked list?,"In a circular linked list, the last node points back to the first node, there is no NULL",The last element in a circular linked list points to the head of the list.,5.0,1,0.9331315159797668,0.629940788348712,0.5818861126899719,0.4412177801132202
1246,What is the difference between a circular linked list and a basic linked list?,"Circular linked lists are most useful for describing naturally circular structures, and have the advantage of regular structure and being able to traverse the list starting at any point.",The last element in a circular linked list points to the head of the list.,2.5,0,0.9234063029289246,0.4811252243246882,0.3183850944042206,0.4722684621810913
1247,What is the difference between a circular linked list and a basic linked list?,A circular linked list has the last node point back to the head of the linked list.,The last element in a circular linked list points to the head of the list.,5.0,1,0.9795646667480469,0.8728715609439697,0.93659508228302,0.7684718370437622
1248,What is the difference between a circular linked list and a basic linked list?,Basic linked list points to a NULL at the end and circular points to the head at the end.,The last element in a circular linked list points to the head of the list.,5.0,1,0.9582854509353638,0.6614378277661477,0.6955422163009644,0.7155362963676453
1249,What is the difference between a circular linked list and a basic linked list?,in a circular linked list the the last item points to the first item.,The last element in a circular linked list points to the head of the list.,5.0,1,0.9678778052330017,0.6681531047810612,0.8400691747665405,0.6050490140914917
1250,What is the difference between a circular linked list and a basic linked list?,"The circular linked list 's tail points to the head, whereas the basic linked list 's tail points to a NULL.",The last element in a circular linked list points to the head of the list.,5.0,1,0.9514489769935608,0.7905694150420949,0.6098880767822266,0.5158652067184448
1251,What is the difference between a circular linked list and a basic linked list?,a basic linked list has an end with a null value where a circular linked list has a pointer from the end to the beginning,The last element in a circular linked list points to the head of the list.,5.0,1,0.9435699582099915,0.6735753140545635,0.6585009694099426,0.4720333218574524
1252,What is the difference between a circular linked list and a basic linked list?,"how to determine the end of the list, in basic linked lists the last element links to a null pointer, while circular linked lists link to the head element at the end.",The last element in a circular linked list points to the head of the list.,5.0,1,0.9689503908157349,0.5656854249492381,0.7480502724647522,0.6581333875656128
1253,What is the difference between a circular linked list and a basic linked list?,"No Node in a circular linked list contains NULL, the last Node points pack to a Node within the list.",The last element in a circular linked list points to the head of the list.,5.0,1,0.9129467606544495,0.6069769786668843,0.44005587697029114,0.5131813287734985
1254,What is the difference between a circular linked list and a basic linked list?,"The difference between a circular linked list and a basic linked list is that a circular linked list, the last node references the first node. Every node in a circular linked list has a successor and no node in a circular linked list contains NULL.",The last element in a circular linked list points to the head of the list.,5.0,1,0.9386436939239502,0.8268688657895649,0.61307692527771,0.42885076999664307
1255,What is the difference between a circular linked list and a basic linked list?,No node in a circular linked list contains NULL.,The last element in a circular linked list points to the head of the list.,3.5,0,0.8435794115066528,0.6666666666666669,0.2605087161064148,0.37882357835769653
1256,What is the difference between a circular linked list and a basic linked list?,in a circular linked list the last element points to the head of the list,The last element in a circular linked list points to the head of the list.,5.0,1,0.9966784715652466,1.0000000000000002,0.9866477847099304,0.976760745048523
1257,What is the difference between a circular linked list and a basic linked list?,"In a regular linked list the last object points to NULL. In a circular linked list, the last object points back to the beginning of the list",The last element in a circular linked list points to the head of the list.,5.0,1,0.9775930047035217,0.8315218406203001,0.7307108640670776,0.3772315979003906
1258,What is the difference between a circular linked list and a basic linked list?,"In circular linked list each node has successor, no node contains NULL, while in basic linked list last node contain NULL.",The last element in a circular linked list points to the head of the list.,3.0,0,0.8418813347816467,0.5604485383178051,0.5123394727706909,0.44750750064849854
1259,What is the difference between a circular linked list and a basic linked list?,"in a circular linked lists, the last element points to the first",The last element in a circular linked list points to the head of the list.,5.0,1,0.974744975566864,0.894427190999916,0.8302669525146484,0.5819916725158691
1260,What is the difference between a circular linked list and a basic linked list?,"A circular linked list does not have a last element. Instead, it is last item points to the head of the list.",The last element in a circular linked list points to the head of the list.,5.0,1,0.9638825058937073,0.8660254037844388,0.722306489944458,0.5292335748672485
1261,What is the difference between a circular linked list and a basic linked list?,"in a circular linked list, the last node contains a pointer that goes back to the first node; in a basic linked list, the last node contains a null pointer",The last element in a circular linked list points to the head of the list.,5.0,1,0.9265689849853516,0.5306686305052326,0.7221922874450684,0.4292355477809906
1262,What is the difference between a circular linked list and a basic linked list?,"in a circular linked list, the last object is linked back to the first object.",The last element in a circular linked list points to the head of the list.,5.0,1,0.9574571251869202,0.6454972243679029,0.8040643334388733,0.513776421546936
1263,What is the difference between a circular linked list and a basic linked list?,"In the case of a non circular link list, if you are at the last node of the list and u want to move to first u need to go to one, step back till u reach to first. But in circular link list from last to first you need to make only one move. In a single link list u can move only in one direction but in double link list u can move in any direction back or forward or forward.",The last element in a circular linked list points to the head of the list.,3.5,0,0.9195316433906555,0.6556300376497838,0.5513191223144531,0.24783766269683838
1264,What is the main advantage of a doubly-linked list over a basic linked list?,they can traverse in both directions,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",3.5,0,0.8471957445144653,0.0,0.5580103397369385,0.4147043824195862
1265,What is the main advantage of a doubly-linked list over a basic linked list?,In a doubly linked list you can delete a node without having to traverse the list.,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",4.5,1,0.9047093987464905,0.6324555320336759,0.5557432174682617,0.49933716654777527
1266,What is the main advantage of a doubly-linked list over a basic linked list?,A doubly-linked list allows you to delete a node without traversing the list to establish a trailing pointer.,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",4.5,1,0.8774633407592773,0.5547001962252293,0.3825949728488922,0.5122866630554199
1267,What is the main advantage of a doubly-linked list over a basic linked list?,A doubly linked list allows you to traverse the list in either direction. Each node points to its successor as well as to its predecessor.,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",3.5,0,0.9222123622894287,0.5547001962252293,0.6543146371841431,0.4825587272644043
1268,What is the main advantage of a doubly-linked list over a basic linked list?,"Doubly-linked lists can traverse backwards, though they still cannot access data at any point in the list, it can be shorter to traverse backwards.","All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",3.5,0,0.897946834564209,0.25,0.2812970280647278,0.371754914522171
1269,What is the main advantage of a doubly-linked list over a basic linked list?,you can traverse the list from front to back and back to front,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",3.5,0,0.8499464988708496,0.7071067811865476,0.6232050657272339,0.41664552688598633
1270,What is the main advantage of a doubly-linked list over a basic linked list?,You can traverse the list in reverse.,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",3.5,0,0.8735628128051758,0.5773502691896258,0.4365156888961792,0.38328856229782104
1271,What is the main advantage of a doubly-linked list over a basic linked list?,Doubly linked lists can be traversed in both directions,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",3.5,0,0.876534104347229,0.0,0.5775392055511475,0.3996027708053589
1272,What is the main advantage of a doubly-linked list over a basic linked list?,"Double-linked lists require more space per node, and their elementary operations are more expensive; but they are often easier to manipulate because they allow sequential access to the list in both directions.","All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",3.5,0,0.9193229675292969,0.3535533905932738,0.35564103722572327,0.2527732253074646
1273,What is the main advantage of a doubly-linked list over a basic linked list?,You can traverse forwards and backwards through nodes.,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",3.5,0,0.782503604888916,0.0,0.4840109050273895,0.3749536871910095
1274,What is the main advantage of a doubly-linked list over a basic linked list?,You can point both forwards and backwards,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",3.5,0,0.7997456789016724,0.0,0.4404022693634033,0.4733811914920807
1275,What is the main advantage of a doubly-linked list over a basic linked list?,You can go backwards in the linked list and access previous data easier without having to keep track of the previous item,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",4.0,1,0.9315492510795593,0.27735009811261463,0.4422013759613037,0.5605344772338867
1276,What is the main advantage of a doubly-linked list over a basic linked list?,Doubly linked lists allow backward movement through the nodes.,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",3.5,0,0.8277265429496765,0.0,0.32225751876831055,0.42642658948898315
1277,What is the main advantage of a doubly-linked list over a basic linked list?,"they have double pointers, so each node can point forwards or backwards. Making it a little easer to get to where you need.","All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",3.5,0,0.869735062122345,0.0,0.45366787910461426,0.5028649568557739
1278,What is the main advantage of a doubly-linked list over a basic linked list?,ability to backtrack through a list.,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",3.0,0,0.8295705914497375,0.5773502691896258,0.5355832576751709,0.4471167325973511
1279,What is the main advantage of a doubly-linked list over a basic linked list?,You can move forwards and backwards in the double-linked list. Basic only moves forwards.,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",3.5,0,0.8657194375991821,0.31622776601683794,0.4554692506790161,0.4717973470687866
1280,What is the main advantage of a doubly-linked list over a basic linked list?,The advantage is that each node points to bothe its predecessor and its successor. There are no special cases for insertion and deletion.,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",4.5,1,0.9251221418380737,0.44721359549995804,0.5651577711105347,0.48404407501220703
1281,What is the main advantage of a doubly-linked list over a basic linked list?,each node points to both its predecessor and its successor.,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",3.5,0,0.8471684455871582,0.0,0.5774381756782532,0.4829784333705902
1282,What is the main advantage of a doubly-linked list over a basic linked list?,a doubly linked list has pointers in both directions. this allows for access from back to front as well as front to back,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",4.0,1,0.9205573797225952,0.3779644730092273,0.5799320936203003,0.34867069125175476
1283,What is the main advantage of a doubly-linked list over a basic linked list?,"A doubly linked list can be traversed either direction, while a normal linked list can only be traversed from start to finish","All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",3.5,0,0.9125192165374756,0.48507125007266594,0.5956050753593445,0.5044041275978088
1284,What is the main advantage of a doubly-linked list over a basic linked list?,"Double Linked list are often easier to manipulate, because they allow sequential access to the list in both direction","All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",4.0,1,0.9118497371673584,0.5773502691896258,0.44898080825805664,0.33934473991394043
1285,What is the main advantage of a doubly-linked list over a basic linked list?,"given a node in the list, one can navigate easily in either direction","All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",4.0,1,0.9234709143638611,0.5477225575051663,0.6276089549064636,0.5020861625671387
1286,What is the main advantage of a doubly-linked list over a basic linked list?,You can traverse the list both forward and backwards.,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",3.5,0,0.867293119430542,0.5,0.6097952127456665,0.475292831659317
1287,What is the main advantage of a doubly-linked list over a basic linked list?,a doubly linked list allows you to back up from a node rather than having to go through the entire list again,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",4.0,1,0.917811930179596,0.632455532033676,0.5069868564605713,0.43317902088165283
1288,What is the main advantage of a doubly-linked list over a basic linked list?,Gives faster times for some operations such as insertion and deletion,"All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",5.0,1,0.9159996509552002,0.6666666666666669,0.453686386346817,0.5347335338592529
1289,What is the main advantage of a doubly-linked list over a basic linked list?,"The primary disadvantage of doubly linked lists are that1each node requires an extra pointer, requiring more space, and2the insertion or deletion of a node takes a bit longermore pointer operations.","All the deletion and insertion operations can be performed in constant time, including those operations performed before a given location in the list or at the end of the list.",2.0,0,0.8978316783905029,0.3265986323710904,0.3133315443992615,0.26569315791130066
1290,What is the main disadvantage of a doubly-linked list over a basic linked list?,they take up twice as much memory for each node,Extra space required to store the back pointers.,5.0,1,0.8646755814552307,0.0,0.5682783722877502,0.4570674002170563
1291,What is the main disadvantage of a doubly-linked list over a basic linked list?,"In a doubly linked list, there are more pointers to set and the mechanics of inserting and deleting are more difficult. Also, the special cases at the beginning or end of the list are more complicated.",Extra space required to store the back pointers.,3.5,0,0.8636890649795532,0.24253562503633297,0.7229680418968201,0.4332847595214844
1292,What is the main disadvantage of a doubly-linked list over a basic linked list?,"There are more pointers to set, the mechanics of inserting into and deleting from a doubly linked list are a bit more involved than for a singly linked list.",Extra space required to store the back pointers.,4.0,1,0.8637102246284485,0.24253562503633297,0.726294219493866,0.4005052149295807
1293,What is the main disadvantage of a doubly-linked list over a basic linked list?,Insertion and deletion with a doubly linked list are more involved than with a singly linked list leaving more room for error and complex algorithms.,Extra space required to store the back pointers.,3.0,0,0.8392384648323059,0.0,0.660485029220581,0.3946129083633423
1294,What is the main disadvantage of a doubly-linked list over a basic linked list?,Need more memory to store previous pointers.,Extra space required to store the back pointers.,5.0,1,0.9165884256362915,0.632455532033676,0.8517431020736694,0.618970513343811
1295,What is the main disadvantage of a doubly-linked list over a basic linked list?,a node in a doubly linked list takes up more memory than a node in a singly linked list.,Extra space required to store the back pointers.,5.0,1,0.8156975507736206,0.0,0.5968149900436401,0.3526609539985657
1296,What is the main disadvantage of a doubly-linked list over a basic linked list?,You have to keep up with where you are and you have to consider the predecessor and successor connections when inserting or deleting.,Extra space required to store the back pointers.,3.0,0,0.8599872589111328,0.0,0.5733816623687744,0.2611808776855469
1297,What is the main disadvantage of a doubly-linked list over a basic linked list?,"Each node requires an extra node, requires more memory, and is more difficult to insert and remove individual nodes",Extra space required to store the back pointers.,5.0,1,0.8412695527076721,0.25819888974716115,0.785847544670105,0.4746977686882019
1298,What is the main disadvantage of a doubly-linked list over a basic linked list?,"Double-linked lists require more space per node, and their elementary operations are more expensive",Extra space required to store the back pointers.,5.0,1,0.8432851433753967,0.3333333333333333,0.668738603591919,0.5075504183769226
1299,What is the main disadvantage of a doubly-linked list over a basic linked list?,More difficult to delete and create nodes.,Extra space required to store the back pointers.,3.0,0,0.8262206315994263,0.0,0.6893435716629028,0.32165777683258057
1300,What is the main disadvantage of a doubly-linked list over a basic linked list?,They use more memory and you have to make 2 pointers and update 2 pointers each time you change the list.,Extra space required to store the back pointers.,5.0,1,0.898834228515625,0.6030226891555273,0.6673582792282104,0.48166120052337646
1301,What is the main disadvantage of a doubly-linked list over a basic linked list?,nodes take up more memory,Extra space required to store the back pointers.,5.0,1,0.7966515421867371,0.0,0.6948014497756958,0.39906883239746094
1302,What is the main disadvantage of a doubly-linked list over a basic linked list?,"Each node requires an extra pointerspace requirements increased, Insertion or deletion of a node takes a longermore pointer operations.",Extra space required to store the back pointers.,5.0,1,0.8434817790985107,0.25819888974716115,0.7554458379745483,0.49967971444129944
1303,What is the main disadvantage of a doubly-linked list over a basic linked list?,its a little more confusing. The special cases at the end and beginning become more difficult to do.,Extra space required to store the back pointers.,3.0,0,0.8540536165237427,0.0,0.6725923418998718,0.3594934940338135
1304,What is the main disadvantage of a doubly-linked list over a basic linked list?,increased actions to add and remove elements to the linked list.,Extra space required to store the back pointers.,3.0,0,0.8440621495246887,0.0,0.6386246681213379,0.19353029131889343
1305,What is the main disadvantage of a doubly-linked list over a basic linked list?,"Inserting and deleting in a double-linked list is more involved, and has special cases at the beginning and end.",Extra space required to store the back pointers.,3.0,0,0.8419770002365112,0.0,0.6921650171279907,0.36002016067504883
1306,What is the main disadvantage of a doubly-linked list over a basic linked list?,The main disadvanate is that if hard to remove all items in the list.,Extra space required to store the back pointers.,2.0,0,0.8806263208389282,0.0,0.5484721660614014,0.2395494133234024
1307,What is the main disadvantage of a doubly-linked list over a basic linked list?,"each node requires an extra pointer, taking up more storage. insertions and deletions require more pointer operations.",Extra space required to store the back pointers.,5.0,1,0.8910912275314331,0.27735009811261463,0.7916247844696045,0.691190779209137
1308,What is the main disadvantage of a doubly-linked list over a basic linked list?,"in a doubly linked list there are twice as many pointers for each element, therefore more memory is used",Extra space required to store the back pointers.,5.0,1,0.8427824378013611,0.3535533905932738,0.6076539754867554,0.5331578850746155
1309,What is the main disadvantage of a doubly-linked list over a basic linked list?,The process of adding and removing Nodes in a Doubly linked list is more complex than in a basic linked list,Extra space required to store the back pointers.,3.5,0,0.811684787273407,0.0,0.7053923010826111,0.3387719392776489
1310,What is the main disadvantage of a doubly-linked list over a basic linked list?,"Double linked lists require more space per node, and their elementary operation are more expensive",Extra space required to store the back pointers.,5.0,1,0.849113941192627,0.3333333333333333,0.6634595990180969,0.48964086174964905
1311,What is the main disadvantage of a doubly-linked list over a basic linked list?,"1-each node requires an extra pointer, requiring more space 2-the insertion or deletion of a node takes a bit longer, more pointer operations",Extra space required to store the back pointers.,5.0,1,0.8491725921630859,0.33333333333333337,0.7976993322372437,0.5094372034072876
1312,What is the main disadvantage of a doubly-linked list over a basic linked list?,It takes up twice the storage needed.,Extra space required to store the back pointers.,5.0,1,0.9020161032676697,0.0,0.520244836807251,0.5687152147293091
1313,What is the main disadvantage of a doubly-linked list over a basic linked list?,"using more pointers to enable the backward movement takes up more memory, having more pointers make it slightly more work to add or remove a node from the list",Extra space required to store the back pointers.,5.0,1,0.8902885317802429,0.47140452079103173,0.6733042001724243,0.5056368112564087
1314,What is the main disadvantage of a doubly-linked list over a basic linked list?,"increased memory requirements, slightly more complicated when modifying elements in the list",Extra space required to store the back pointers.,5.0,1,0.8211353421211243,0.0,0.7728170156478882,0.4378823935985565
1315,What is the main disadvantage of a doubly-linked list over a basic linked list?,not answered,Extra space required to store the back pointers.,0.0,0,0.5653786659240723,0.0,0.36328747868537903,0.11930515617132187
1316,What is a stack?,A data structure for storing items which are to be accessed in last-in first-out order that can be implemented in three ways.,"A data structure that can store elements, which has the property that the last item added will be the first to be removedor last-in-first-out",5.0,1,0.9628602862358093,0.5000000000000001,0.742113471031189,0.6434735655784607
1317,What is a stack?,A stack is an abstract data type that is based on the principle that the last element inserted into the stack will be the first element removed from the stack.,"A data structure that can store elements, which has the property that the last item added will be the first to be removedor last-in-first-out",5.0,1,0.9336448311805725,0.22360679774997896,0.8828210234642029,0.7954508066177368
1318,What is a stack?,Stores a set of elements in a particular order.,"A data structure that can store elements, which has the property that the last item added will be the first to be removedor last-in-first-out",2.0,0,0.9081169962882996,0.447213595499958,0.5059824585914612,0.39368510246276855
1319,What is a stack?,"An ADT whose most recently inserted item is the first item removed or retrieved. This property is called last in, first outLIFO. Items enter and leave a stack at its top.","A data structure that can store elements, which has the property that the last item added will be the first to be removedor last-in-first-out",5.0,1,0.9566516280174255,0.5303300858899107,0.8915979266166687,0.5853173732757568
1320,What is a stack?,A list in which only the topor last item addedcan be modified.,"A data structure that can store elements, which has the property that the last item added will be the first to be removedor last-in-first-out",4.5,1,0.9390533566474915,0.447213595499958,0.8449472188949585,0.6280539631843567
1321,What is a stack?,a stack is a data structure that uses push to insert an item and pop to remove ad item. The stack use a last in first out structure for inserting and removing items.,"A data structure that can store elements, which has the property that the last item added will be the first to be removedor last-in-first-out",5.0,1,0.9264964461326599,0.6019292654288462,0.7503552436828613,0.4814850389957428
1322,What is a stack?,A data structure that stores data using LIFO.,"A data structure that can store elements, which has the property that the last item added will be the first to be removedor last-in-first-out",5.0,1,0.8354682326316833,0.7500000000000002,0.4260239601135254,0.34906893968582153
1323,What is a stack?,"A stack is similar to an array, but does not allow for random access. Stacks only allow a user to retrieve the last item put into the stack. Last in, fist out.","A data structure that can store elements, which has the property that the last item added will be the first to be removedor last-in-first-out",5.0,1,0.9345218539237976,0.23570226039551587,0.6740164160728455,0.30916306376457214
1324,What is a stack?,Stores a set of elements in a particular order. Stack principle: LAST IN FIRST OUT. It means: the last element inserted is the first one to be removed.,"A data structure that can store elements, which has the property that the last item added will be the first to be removedor last-in-first-out",5.0,1,0.9594187140464783,0.30151134457776363,0.919465184211731,0.39368510246276855
1325,What is a stack?,A stack is an ADT that stores a set of elements in a particular order.,"A data structure that can store elements, which has the property that the last item added will be the first to be removedor last-in-first-out",2.5,0,0.9186788201332092,0.3779644730092273,0.5460577011108398,0.35505303740501404
1326,What is a stack?,"a data type that stores a set of elements in a certain order, last in, first out.","A data structure that can store elements, which has the property that the last item added will be the first to be removedor last-in-first-out",5.0,1,0.9442760944366455,0.5345224838248489,0.7405413389205933,0.8199584484100342
1327,What is a stack?,a data structure that moves elements in last in first out,"A data structure that can store elements, which has the property that the last item added will be the first to be removedor last-in-first-out",5.0,1,0.9269523620605469,0.8660254037844388,0.8065734505653381,0.7043125033378601
1328,What is a stack?,Stores a set of elements in a last in first out order.,"A data structure that can store elements, which has the property that the last item added will be the first to be removedor last-in-first-out",5.0,1,0.9316149353981018,0.5,0.7990310192108154,0.7039381265640259
1329,What is a stack?,A list that can be added to or removed from only from the top.,"A data structure that can store elements, which has the property that the last item added will be the first to be removedor last-in-first-out",5.0,1,0.9295477867126465,0.5773502691896258,0.6751822233200073,0.49511608481407166
1330,What is a stack?,"a stack is an Abstract data type which operates on a last in first out basis for storing a list of objects, and does not supportat least in the pure stackpeeking at a element without removing the rest of the stack first.","A data structure that can store elements, which has the property that the last item added will be the first to be removedor last-in-first-out",5.0,1,0.9410269260406494,0.22941573387056183,0.8142220973968506,0.3992493748664856
1331,What is a stack?,Stores a set of elements in a particular order based on the principle of Last In First OutLIFO.,"A data structure that can store elements, which has the property that the last item added will be the first to be removedor last-in-first-out",5.0,1,0.9291698336601257,0.3535533905932738,0.8226093053817749,0.7048578262329102
1332,What is a stack?,"an object list that stores elements in a particular order, the first object inserted is at the bottom with the last object at the top so the first object in is the last object out.","A data structure that can store elements, which has the property that the last item added will be the first to be removedor last-in-first-out",5.0,1,0.9441242218017578,0.1796053020267749,0.8825805187225342,0.5907614231109619
1333,What is a stack?,An ADT that stores a set of elements in a particular order. The stack principles are LIFO. The last item inserted in the list is the first out.,"A data structure that can store elements, which has the property that the last item added will be the first to be removedor last-in-first-out",5.0,1,0.9497722387313843,0.4082482904638631,0.8246800303459167,0.4459095001220703
1334,What is a stack?,An abstract data type that stores a set of elements in a particular order.,"A data structure that can store elements, which has the property that the last item added will be the first to be removedor last-in-first-out",2.5,0,0.9060466289520264,0.5000000000000001,0.5716431140899658,0.5164631009101868
1335,What is a stack?,a collection of data to be executed in the order of last in first out,"A data structure that can store elements, which has the property that the last item added will be the first to be removedor last-in-first-out",5.0,1,0.9303300380706787,0.5,0.805433988571167,0.8053483963012695
1336,What is a stack?,"A stack is a data structure that allows data members to be added or removed one at a time, and in order. They are a Last in First Out structure.","A data structure that can store elements, which has the property that the last item added will be the first to be removedor last-in-first-out",5.0,1,0.9607707262039185,0.74535599249993,0.8536070585250854,0.475162148475647
1337,What is a stack?,Stores a set of element in a particular order,"A data structure that can store elements, which has the property that the last item added will be the first to be removedor last-in-first-out",2.0,0,0.8911501169204712,0.0,0.5256878137588501,0.4132363200187683
1338,What is a stack?,is a list of element where the first one to be removed is the last one inserted,"A data structure that can store elements, which has the property that the last item added will be the first to be removedor last-in-first-out",5.0,1,0.9434385299682617,0.0,0.8849552869796753,0.7426285743713379
1339,What is a stack?,A data structure that puts elements in a list and only allows the user access to the last element.,"A data structure that can store elements, which has the property that the last item added will be the first to be removedor last-in-first-out",4.5,1,0.9323893785476685,0.5773502691896257,0.8029864430427551,0.7459592223167419
1340,What is a stack?,a finite ordered list with zero or more elements,"A data structure that can store elements, which has the property that the last item added will be the first to be removedor last-in-first-out",2.0,0,0.8354387879371643,0.447213595499958,0.5848793983459473,0.3685729503631592
1341,What is a stack?,"A storage container that holds objects in a certain order, which has a LIFO priority","A data structure that can store elements, which has the property that the last item added will be the first to be removedor last-in-first-out",5.0,1,0.9056336283683777,0.0,0.5701466798782349,0.4277920424938202
1342,What is a stack?,"Stacks are a type of container adaptors, specifically designed to operate in a LIFO contextlast-in first-out, where elements are inserted and extracted only from the end of the container.","A data structure that can store elements, which has the property that the last item added will be the first to be removedor last-in-first-out",5.0,1,0.9343616962432861,0.25,0.6958775520324707,0.48881256580352783
1343,What are the two main functions defined by a stack?,Push and pop are two main functions defined in a stack,push and pop,5.0,1,0.7721660733222961,0.5773502691896258,0.5576953887939453,0.6306121945381165
1344,What are the two main functions defined by a stack?,Push which inserts an element on the top of the stack and pop which removes the last inserted element from the stack.,push and pop,5.0,1,0.7444220185279846,0.3922322702763681,0.5145401358604431,0.5354182720184326
1345,What are the two main functions defined by a stack?,Push and pop.,push and pop,5.0,1,0.9540760517120361,1.0000000000000002,0.9894505143165588,0.9879052042961121
1346,What are the two main functions defined by a stack?,Pop function and Push function,push and pop,5.0,1,0.7867770195007324,0.5773502691896258,0.8677764534950256,0.8002567291259766
1347,What are the two main functions defined by a stack?,push and pop.,push and pop,5.0,1,0.9540760517120361,1.0000000000000002,0.9894505143165588,0.9879052042961121
1348,What are the two main functions defined by a stack?,pushinsert an itempopremove an item,push and pop,5.0,1,0.42556339502334595,0.0,0.6811234354972839,0.5470954775810242
1349,What are the two main functions defined by a stack?,Adding a new item and removing the item,push and pop,5.0,1,0.6113229990005493,0.0,0.4991365075111389,0.24438714981079102
1350,What are the two main functions defined by a stack?,Pushinsertand popretrieve.,push and pop,5.0,1,0.41326412558555603,0.0,0.7928780317306519,0.6579713225364685
1351,What are the two main functions defined by a stack?,push and pop.,push and pop,5.0,1,0.9540760517120361,1.0000000000000002,0.9894505143165588,0.9879052042961121
1352,What are the two main functions defined by a stack?,Push and Pop.,push and pop,5.0,1,0.9540760517120361,1.0000000000000002,0.9894505143165588,0.9879052042961121
1353,What are the two main functions defined by a stack?,pop and push,push and pop,5.0,1,1.000000238418579,1.0000000000000002,0.9832515716552734,0.9573414921760559
1354,What are the two main functions defined by a stack?,pushadd an elementpopremove an element,push and pop,5.0,1,0.4637240171432495,0.0,0.7489096522331238,0.5510972738265991
1355,What are the two main functions defined by a stack?,Push and pop.,push and pop,5.0,1,0.9540760517120361,1.0000000000000002,0.9894505143165588,0.9879052042961121
1356,What are the two main functions defined by a stack?,pop and push,push and pop,5.0,1,1.000000238418579,1.0000000000000002,0.9832515716552734,0.9573414921760559
1357,What are the two main functions defined by a stack?,pushto add to a item the StackPopto pull the last item added from an array.,push and pop,5.0,1,0.6707006096839905,0.0,0.392841637134552,0.4433309733867645
1358,What are the two main functions defined by a stack?,pop and push,push and pop,5.0,1,1.000000238418579,1.0000000000000002,0.9832515716552734,0.9573414921760559
1359,What are the two main functions defined by a stack?,"push and pop, push puts an object into the list, and pop takes the last object off.",push and pop,5.0,1,0.8577938079833984,0.7302967433402217,0.6020022630691528,0.48996782302856445
1360,What are the two main functions defined by a stack?,Push and Pop are the two main functions of a stack,push and pop,5.0,1,0.7922513484954834,0.632455532033676,0.6110776662826538,0.5950809121131897
1361,What are the two main functions defined by a stack?,Push and Pop,push and pop,5.0,1,1.000000238418579,1.0000000000000002,1.0,1.0
1362,What are the two main functions defined by a stack?,"push, which adds an element to the stack ... and pop which takes an element off the stack",push and pop,5.0,1,0.7791997194290161,0.4082482904638631,0.6858248710632324,0.602000892162323
1363,What are the two main functions defined by a stack?,"Push and Pop, which add and remove data from the stack, respectively.",push and pop,5.0,1,0.8123218417167664,0.5345224838248489,0.5494027137756348,0.5703979134559631
1364,What are the two main functions defined by a stack?,push and pop,push and pop,5.0,1,1.000000238418579,1.0000000000000002,1.0,1.0
1365,What are the two main functions defined by a stack?,pop to remove item push to insert an element,push and pop,5.0,1,0.7614628672599792,0.5773502691896258,0.6585622429847717,0.5728148818016052
1366,What are the two main functions defined by a stack?,Pop and push,push and pop,5.0,1,1.000000238418579,1.0000000000000002,0.9832515716552734,0.9573414921760559
1367,What are the two main functions defined by a stack?,pop and push,push and pop,5.0,1,1.000000238418579,1.0000000000000002,0.9832515716552734,0.9573414921760559
1368,What are the two main functions defined by a stack?,push adds an item to the top of the stack pop removes the top item from the stack,push and pop,5.0,1,0.7337134480476379,0.4082482904638631,0.5103410482406616,0.567833662033081
1369,What are the two main functions defined by a stack?,push and pop. Push adds a given node to the top of the stack leaving previous nodes below. Pop removes and returns the current top node of the stack,push and pop,5.0,1,0.7719047665596008,0.5773502691896258,0.41080018877983093,0.9879053831100464
1370,How can you implement a stack with an array?,An array has a fixed size. You can add and delete elements to the end of the array and you use a pointer to keep track of the last element added. Each time you add or delete an element you update the pointer and check if it is equal to the max size of the array.,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",5.0,1,0.9501093029975891,0.5976143046671969,0.714949905872345,0.284880667924881
1371,How can you implement a stack with an array?,By implementing an array of a pre-defined size with the bottom stack element stored at element 0 and the last element stored in the array is the top. You increment top when an element is pushed and you decrement it when an item is popped.,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",5.0,1,0.9267025589942932,0.38348249442368526,0.7632126808166504,0.5392570495605469
1372,How can you implement a stack with an array?,"If you use a dynamically allocated array, you must provide a destructor and copy constructor.","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",3.0,0,0.845920205116272,0.3535533905932738,0.6327327489852905,0.4633936882019043
1373,How can you implement a stack with an array?,Create a int value that stores the head of the stack. Increment the top when one element is pushed and decrement after it is popped.,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",5.0,1,0.9286073446273804,0.30151134457776363,0.7123916149139404,0.42916837334632874
1374,How can you implement a stack with an array?,Use a pointer that always points to the end of the array list for push or pop modifications.,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",4.5,1,0.9534651041030884,0.629940788348712,0.6987178325653076,0.7197135090827942
1375,How can you implement a stack with an array?,if you used an array to implement a stack when you add an element just add it to the end of an array and remove items from end of array also.,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",4.5,1,0.9473965167999268,0.8660254037844387,0.7596257925033569,0.6920719146728516
1376,How can you implement a stack with an array?,You predetermine the size of the stack as you would an array. This type can not grow.,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",2.5,0,0.9213470816612244,0.5477225575051663,0.5734272599220276,0.48345592617988586
1377,How can you implement a stack with an array?,"Declare a variable that points the last item in the array, which increasesplus pluswhen items are pushed onto the stack, and decreases--when an item is popped off the top.","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",5.0,1,0.9429817795753479,0.3464101615137755,0.6853089928627014,0.6972885727882385
1378,How can you implement a stack with an array?,"Allocate an array of some size. The bottom stack element is stored at some element. Last index in the array is the top. Increment top when one element is pushed, decrement after pop.","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",4.5,1,0.9248417615890503,0.5222329678670936,0.7402364015579224,0.47028595209121704
1379,How can you implement a stack with an array?,"You allocate an pre-defined array, the bottom element is stored at element 0, and the last index is the head.","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",4.0,1,0.9130659103393555,0.30151134457776363,0.6468364000320435,0.4061092138290405
1380,How can you implement a stack with an array?,"Make an array, make the bottom at spot 0, make the last spot in the array the top, and increment top when you ad","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",4.5,1,0.9363969564437866,0.4588314677411236,0.6952157616615295,0.5927863717079163
1381,How can you implement a stack with an array?,treat the beginning of the array as the beginning of the stack,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",4.0,1,0.9428223371505737,0.50709255283711,0.6377691030502319,0.3389936089515686
1382,How can you implement a stack with an array?,Use an index value called top to keep track of the last element in the array.,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",4.5,1,0.9508031010627747,0.3779644730092273,0.7542794942855835,0.48437440395355225
1383,How can you implement a stack with an array?,create an array and implement pointers that point to the next list item down and stack them up.,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",2.0,0,0.9368293285369873,0.474341649025257,0.6799216270446777,0.5140690803527832
1384,How can you implement a stack with an array?,"for efficiency it is easiest to implement the left to right method, with the right most item being the one that is retrieved when a pop is performed, and a push places an object on the furthest element.","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",3.5,0,0.9453002214431763,0.5443310539518175,0.5944071412086487,0.5446780920028687
1385,How can you implement a stack with an array?,"Create an array based on a pre-defined size N There cannot be more elements than N. Bottom stack element stored at element 0 last index in the array is the top Increment top when one element is pushed, decrement after pop","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",4.5,1,0.9092460870742798,0.518874521662771,0.7181347608566284,0.5512270927429199
1386,How can you implement a stack with an array?,"with the element added to the array, so that the last element added is at the end, and when the element is popped it takes the last element off the array","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",4.0,1,0.9511621594429016,0.4303314829119353,0.742849588394165,0.6454265117645264
1387,How can you implement a stack with an array?,Allocate an array of some pre-defined size. Bottom stack element stored at element 0. The last index in the array is the top. Increment top when one element is pushed.,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",4.5,1,0.9122446179389954,0.4767312946227962,0.7178614139556885,0.4698617160320282
1388,How can you implement a stack with an array?,"Create an array, size N. N plus plus when one element is pushed. N --when one element is popped.","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",4.0,1,0.8585209846496582,0.2773500981126146,0.6494986414909363,0.5464699268341064
1389,How can you implement a stack with an array?,define an array and keep track of a pointer to the last element as items are added,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",4.0,1,0.9393271803855896,0.3779644730092273,0.6896735429763794,0.6240714192390442
1390,How can you implement a stack with an array?,"By allocating an array of predetermined size, and an integer to track the top element of the stack. The bottom member of the stack will go in element 0 of the array, and for each element pushed the top tracking integer is incremented.","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",4.5,1,0.9442334175109863,0.49827287912243984,0.6839801073074341,0.5783531069755554
1391,How can you implement a stack with an array?,"Allocate an array of some size, bottom stack element stored at element 0","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",4.0,1,0.8386027812957764,0.447213595499958,0.6076192855834961,0.5010281205177307
1392,How can you implement a stack with an array?,you store the stack in the array but you have to keep in mind the first element,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",3.0,0,0.9439857602119446,0.6000000000000001,0.7160048484802246,0.47990164160728455
1393,How can you implement a stack with an array?,You keep track of the last item entered into the array and do not allow the user access to the other parts of the array.,"Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",4.0,1,0.9644597172737122,0.6030226891555273,0.5846148133277893,0.5043599605560303
1394,How can you implement a stack with an array?,"using arrays, you are pushing one int at a time into the stack until you get to the end of your array","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",4.0,1,0.94780433177948,0.5773502691896258,0.6794143915176392,0.6441017985343933
1395,How can you implement a stack with an array?,"by having a max number of elements, allocating an array with that number of elements, storing the elements starting at 0, and keeping track of how many elements are currently in the list","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",4.0,1,0.9284772276878357,0.4898979485566357,0.6378234624862671,0.5069156885147095
1396,How can you implement a stack with an array?,"Stack usually holds a bunch of items with the same type, therefore u can use an array, to hold the content of the stack and an integer top that holds the index of the element at the top of the stack. u Choose an array size. Then the sequence of operations used. u have to decide what data types are needed for this stack data structure.","Keep the top of the stack toward the end of the array, so the push and pop operations will add or remove elements from the right side of the array.",3.0,0,0.9562385082244873,0.5359422007578724,0.6440436244010925,0.5802218914031982
1397,How can you implement a stack with a list?,You can add an element to the end of the linked list and update a pointer called top each time you modify the list.,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",3.0,0,0.9594898223876953,0.6793662204867578,0.7632058262825012,0.5577943325042725
1398,How can you implement a stack with a list?,You implement a list in which the head pointer points to the element most recently pushed onto the list and the pop function changes the head pointer to point to the next to last element in the list and removes the element head pointer previously pointed to.,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",5.0,1,0.9611830115318298,0.5954913341754138,0.7607311606407166,0.5448621511459351
1399,How can you implement a stack with a list?,This is the implementation of the stack using single linked list. The operations performed on a stack are 1push : This is the function which is for insertionpushingof an element into stack It is similar to the insertion of an element at the end of a single linked list see the function insert end in the program for operations of single linked list 2pop : This is the function which is for deletionpopping upof an element from the stack It is similar to the deletion of an element at the end of a single linked list see the function delete end in the program for operations of single linked list 3stack display : This is the function which is for displaying the elements of a stack,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",4.0,1,0.9475736618041992,0.6155870112510924,0.7125276327133179,0.328889936208725
1400,How can you implement a stack with a list?,Using nodes to keep track of the head of the stack. Then using Push and Pop to create the stack as needed.,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",4.0,1,0.9591304063796997,0.6454972243679029,0.8068479299545288,0.40482550859451294
1401,How can you implement a stack with a list?,"Use the head as the top of the stack, only modify the head when you push or pop ... push would add a new item to the head, pop would remove the item from the head.","Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",4.5,1,0.9676281809806824,0.7701540462154054,0.7800900340080261,0.5962342619895935
1402,How can you implement a stack with a list?,you implement a stack with a list by changing the pointer to the first element of the list to the new item and move the pointer from the top of the stack to the next item when removing an item.,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",4.5,1,0.9561718106269836,0.5262348115842177,0.779370903968811,0.6042428612709045
1403,How can you implement a stack with a list?,You dynamicly create space as the stack grows. The stack can be as long as you need.,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",2.5,0,0.9046705365180969,0.632455532033676,0.5301440358161926,0.452658087015152
1404,How can you implement a stack with a list?,"Declare a pointer that points to the head of the linked list, only add and remove nodes from the beginning of the list.","Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",5.0,1,0.9726067185401917,0.8320502943378438,0.8279992938041687,0.5713306665420532
1405,How can you implement a stack with a list?,Creating a linked list. Add an element to the top of the stack when pushing and deleting an element when popping.,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",4.0,1,0.9498510360717773,0.5455447255899811,0.8389599323272705,0.26801633834838867
1406,How can you implement a stack with a list?,"A singly-linked list is already a lot like a stack, it just depends on the way you address moving the head.","Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",3.5,0,0.9273736476898193,0.5455447255899811,0.6539793610572815,0.5072919726371765
1407,How can you implement a stack with a list?,"make a list, make the bottom the head, add on the end and make the end top","Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",3.5,0,0.9554702639579773,0.4082482904638631,0.7560812830924988,0.4658219814300537
1408,How can you implement a stack with a list?,use the add function with a list as the beginning of the stack and remove for pop,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",4.5,1,0.9654662609100342,0.8249579113843055,0.8059765696525574,0.6501474380493164
1409,How can you implement a stack with a list?,Use head as the top and push and pop nodes from the head.,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",4.5,1,0.9435434937477112,0.8164965809277261,0.7224060297012329,0.5492380857467651
1410,How can you implement a stack with a list?,create a node based list that points to the next list item down.,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",1.5,0,0.91168612241745,0.6666666666666666,0.6971726417541504,0.4106695055961609
1411,How can you implement a stack with a list?,"have the head of the list be the last item added, and a push just adds a new head.","Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",4.5,1,0.9523344039916992,0.6154574548966638,0.663006603717804,0.44050344824790955
1412,How can you implement a stack with a list?,"Create a new list. Pop elements in the stack as needed. Push the stack to remove items, unless the stack is empty. The top item is at the head of the list. The last item is at the end.","Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",4.5,1,0.9673722386360168,0.7171371656006362,0.7922689914703369,0.4369439482688904
1413,How can you implement a stack with a list?,adding the element to the end of the list so that it links to the element before it. when popping the element it takes the last element in the list and sets the previous one as the end of the list.,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",3.5,0,0.9728481769561768,0.5070925528371101,0.727349579334259,0.3601818382740021
1414,How can you implement a stack with a list?,"You can implement a stack using arrays or and linked list. By the use of pointers, that point elementnodeto the next element in the stack. By the use of pointers, the stack becomes a linked list.","Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",2.5,0,0.9494490027427673,0.65991201759609,0.7079574465751648,0.32316112518310547
1415,How can you implement a stack with a list?,Elements are only inserted and removed from the head of the list. There is no header node or current pointer.,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",4.5,1,0.9323310852050781,0.5443310539518174,0.3556877374649048,0.470466285943985
1416,How can you implement a stack with a list?,use a linked list and keep track of a pointer that points to the first item,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",4.0,1,0.932751476764679,0.5070925528371101,0.7447412014007568,0.47110670804977417
1417,How can you implement a stack with a list?,"A singly linked list can already be easily used for LIFO data storage. Members of a stack can simply be pushed and popped from a list, the first item in will be the last out.","Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",4.5,1,0.9382151961326599,0.5940885257860047,0.6955996155738831,0.32109132409095764
1418,How can you implement a stack with a list?,using pointer,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",1.5,0,0.5303903222084045,0.0,0.4317890405654907,0.13475121557712555
1419,How can you implement a stack with a list?,the top is the first pointer.,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",3.0,0,0.8971878290176392,0.0,0.5009312629699707,0.32743996381759644
1420,How can you implement a stack with a list?,Keep a pointer pointing to the last element entered at the front of the array and move the pointer back when you delete an element.,"Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",2.5,0,0.9454551339149475,0.2886751345948129,0.7583520412445068,0.4521048069000244
1421,How can you implement a stack with a list?,"using linked list, you are pushing the node that contains each int to the stack until you get to the end of your linked list","Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",2.5,0,0.9526407718658447,0.7378647873726221,0.7703362703323364,0.47497838735580444
1422,How can you implement a stack with a list?,"have a linked list, and for each push, add an item onto beginning of the list, and for each pop remove the first element in the list.","Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",5.0,1,0.9646119475364685,0.9203579866168446,0.8378966450691223,0.7102435231208801
1423,How can you implement a stack with a list?,"Using a linked list is one way to implement a stack so that it can handle essentially any number of elements. It is usually convenient to put a data structure in its own module, thus, you will want to create files stack. h and a stack. c","Keep the top of the stack pointing to the head of the linked list, so the push and pop operations will add or remove elements at the beginning of the list.",2.0,0,0.9226091504096985,0.518874521662771,0.6728470325469971,0.4543018639087677
1424,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred, and why?","List based is preferred because it is not constrained to a fix size. The down fall is that it takes up more memory because each node has at least two parts, the item and the pointer.","Link-based, because they are dynamicno size constraints",5.0,1,0.8665614724159241,0.3922322702763682,0.6648579835891724,0.47276103496551514
1425,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred, and why?",List based is preferred because the stack you create is not limited in size and can increase or decrease in size as needed.,"Link-based, because they are dynamicno size constraints",5.0,1,0.8936832547187805,0.5883484054145522,0.5498818159103394,0.48121434450149536
1426,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred, and why?","Array-based prevents the push operation from adding an item to the stack if the stack 's size limit, which is the size of the array, has been reached. List-base much simpler to write and does not have a fixed size.","Link-based, because they are dynamicno size constraints",5.0,1,0.8794713616371155,0.5080005080007621,0.5714516043663025,0.21942409873008728
1427,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred, and why?","Array based because they are faster, easier to keep track of and less complexity in code.","Link-based, because they are dynamicno size constraints",2.5,0,0.8916361927986145,0.3779644730092273,0.5055359601974487,0.32642099261283875
1428,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred, and why?",list-based because it does not use a fixed size like an array would.,"Link-based, because they are dynamicno size constraints",5.0,1,0.8977581858634949,0.5000000000000001,0.6394776701927185,0.37118837237358093
1429,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred, and why?",usually linked list because it does not have a fixed size. But if you know or want to set a max size array is better.,"Link-based, because they are dynamicno size constraints",5.0,1,0.8849842548370361,0.5163977794943223,0.6709842681884766,0.5966435670852661
1430,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred, and why?",List-based. Allows more flexablity with size of the stack.,"Link-based, because they are dynamicno size constraints",5.0,1,0.8569185733795166,0.5773502691896258,0.6163035035133362,0.17372174561023712
1431,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred, and why?",Linked lists are preferred for implementing stacks because they are not limited to a set number of elements.,"Link-based, because they are dynamicno size constraints",5.0,1,0.8896490931510925,0.0,0.596233606338501,0.5519372224807739
1432,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred, and why?",The list-based implementation is preferred since the big O1is very efficient.,"Link-based, because they are dynamicno size constraints",3.0,0,0.8543667197227478,0.3779644730092273,0.5833250880241394,0.397843599319458
1433,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred, and why?","Linked list implementation is preferred. That way, the list can be moved along without iteration.","Link-based, because they are dynamicno size constraints",3.0,0,0.8651920557022095,0.0,0.6062115430831909,0.34895360469818115
1434,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred, and why?",list because it its size is not determined,"Link-based, because they are dynamicno size constraints",5.0,1,0.8653969168663025,0.5773502691896258,0.41284167766571045,0.36158227920532227
1435,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred, and why?",Linked list because it takes up less memory and is scalable,"Link-based, because they are dynamicno size constraints",3.0,0,0.8308616280555725,0.0,0.6155363917350769,0.476809024810791
1436,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred, and why?","List-based, as the list can be grown dynamically, and as the head node is easily accessible.","Link-based, because they are dynamicno size constraints",5.0,1,0.8700791597366333,0.30151134457776363,0.5861552953720093,0.5076417922973633
1437,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred, and why?",list based because the nodes are easier to work with and can be traversed easier,"Link-based, because they are dynamicno size constraints",3.0,0,0.8661802411079407,0.3333333333333333,0.5218132138252258,0.4599725008010864
1438,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred, and why?","list based, because of the lower processing overhead and nearly unlimited space, due to linked list design.","Link-based, because they are dynamicno size constraints",5.0,1,0.8752530217170715,0.2773500981126146,0.6678186058998108,0.55940842628479
1439,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred, and why?","list-based It can grow and shrink dynamically, unlike the fixed size array.","Link-based, because they are dynamicno size constraints",5.0,1,0.9019168615341187,0.4714045207910317,0.5916248559951782,0.49577516317367554
1440,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred, and why?","list based because arrays can become full, lists can grow or shrink as needed","Link-based, because they are dynamicno size constraints",5.0,1,0.8799049854278564,0.3779644730092273,0.5354435443878174,0.43110477924346924
1441,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred, and why?",List-bases implentation is preferred. One of the main reasons is because of that the list has no fixed size.,"Link-based, because they are dynamicno size constraints",5.0,1,0.8642171025276184,0.30151134457776363,0.6387059092521667,0.2546788454055786
1442,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred, and why?",Array is preferred. Linked list implementation requires extra space to store pointers. Space is allocated dynamically in the list-based which takes more time.,"Link-based, because they are dynamicno size constraints",2.5,0,0.8601799607276917,0.21821789023599233,0.7115374803543091,0.1609252542257309
1443,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred, and why?",link list is preferred because it makes pushing elements easier because there is no limit other than memory to the number of elements,"Link-based, because they are dynamicno size constraints",5.0,1,0.8730068206787109,0.2773500981126146,0.5600228905677795,0.5995683670043945
1444,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred, and why?","List-based implementation is much easier to implement, and allows the stack to scale as necessary. It is therefore the preferred implementation.","Link-based, because they are dynamicno size constraints",5.0,1,0.8678621649742126,0.27735009811261463,0.5592864751815796,0.4675704538822174
1445,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred, and why?",Array based implementation requires less memory than a list based. inceasing the size of a resizeable array can waste storage and time,"Link-based, because they are dynamicno size constraints",3.5,0,0.8427415490150452,0.5,0.6023585796356201,0.1638244390487671
1446,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred, and why?","in an array based stack you would need to pre-determine a size, where in a list you can increase or decrease the size however you want.","Link-based, because they are dynamicno size constraints",5.0,1,0.8834719061851501,0.5669467095138411,0.5447978377342224,0.2904319763183594
1447,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred, and why?",A list-based implementation is preferred because the list is more flexible than a array.,"Link-based, because they are dynamicno size constraints",5.0,1,0.8426998257637024,0.3333333333333333,0.6649038791656494,0.4039936363697052
1448,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred, and why?",i would think a list based would be better because you can change the pointers of the nodes to add or remove things from your stack,"Link-based, because they are dynamicno size constraints",4.0,1,0.8495408892631531,0.30151134457776363,0.521939754486084,0.41210445761680603
1449,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred, and why?","list based, because it is much more flexible, easier to use, and doesnt need to have a max size defined when it is made.","Link-based, because they are dynamicno size constraints",5.0,1,0.89364093542099,0.44721359549995804,0.4801695644855499,0.5001925826072693
1450,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred, and why?",array based list is preferred because it can hold any size as long as u specify it.,"Link-based, because they are dynamicno size constraints",1.0,0,0.8843919634819031,0.5000000000000001,0.5419235229492188,0.37091103196144104
1451,How are infix expressions evaluated by computers?,They are converted to post fix expressions. It still follow the order of precedence for the operators.,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",5.0,1,0.8949434161186218,0.3535533905932738,0.6867461204528809,0.7886385917663574
1452,How are infix expressions evaluated by computers?,They are first converted to postfix expressions and then evaluated.,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",5.0,1,0.9288211464881897,0.670820393249937,0.925948441028595,0.9254622459411621
1453,How are infix expressions evaluated by computers?,"Computers cannot evaulate infix expressions, it must first convert infix to postfix expression then it can evaluate.","First, they are converted into postfix form, followed by an evaluation of the postfix expression.",5.0,1,0.8678974509239197,0.40451991747794525,0.48187172412872314,0.6097253561019897
1454,How are infix expressions evaluated by computers?,By using parentheses to have order in the expression.,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",2.5,0,0.8795166015625,0.5,0.6507929563522339,0.490188866853714
1455,How are infix expressions evaluated by computers?,In postfix notation.,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",4.0,1,0.6928542852401733,0.7071067811865476,0.8197942972183228,0.7016022205352783
1456,How are infix expressions evaluated by computers?,computers usually convert infix expressions to post fix expression and evaluate them using a stack.,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",5.0,1,0.8651602864265442,0.30151134457776363,0.6013371348381042,0.7188186645507812
1457,How are infix expressions evaluated by computers?,they are converted to postfix,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",5.0,1,0.836007297039032,0.948683298050514,0.8554110527038574,0.8110466003417969
1458,How are infix expressions evaluated by computers?,Infix expressions are interpreted as postfix expressions by implementing stacks.,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",5.0,1,0.7964356541633606,0.3333333333333333,0.729326605796814,0.6397980451583862
1459,How are infix expressions evaluated by computers?,They are first converted into an equivalent postfix expression so it can be read by the computer.,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",5.0,1,0.9437932968139648,0.6666666666666669,0.7021979093551636,0.7132378816604614
1460,How are infix expressions evaluated by computers?,"The computer translates the infix expression to a postfix expression, then solves.","First, they are converted into postfix form, followed by an evaluation of the postfix expression.",5.0,1,0.8823373317718506,0.5962847939999439,0.7080492377281189,0.663031816482544
1461,How are infix expressions evaluated by computers?,in postfix format,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",4.0,1,0.6400249004364014,0.7071067811865476,0.786524772644043,0.7603244185447693
1462,How are infix expressions evaluated by computers?,they use parenthisis and a stack to determine which evaluations need to be made first,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",3.0,0,0.8803687691688538,0.0,0.7839322686195374,0.5269738435745239
1463,How are infix expressions evaluated by computers?,By throwing variables into a postfix expression and operands onto a parentheses regulated stack until end parentheses and enough variables to operate on are encountered.,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",4.5,1,0.8833527565002441,0.3253956867279843,0.6594603061676025,0.4070342779159546
1464,How are infix expressions evaluated by computers?,by being passed to the function by a leading term,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",1.5,0,0.8495601415634155,0.0,0.6022717952728271,0.4356835186481476
1465,How are infix expressions evaluated by computers?,"i have an hard time explaining this so i will show how infix is evaluated instead. Start with an infix expression, like,5 plus 2multiplied by 5plus400 divided by2 plus 3, and push items until you get a  and once that happens, perform the operations until you reach an  ... with that complete, you will now have 7 multiplied by 5plus400 divided by2 plus 3as now the expression that will be evaluated ... perform last step again ...35 plus400 divided by2 plus 3is now the stack ... repeat agian ...35 plus400 divided by 5 is now the stack after that ... repeat ...35 plus 80is now the stack, repeat again ... 115 is now the stack, and is returned.","First, they are converted into postfix form, followed by an evaluation of the postfix expression.",2.5,0,0.890907347202301,0.17609018126512474,0.5332543849945068,0.3739092946052551
1466,How are infix expressions evaluated by computers?,The infix expression is converted to postfix form,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",5.0,1,0.8705728650093079,0.8451542547285168,0.8897582292556763,0.7947270274162292
1467,How are infix expressions evaluated by computers?,by converting them to postfix expressions and putting the operations in a stack,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",5.0,1,0.8959168195724487,0.4082482904638631,0.7579323649406433,0.6876586675643921
1468,How are infix expressions evaluated by computers?,The computer converts the infix expression to postfix form. Then evaluates the postfix expression.,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",5.0,1,0.8955566883087158,0.7925939239012171,0.7969953417778015,0.7211099863052368
1469,How are infix expressions evaluated by computers?,infix expressions are converted to postfix expressions before they can be evaluated by a computer. Operands stay in the same order. Operators always follow the operands.,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",5.0,1,0.9110077023506165,0.3253956867279843,0.5950762629508972,0.7160480618476868
1470,How are infix expressions evaluated by computers?,infix expressions are pointers evaluated by reference to the memory location,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",1.5,0,0.8106142282485962,0.0,0.5710527896881104,0.43523257970809937
1471,How are infix expressions evaluated by computers?,computers convert infix expressions to postfix form before evaluation,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",5.0,1,0.818477988243103,0.6172133998483679,0.7383850812911987,0.7902768850326538
1472,How are infix expressions evaluated by computers?,convert infix expressions to postfix expression and evaluate the postfix expression,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",5.0,1,0.7817701101303101,0.7745966692414836,0.9196954369544983,0.8415976166725159
1473,How are infix expressions evaluated by computers?,"When an operand is entered, the computer Pushes it onto a stack When an operator is entered, the computer Applies it to the top two operands of the stack Pops the operands from the stack Pushes the result of the operation onto the stack","First, they are converted into postfix form, followed by an evaluation of the postfix expression.",4.0,1,0.8652088642120361,0.0,0.5324746966362,0.3769809305667877
1474,How are infix expressions evaluated by computers?,Computers convert an infix expression into a postfix expression. They then push the numbers onto a stack and pop them out as they are needed.,"First, they are converted into postfix form, followed by an evaluation of the postfix expression.",5.0,1,0.9205309152603149,0.49613893835683387,0.6058251857757568,0.7033520340919495
1475,How are infix expressions evaluated by computers?,"infix expressions are converted to postfix,i. e. 3 plus 2 is changed to 32 plus","First, they are converted into postfix form, followed by an evaluation of the postfix expression.",5.0,1,0.8508118391036987,0.4242640687119287,0.5741806030273438,0.7500385046005249
1476,How are infix expressions evaluated by computers?,"they are transformed into post-fix expressions, then evaluated with a stack.","First, they are converted into postfix form, followed by an evaluation of the postfix expression.",5.0,1,0.9105814099311829,0.0,0.8297113180160522,0.7944587469100952
1477,How are infix expressions evaluated by computers?,"Writing arithmetic expressions is called infix notation. This is because a binary operatorlike plusis written in between its two operandsas in a plus b. There are two alternative forms of notation used in certain situations. One is prefix notation, in which an operator is written before its operands. In prefix notation, the sum of a and b is written plus a b. This is the notation used to write function calls in mathematics and computer science. It is also used in the Lisp and Scheme programming languages. In postfix notation, an operator is written after its operands. The sum of a and b is written a b plus.You may have seen this as reverse Polish notation.Postfix notation forms the conceptual basis for the way that arithmetic expressions are evaluated by a computer. One important characteristic of both postfix and prefix notations is that they are unambiguous; no parentheses are needed to indicate the order of operations.","First, they are converted into postfix form, followed by an evaluation of the postfix expression.",5.0,1,0.9145497679710388,0.21879748724684178,0.5043227076530457,0.3993017375469208
1478,What operations would you need to perform to find a given element on a stack?,isEmptry or or determines if the stack is full or not pop or or to remove the top element if it is not the on you are looking for search or or you compare each element of the stack to the data you are looking for.,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",3.0,0,0.9315619468688965,0.655610068107186,0.5615181922912598,0.467138409614563
1479,What operations would you need to perform to find a given element on a stack?,You would have to keep using peek or getTop to see what the top element is then popping the top element until peek or getTop provides the element you are looking for.,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",3.0,0,0.9427509903907776,0.6546536707079772,0.603506326675415,0.4483695328235626
1480,What operations would you need to perform to find a given element on a stack?,Push adds a given node to the top of the stack leaving previous nodes below. Pop removes and returns the current top node of the stack.,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",3.0,0,0.922156572341919,0.5773502691896258,0.7150512933731079,0.3244045376777649
1481,What operations would you need to perform to find a given element on a stack?,"Using linked lists and stacks, you would need a temp stack to retain the values. Then you would use the Pop function to pop off each element and then compare it. If its not the element your looking for, Push it to the temp stack. Repeat until the element is found. When you find it, Pop off the temp stack back onto the regular stack to have a complete stack again.","Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",5.0,1,0.965969443321228,0.7849870641173373,0.8101067543029785,0.3932679295539856
1482,What operations would you need to perform to find a given element on a stack?,"Pop each item off the top until you find what you are looking for. If the stack ends up empty and you never found the item, then it does not exist in the stack. It may also be necessary to save the popped values in case you want to recreate the stack.","Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",5.0,1,0.9522013664245605,0.6260990336999411,0.62320876121521,0.41986462473869324
1483,What operations would you need to perform to find a given element on a stack?,"if the stack is implemented using an array you could simply search the array for the item. If the stack is implemented using a linked list you would have to pop the values off of the stack until either the value is found or the stack is empty, you would then have to have the items put back into the list.","Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",4.5,1,0.9581104516983032,0.6363961030678928,0.7446397542953491,0.4876076579093933
1484,What operations would you need to perform to find a given element on a stack?,"You need to pop each item on the stack and compare the item. Once the item is found, no more items need to be removed.","Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",3.5,0,0.9365527629852295,0.316227766016838,0.651626467704773,0.43858349323272705
1485,What operations would you need to perform to find a given element on a stack?,"Pop an element from one stack, check to see if it is the desired element, if not push it onto another stack. When finished, pop the items from the second stack and push them back onto the first stackthis will ensure the order of the elements is maintained.","Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",5.0,1,0.9792934060096741,0.7581425055034354,0.7129769325256348,0.5877119302749634
1486,What operations would you need to perform to find a given element on a stack?,Basically pop the stack until you find the given element.,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",3.5,0,0.9604610800743103,0.7302967433402217,0.7429467439651489,0.5933388471603394
1487,What operations would you need to perform to find a given element on a stack?,"Iterate through the stack, checking the number against the current element.","Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",1.5,0,0.9301449060440063,0.5477225575051663,0.47467994689941406,0.34809285402297974
1488,What operations would you need to perform to find a given element on a stack?,pop and push,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",3.0,0,0.7707962989807129,1.0000000000000002,0.3837480843067169,0.20876529812812805
1489,What operations would you need to perform to find a given element on a stack?,pop all elements off stack until you find that element and then push the popped elements back on the stack,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",5.0,1,0.9791099429130554,0.9574271077563381,0.9394018650054932,0.7106268405914307
1490,What operations would you need to perform to find a given element on a stack?,"Keep popping nodes and storing them in an alternate stack until the given element is found, then pop the given element and push the previously popped nodes back onto the stack.","Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",5.0,1,0.9653691649436951,0.6304883249912807,0.8286508321762085,0.8189829587936401
1491,What operations would you need to perform to find a given element on a stack?,either traverse the entire list and pop the given part or create a pointer system that automatically points to it.,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",3.0,0,0.9380010962486267,0.3333333333333333,0.7271474599838257,0.4180818796157837
1492,What operations would you need to perform to find a given element on a stack?,"Depends on the type of stack, on a true stack you will haft to pop all of the elements of the stack until you find the element you want, and then after that you will need to push all the elements that where removed back in to the stack in the order that they where removed. With a Java style stack, where there is a peek function, it will return the element you wanted instead of requiring you to perform all the excessive actions that are required from a true stack.","Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",5.0,1,0.967048168182373,0.7106690545187019,0.7977889776229858,0.6829379796981812
1493,What operations would you need to perform to find a given element on a stack?,if top item! equals given element pop the stack. Repeat until item is found or stack is empty,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",3.5,0,0.913023054599762,0.6793662204867574,0.6515321731567383,0.11808700859546661
1494,What operations would you need to perform to find a given element on a stack?,could traverse through the list or array to find the element.,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",2.0,0,0.9261187314987183,0.5,0.47751012444496155,0.4640614986419678
1495,What operations would you need to perform to find a given element on a stack?,you need the pop opertation to go throught the stack and find the element.,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",3.5,0,0.9502062201499939,0.6666666666666669,0.6736490726470947,0.5399371385574341
1496,What operations would you need to perform to find a given element on a stack?,"createStack, push, isEmpty, pop, and a boolean return value.","Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",3.0,0,0.7833157777786255,0.5345224838248489,0.473846435546875,0.4772467613220215
1497,What operations would you need to perform to find a given element on a stack?,you would have to traverse the stack popping each element to search it,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",3.5,0,0.9245437383651733,0.6000000000000001,0.7312198281288147,0.4508017301559448
1498,What operations would you need to perform to find a given element on a stack?,Pop each element off the stackand into another stack for storageuntil the desired element is found.,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",4.0,1,0.9538295865058899,0.6804138174397717,0.8389416933059692,0.8749096989631653
1499,What operations would you need to perform to find a given element on a stack?,pop operation,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",2.5,0,0.6272822618484497,0.7071067811865476,0.3580854535102844,0.18588347733020782
1500,What operations would you need to perform to find a given element on a stack?,to pop elements then push them back,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",4.5,1,0.9035875797271729,0.9428090415820636,0.5753493309020996,0.568243145942688
1501,What operations would you need to perform to find a given element on a stack?,A function to keep track of the elements popped and a function to put the popped elements backinto the function.,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",4.5,1,0.9323152303695679,0.4588314677411236,0.5447158217430115,0.48135513067245483
1502,What operations would you need to perform to find a given element on a stack?,you would pop each element and compare it to what you are looking for and then push it back on the stack so that it is not lost,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",4.5,1,0.9434846639633179,0.7142857142857146,0.7086023688316345,0.8136826753616333
1503,What operations would you need to perform to find a given element on a stack?,you would need to perform a search through the list of elementsi dont really understand what this question is asking ... its not very clear?,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",1.5,0,0.8691198825836182,0.0,0.2851952612400055,0.36427587270736694
1504,What operations would you need to perform to find a given element on a stack?,StackPush StackPop StackIsEmpty,"Pop all the elements and store them on another stack until the element is found, then push back all the elements on the original stack.",3.0,0,0.0,0.0,0.4314495325088501,0.4251862168312073
1505,What is a queue?,A data structure in c plus plus which is a collection of data that is kept in order. First in first out.,"A data structure that can store elements, which has the property that the last item added will be the last to be removedor first-in-first-out.",5.0,1,0.9376518726348877,0.6123724356957946,0.5686216950416565,0.3882274925708771
1506,What is a queue?,a queue is a list of objects in a particular order that is read one at a time starting at the first followed by the second and so on.,"A data structure that can store elements, which has the property that the last item added will be the last to be removedor first-in-first-out.",4.0,1,0.941667914390564,0.0,0.504569411277771,0.32033199071884155
1507,What is a queue?,A queue is an abstract data structure in which operations are performed at both ends giving the queue first in first out behavior.,"A data structure that can store elements, which has the property that the last item added will be the last to be removedor first-in-first-out.",5.0,1,0.9292833209037781,0.4082482904638631,0.5837047100067139,0.37887588143348694
1508,What is a queue?,"A queue stores a set of elements in a particular order. Its principle of operation is FIFOfirst in first out, which means the first element inserted is the first one to be removed.","A data structure that can store elements, which has the property that the last item added will be the last to be removedor first-in-first-out.",5.0,1,0.952392041683197,0.27735009811261463,0.7654911279678345,0.38863009214401245
1509,What is a queue?,An ADT whose first inserted item is the first item removed. This uses the FIFO idea where items enter a queue at its back and leave at its front.,"A data structure that can store elements, which has the property that the last item added will be the last to be removedor first-in-first-out.",5.0,1,0.9418230056762695,0.5345224838248488,0.7771936655044556,0.5041251182556152
1510,What is a queue?,"Last in, last out architecture. It works the same way a line at the bank would work, the person that is been waiting the longest gets served first.","A data structure that can store elements, which has the property that the last item added will be the last to be removedor first-in-first-out.",5.0,1,0.9422371983528137,0.0,0.6069588661193848,0.6034753322601318
1511,What is a queue?,a queue is a data structure that stores elements in a First in First out order.,"A data structure that can store elements, which has the property that the last item added will be the last to be removedor first-in-first-out.",5.0,1,0.9380217790603638,0.7071067811865477,0.6176794767379761,0.3773511052131653
1512,What is a queue?,A waiting list of items that operation in a FIFOfirst in first outorder.,"A data structure that can store elements, which has the property that the last item added will be the last to be removedor first-in-first-out.",5.0,1,0.9259217381477356,0.0,0.6017332077026367,0.16748903691768646
1513,What is a queue?,"A queue is similar to an array, except that the data can only be accessed sequentially rather than at random. Unlike a stack, a queue follows FIFO. First in, First out.","A data structure that can store elements, which has the property that the last item added will be the last to be removedor first-in-first-out.",5.0,1,0.9291797280311584,0.2672612419124244,0.5658334493637085,0.39258813858032227
1514,What is a queue?,is a particular kind of collection in which the entities in the collection are kept in order and the principalor onlyoperations on the collection are the addition of entities to the rear terminal position and removal of entities from the front terminal position. First in First OutFIFO Method.,"A data structure that can store elements, which has the property that the last item added will be the last to be removedor first-in-first-out.",5.0,1,0.9278913140296936,0.0,0.6882274150848389,0.6082974076271057
1515,What is a queue?,Like a linked list but first in first out,"A data structure that can store elements, which has the property that the last item added will be the last to be removedor first-in-first-out.",4.5,1,0.9101358652114868,0.0,0.5708408355712891,0.3102237284183502
1516,What is a queue?,A queue is a FIFO data structure.,"A data structure that can store elements, which has the property that the last item added will be the last to be removedor first-in-first-out.",5.0,1,0.7909969687461853,0.7071067811865476,0.48618876934051514,0.20502209663391113
1517,What is a queue?,A queue is a first in first out data structure.,"A data structure that can store elements, which has the property that the last item added will be the last to be removedor first-in-first-out.",5.0,1,0.9142347574234009,0.8164965809277261,0.5942303538322449,0.21140998601913452
1518,What is a queue?,"Its like a stack, but uses the linked list to stack a little differently. It is FIFO so the first thing enqueued is the first thing dequeued","A data structure that can store elements, which has the property that the last item added will be the last to be removedor first-in-first-out.",5.0,1,0.9244163632392883,0.0,0.5891915559768677,0.29868823289871216
1519,What is a queue?,"A first in, first out Abstract Data type that can be used to store values.","A data structure that can store elements, which has the property that the last item added will be the last to be removedor first-in-first-out.",5.0,1,0.943016529083252,0.5773502691896258,0.6225311756134033,0.3378966450691223
1520,What is a queue?,"Stores a set of elements in a particular order with a First In, First Out principle","A data structure that can store elements, which has the property that the last item added will be the last to be removedor first-in-first-out.",5.0,1,0.9261040687561035,0.4082482904638631,0.5734145641326904,0.45342984795570374
1521,What is a queue?,object that stores elements in order that follows first in first out. the first element added is the first one to come off.,"A data structure that can store elements, which has the property that the last item added will be the last to be removedor first-in-first-out.",5.0,1,0.9626255631446838,0.5000000000000001,0.7101478576660156,0.574535071849823
1522,What is a queue?,"A quese is an list that stores a set of elements in a particular order. It has Stack principle, but in this case, its First In, First Out. The first element inserted is the first element to be removed.","A data structure that can store elements, which has the property that the last item added will be the last to be removedor first-in-first-out.",5.0,1,0.9622520804405212,0.25,0.7393193244934082,0.23490583896636963
1523,What is a queue?,"a finite ordered list with zero or more elements, based upon First In First Out","A data structure that can store elements, which has the property that the last item added will be the last to be removedor first-in-first-out.",5.0,1,0.9154627323150635,0.4082482904638631,0.7224066257476807,0.3875442147254944
1524,What is a queue?,a data structure that performs operations in the order of first in first out FIFO,"A data structure that can store elements, which has the property that the last item added will be the last to be removedor first-in-first-out.",5.0,1,0.9140961170196533,0.5773502691896258,0.644031822681427,0.27239978313446045
1525,What is a queue?,"A Queue is a first in first out data structure, such that the first element added is also the first removed.","A data structure that can store elements, which has the property that the last item added will be the last to be removedor first-in-first-out.",5.0,1,0.9551643133163452,0.7071067811865477,0.7233474254608154,0.5342484712600708
1526,What is a queue?,"Queue is a buffer, which store element in a particular order","A data structure that can store elements, which has the property that the last item added will be the last to be removedor first-in-first-out.",3.5,0,0.8847636580467224,0.4082482904638631,0.5966004133224487,0.33769866824150085
1527,What is a queue?,"stores a set of elements where the first element in, is the first element to be removed","A data structure that can store elements, which has the property that the last item added will be the last to be removedor first-in-first-out.",5.0,1,0.9455819129943848,0.3535533905932738,0.8456109166145325,0.5227950811386108
1528,What is a queue?,A data structure that removes nodes from the head and adds nodes at the tail.,"A data structure that can store elements, which has the property that the last item added will be the last to be removedor first-in-first-out.",5.0,1,0.8565579652786255,0.447213595499958,0.664609432220459,0.5437875390052795
1529,What is a queue?,a queue is a list of things that follows the first in first out behavior,"A data structure that can store elements, which has the property that the last item added will be the last to be removedor first-in-first-out.",5.0,1,0.9262140989303589,0.0,0.6294006109237671,0.2474488466978073
1530,What is a queue?,"a queue is a storage container that holds its objects in a first in, first out priority","A data structure that can store elements, which has the property that the last item added will be the last to be removedor first-in-first-out.",5.0,1,0.9122198224067688,0.0,0.5870767831802368,0.38917985558509827
1531,What is a queue?,"The queue is another data structure. A physical analogy for a queue is a line at a bank. When you go to the bank, customers go to the rearendof the line and customers come off of the linei. e., are servicedfrom the front of the line.","A data structure that can store elements, which has the property that the last item added will be the last to be removedor first-in-first-out.",5.0,1,0.938072144985199,0.26261286571944514,0.42399877309799194,0.3247172236442566
1532,What are the two main functions defined by a queue?,enqueue which adds data to the queue and dequeue which deletes data from the queue,enqueue and dequeue,5.0,1,0.8441582918167114,0.4082482904638631,0.4906885027885437,0.7623908519744873
1533,What are the two main functions defined by a queue?,"enqueue, which inserts a specified element at the head of the specified queue, and dequeue, which removes the specified element from the queue.",enqueue and dequeue,5.0,1,0.715913712978363,0.30151134457776363,0.576228141784668,0.7535784244537354
1534,What are the two main functions defined by a queue?,The two main functions are enqueue which inserts an item at the back of the queue and dequeue which removes an item from the front of the queue.,enqueue and dequeue,5.0,1,0.6941730380058289,0.37796447300922725,0.4376412034034729,0.6949211359024048
1535,What are the two main functions defined by a queue?,The two main functions are enqueue and dequeue.,enqueue and dequeue,5.0,1,0.7882727384567261,0.7071067811865476,0.8169975876808167,0.6857466697692871
1536,What are the two main functions defined by a queue?,Enqueue and Dequeue,enqueue and dequeue,5.0,1,1.0000003576278687,1.0000000000000002,1.0,0.9999999403953552
1537,What are the two main functions defined by a queue?,Enqueue and Dequeue,enqueue and dequeue,5.0,1,1.0000003576278687,1.0000000000000002,1.0,0.9999999403953552
1538,What are the two main functions defined by a queue?,enqueue insert into queue dequeue remove element,enqueue and dequeue,5.0,1,0.8689728379249573,0.5773502691896258,0.589719831943512,0.7922484874725342
1539,What are the two main functions defined by a queue?,"Remove the item added first, add items to the back.",enqueue and dequeue,5.0,1,0.48080095648765564,0.0,0.47270649671554565,0.5094200372695923
1540,What are the two main functions defined by a queue?,The two main functions of a queue are enqueue and dequeue.,enqueue and dequeue,5.0,1,0.8196080327033997,0.632455532033676,0.6562086343765259,0.6737087965011597
1541,What are the two main functions defined by a queue?,enqueue and dequeue.,enqueue and dequeue,5.0,1,0.9574609994888306,1.0000000000000002,0.9923480749130249,0.977529764175415
1542,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue and dequeue,5.0,1,1.0000003576278687,1.0000000000000002,1.0,0.9999999403953552
1543,What are the two main functions defined by a queue?,Enqueue and Dequeue,enqueue and dequeue,5.0,1,1.0000003576278687,1.0000000000000002,1.0,0.9999999403953552
1544,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue and dequeue,5.0,1,1.0000003576278687,1.0000000000000002,1.0,0.9999999403953552
1545,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue and dequeue,5.0,1,1.0000003576278687,1.0000000000000002,1.0,0.9999999403953552
1546,What are the two main functions defined by a queue?,"enqueData, Deque",enqueue and dequeue,5.0,1,0.256719172000885,0.0,0.9053404331207275,0.4641638994216919
1547,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue and dequeue,5.0,1,1.0000003576278687,1.0000000000000002,1.0,0.9999999403953552
1548,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue and dequeue,5.0,1,1.0000003576278687,1.0000000000000002,1.0,0.9999999403953552
1549,What are the two main functions defined by a queue?,"The two functions are, Enqueue and Dequeue",enqueue and dequeue,5.0,1,0.8130844235420227,0.8164965809277261,0.8926688432693481,0.7279769778251648
1550,What are the two main functions defined by a queue?,"enqueue, dequeue",enqueue and dequeue,5.0,1,0.9415521621704102,1.0000000000000002,0.9783254861831665,0.8956944346427917
1551,What are the two main functions defined by a queue?,"enqueue, that adds an item to the queue dequeue, that takes the first item out of the queue",enqueue and dequeue,5.0,1,0.7542254328727722,0.4082482904638631,0.47476527094841003,0.6445798873901367
1552,What are the two main functions defined by a queue?,"Enqueue and dequeue, which add and remove elements from the queue",enqueue and dequeue,5.0,1,0.8239016532897949,0.5773502691896258,0.5192519426345825,0.8565268516540527
1553,What are the two main functions defined by a queue?,Enqueue and Dequeue,enqueue and dequeue,5.0,1,1.0000003576278687,1.0000000000000002,1.0,0.9999999403953552
1554,What are the two main functions defined by a queue?,dequeue and enqueue,enqueue and dequeue,5.0,1,1.0000003576278687,1.0000000000000002,0.9961099028587341,0.9066682457923889
1555,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue and dequeue,5.0,1,1.0000003576278687,1.0000000000000002,1.0,0.9999999403953552
1556,What are the two main functions defined by a queue?,enqueue and dequeue,enqueue and dequeue,5.0,1,1.0000003576278687,1.0000000000000002,1.0,0.9999999403953552
1557,What are the two main functions defined by a queue?,enqueue dequeue,enqueue and dequeue,5.0,1,0.9500972032546997,1.0000000000000002,0.9559061527252197,0.8676482439041138
1558,What are the two main functions defined by a queue?,rear and front,enqueue and dequeue,2.5,0,0.3199116289615631,0.0,0.6669641733169556,0.3083685040473938
1559,How can you implement a queue with an array?,Make use of a front pointer and a tail pointer. When the tail pointer reaches the end of an array it gets reset to the front of the array. If the two pointers are equal then the queue is either full or just has one element.,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",4.5,1,0.9538949728012085,0.668153104781061,0.6934051513671875,0.13779513537883759
1560,How can you implement a queue with an array?,you create an array with the max size of your queue and adjust the items to make them follow FIFO procedure.,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",3.0,0,0.9056205153465271,0.40451991747794525,0.607149600982666,0.21011261641979218
1561,How can you implement a queue with an array?,By implementing an array and only adding items to the end of the array and only removing items from the beginning of the array.,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",3.0,0,0.929304301738739,0.7698003589195012,0.6957515478134155,0.1355351358652115
1562,How can you implement a queue with an array?,"For applications in which a fixed-sized queue does not present a problem, you can use an array to represent a queue.","Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",2.5,0,0.8921214938163757,0.5661385170722981,0.5863209962844849,0.19802623987197876
1563,How can you implement a queue with an array?,Keep track of the front and the back of the array as you increase and decrease the elements inside the array.,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",4.0,1,0.9642159938812256,0.6666666666666666,0.590420663356781,0.18329277634620667
1564,How can you implement a queue with an array?,"Declare the size of an array, and have special conditional statementspointersto make sure you re-use ALL of the array. Say, you have an array of 20 elements, you load up 18, then dequeue 3, when you enqueue 4 more elements, you want to loop back to index 0 and continue from there ... this process saves resources.","Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",4.5,1,0.9092530012130737,0.5368754921931593,0.523303747177124,0.42007356882095337
1565,How can you implement a queue with an array?,you could use the first element of the list as the remove point and insert at the end f you do this you would have to shift the elements down each time you remove an item unless you make the array circular.,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",4.0,1,0.9307064414024353,0.445435403187374,0.6697971820831299,0.49804064631462097
1566,How can you implement a queue with an array?,Utilizing indexes for the front and the back. Front is 0 and as you add items the back index is incremented.,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",4.0,1,0.9278526306152344,0.0,0.5824320316314697,0.1842111349105835
1567,How can you implement a queue with an array?,"Declare two variables, front and rear, to be used to denote which elements in the array can be accessed. Increment rear whenever data is enqueued to the end and increment front whenever data is dequeued.","Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",4.5,1,0.9280744791030884,0.4974683381630911,0.6540607213973999,0.21015898883342743
1568,How can you implement a queue with an array?,It is an array of fixed size. A queue of maximum N elements.,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",2.5,0,0.88068026304245,0.5477225575051663,0.5088784098625183,0.27909407019615173
1569,How can you implement a queue with an array?,"make an array of a size, and add on to the front and delete from the back, keep track of the two so that you know when it is full and where to add or subtract from","Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",4.0,1,0.937587320804596,0.30151134457776363,0.6525119543075562,0.11331415176391602
1570,How can you implement a queue with an array?,By using the beginning of the array as the removal point of the queueor beginning of the queueand the ith element as the end of the queue.,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",3.5,0,0.9329028129577637,0.6060915267313265,0.6937583684921265,0.12371441721916199
1571,How can you implement a queue with an array?,"add in data from the first element to the last, take out data from the first element to the last.","Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",3.0,0,0.9153507947921753,0.0,0.5898467302322388,0.12266457080841064
1572,How can you implement a queue with an array?,you can take the array and put it in a queue stack or you can just traverse the list and keep track of top and bottom,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",3.5,0,0.9241198301315308,0.5070925528371101,0.6347215175628662,0.2357672154903412
1573,How can you implement a queue with an array?,"create a fixed array size, with with 2 integers to point to the beginning and the end of the que, and special cases to know when the que is empty or full.","Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",4.0,1,0.9368095397949219,0.421637021355784,0.6177510023117065,0.2063140571117401
1574,How can you implement a queue with an array?,Keep track of the front and rear indexes. Either: 1Dequeue items by shifting the array left 2Use wrapped configuration,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",4.0,1,0.9417373538017273,0.4264014327112209,0.6829593181610107,0.19505612552165985
1575,How can you implement a queue with an array?,"add items into a fixed size array, pull the items out by calling on them with the starting index, increase starting index so when it calls again its now the next index element in the array.","Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",3.5,0,0.9273319244384766,0.3713906763541038,0.5734943151473999,0.21686871349811554
1576,How can you implement a queue with an array?,"To use and array to implement a Queue, element or item 0, should be the top element in the array. Every time an element is inserted, all the items in the array are pushed back one space. The top element is always removed first.","Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",3.0,0,0.9357534050941467,0.5520524474738835,0.5341041088104248,0.29857006669044495
1577,How can you implement a queue with an array?,fixed size array with max N elements. Need to keep track of front and rear of array.,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",4.0,1,0.9123715162277222,0.6396021490668313,0.6915314197540283,0.2992834448814392
1578,How can you implement a queue with an array?,"by keeping track of a front item and a rear item, or with a circular array that uses the modulo function","Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",5.0,1,0.9235442876815796,0.4811252243246881,0.6909733414649963,0.47944703698158264
1579,How can you implement a queue with an array?,"Using an array for a queue, the size of the array allocated limits the size of the queue. An array based queue class must keep track of both the front and back of the queue, which may need to wrap around the array.","Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",5.0,1,0.9532800316810608,0.800094691365663,0.5734956860542297,0.2889725863933563
1580,How can you implement a queue with an array?,"A pointer based implementation of a queue could use a linear linked list with two external pointers, one to the front and one to the back","Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",2.0,0,0.9318944215774536,0.5477225575051663,0.6098859310150146,0.15070626139640808
1581,How can you implement a queue with an array?,remove the element then shift the elements one space back,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",3.0,0,0.906199038028717,0.0,0.6148640513420105,0.2694982886314392
1582,How can you implement a queue with an array?,By having the head pointer point to the first or least current data entered and having the tail point to the most current data entered. A method must be created so that the tail pointer does not leave the array.,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",5.0,1,0.9318066835403442,0.3067859955389482,0.6571228504180908,0.07581419497728348
1583,How can you implement a queue with an array?,an array is a type of queue with a fixed length,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",1.5,0,0.8529294729232788,0.6000000000000001,0.581844687461853,0.30924129486083984
1584,How can you implement a queue with an array?,"your storage class has an array, and you keep track of the index of the first and last item in the array, and wrap around when end of the array is full","Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",5.0,1,0.9489974975585938,0.8164965809277261,0.5586514472961426,0.2588823139667511
1585,How can you implement a queue with an array?,Boolean isFullQqueue:: equals rear equals equals MAX QUEUE SIZE-1,"Use a circular array. Keep the rear of the queue toward the end of the array, and the front toward the beginning, and allow the rear pointer to wrap around.",5.0,1,0.49831756949424744,0.34641016151377546,0.4798201620578766,0.19562742114067078
1586,How can you implement a queue with a list?,A list can have unlimited elements in it. You can push a node onto the end of the list and pop the one in the front.,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",5.0,1,0.9509555101394653,0.6902684899626335,0.5357764959335327,0.19787698984146118
1587,How can you implement a queue with a list?,theoretically you could do it two ways one of which uses more processing power and memory no larger than the queue is ever at when full and the other which uses almost infinite memory. The more practical method would be two place the items in an array and remove the item in position one of the array after which you can shift the array and add another element if required. The other option which can use infinite memory when used for long term queues such as job scheduling that goes nonstop for extended periods. that is to implement an array and add the items read item one raise your counter value to two ecetera and continue adding more elements to the array. the downside to this method is after you use element one it is still in memory. or im crazy who knows,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",2.0,0,0.9341878890991211,0.09578262852211517,0.5000055432319641,0.2005392163991928
1588,How can you implement a queue with a list?,"By implementing a list in which a tail pointer points to the item most recently inserted onto the back of the list and a head pointer which points to the item least recently inserted onto the list. Also, items can only be removed from the front of the list and can only be added to the back of the list.","Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",5.0,1,0.9540716409683228,0.7261081981828945,0.7533490657806396,0.5042784214019775
1589,How can you implement a queue with a list?,You can use list to represent the items in a queue.,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",1.5,0,0.8998962640762329,0.6000000000000001,0.6170883178710938,0.40146052837371826
1590,How can you implement a queue with a list?,Have a pointer to the last element in the list and then use enqueue to insert items there. Link the first and last elements together to dequeue the list.,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",3.5,0,0.9454146027565002,0.6537204504606136,0.7672374248504639,0.625667929649353
1591,How can you implement a queue with a list?,Enqueue to the end of the linked list ... dequeue items from the beginningheadof the list.,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",5.0,1,0.949824333190918,0.8571946154145234,0.7326043248176575,0.7007408142089844
1592,How can you implement a queue with a list?,you use the first element in the list as the remove point for the queue and insert items at the end of the list.,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",5.0,1,0.968007504940033,0.6929348671835832,0.8148046731948853,0.627708911895752
1593,How can you implement a queue with a list?,"Utilizing a front pointer and a back pointer. The front poiner and back pointer points to the first item into the queue. As you add items, the front remains the same but the back poiner next 'points to the new item and the new item is assigned to become the 'new back pointer.","Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",4.5,1,0.9454066753387451,0.14433756729740646,0.7308987379074097,0.19167861342430115
1594,How can you implement a queue with a list?,Implement a linked list that only allows nodes to be added to the tail and can only be retrieved from the head.,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",4.5,1,0.926587700843811,0.5685352436149611,0.6960263252258301,0.45813074707984924
1595,How can you implement a queue with a list?,Check if list is empty and add elements to the list.,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",2.5,0,0.8930776119232178,0.7559289460184546,0.6550073623657227,0.36155056953430176
1596,How can you implement a queue with a list?,"make a linked list and add on to the front and delete from the back, keep track of both to do so.","Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",4.5,1,0.9345734119415283,0.5477225575051663,0.6775293350219727,0.46613290905952454
1597,How can you implement a queue with a list?,by making the head of the list the beginning of the queue and the last listed item the insertion point of the queue,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",4.5,1,0.9703369140625,0.6154574548966638,0.8106047511100769,0.607018232345581
1598,How can you implement a queue with a list?,throw in data at the head and take it out at the tail,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",4.5,1,0.9231377243995667,0.7071067811865476,0.6285606622695923,0.37544745206832886
1599,How can you implement a queue with a list?,"You create a list of nodes that had a head and a top pointer, and the functions are basically the same substituting pop and push with enqueue and dequeue","Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",3.0,0,0.9386962056159973,0.46358632497276553,0.6739591956138611,0.4508315622806549
1600,How can you implement a queue with a list?,"fairly easy ... singly linked list with a pointer to the head and tail of hte list. deque first item in que, create temp pointer to next element, delete head, and then make head the temporary pointer. enque new item, use pointer to end of list, add a new item to the next item of the tail, and make the tail the next item of the current tail.","Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",4.5,1,0.9380069971084595,0.4587317109255645,0.7472655177116394,0.4102102220058441
1601,How can you implement a queue with a list?,"Use a linked list with 2 pointers, one to the front and one to the back. As long as back! equals front, the queue is not empty.","Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",4.5,1,0.944607675075531,0.6172133998483679,0.6788161993026733,0.36095935106277466
1602,How can you implement a queue with a list?,"create a node with the input data, continue to add to the list. when dequeueing get the first elements data and set the next element in the list as the new first element","Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",4.0,1,0.9336490035057068,0.4364357804719848,0.6680659651756287,0.3331766128540039
1603,How can you implement a queue with a list?,"A linked list with Stack principles. The Queue 's top element is the element that is always being removed first. Must use nodes to contain each element, with a pointer to the top element, which also could be called the head pointer.","Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",3.0,0,0.9284944534301758,0.32328954364819484,0.745301365852356,0.26192978024482727
1604,How can you implement a queue with a list?,linked list checking for front and rear. Keep enqueueing elements until front equal to rear 1.,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",3.5,0,0.8708001375198364,0.5520524474738835,0.6657149195671082,0.3540846109390259
1605,How can you implement a queue with a list?,"a queue can be implemented in a list by keeping track of two pointers, a head and a tail","Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",4.5,1,0.9235447645187378,0.6030226891555273,0.6877948641777039,0.4964156448841095
1606,How can you implement a queue with a list?,"each element of a queue can be allocated in the nodes of an linked list. New elements should be added to the head of the list, with each dequeued element coming off the tail.","Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",5.0,1,0.9565202593803406,0.6298897789321867,0.7007636427879333,0.371338814496994
1607,How can you implement a queue with a list?,"Implement the operation dequeue as the list operation remove1and the operation getFrontqueueFrontas the list operation retrieve1, queueFront","Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",4.0,1,0.887053906917572,0.727532837268552,0.7327191233634949,0.6233533620834351
1608,How can you implement a queue with a list?,remove the first element and reference the second element as the new head of the list.,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",3.5,0,0.940355658531189,0.38348249442368526,0.6104097962379456,0.2580132782459259
1609,How can you implement a queue with a list?,By creating and adding nodes at the end of the list and removing the nodes from the beginning of the list.,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",5.0,1,0.9500928521156311,0.6537204504606136,0.7286946773529053,0.37588998675346375
1610,How can you implement a queue with a list?,you would have your list and add a back pointer so that your program knows where the end is,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",4.0,1,0.9158586263656616,0.4950737714883372,0.677753746509552,0.5240033864974976
1611,How can you implement a queue with a list?,"your queue storage class has a list, and for enqueue, you add the item to the end of the list, and for dequeue you return the first item in the list","Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",4.5,1,0.9448564052581787,0.7735267838285932,0.7517330646514893,0.6443631649017334
1612,How can you implement a queue with a list?,temp implies next equals NULL; iffrontrearimplies next equals temp; else front equals temp; rear equals temp;,"Keep the rear of the queue pointing to the tail of the linked list, so the enqueue operation is done at the end of the list, and keep the front of the queue pointing to the head of the linked list, so the dequeue operation is done at the beginning of the list.",3.5,0,0.639987051486969,0.16666666666666666,0.5289362668991089,0.2952396273612976
1613,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred for a queue, and why?","List based. Because it is on the run time order of N, also it does not have a limited size like an array does","Link-based, because they are dynamicno size constraints",4.5,1,0.8788183331489563,0.3922322702763681,0.5905654430389404,0.18850237131118774
1614,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred for a queue, and why?",linked list based. because it does not store the items linearly in memory but instead as individual blocks.,"Link-based, because they are dynamicno size constraints",5.0,1,0.871725857257843,0.30151134457776363,0.6050190329551697,0.38370898365974426
1615,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred for a queue, and why?",List based is preferred because there are no size restrictions.,"Link-based, because they are dynamicno size constraints",5.0,1,0.9223040342330933,0.632455532033676,0.4743311405181885,0.5276380777359009
1616,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred for a queue, and why?","A list-based implementation would be preferred. The array is slightly more complicated, where you would need to keep track of both front and rear.","Link-based, because they are dynamicno size constraints",3.5,0,0.8785429000854492,0.316227766016838,0.7141844034194946,0.20445352792739868
1617,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred for a queue, and why?",List-based. Array-based queues have a way to complicate things to an extent.,"Link-based, because they are dynamicno size constraints",3.5,0,0.8843536376953125,0.6030226891555273,0.6800553202629089,0.17372174561023712
1618,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred for a queue, and why?","List-based. Less code, and no size limitation or declaration ... which means it is also more efficient and versatile.","Link-based, because they are dynamicno size constraints",5.0,1,0.8898916840553284,0.4714045207910317,0.491985946893692,0.17372174561023712
1619,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred for a queue, and why?",list based is prefered because it does not have a set size and insertion and deletion can be done very quickly of you keep pointers to first element and last.,"Link-based, because they are dynamicno size constraints",5.0,1,0.8754149675369263,0.4264014327112209,0.6308140754699707,0.4314116835594177
1620,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred for a queue, and why?",List based is preferred because there are space issues with array based due to rightward drift. The fix for rightward drift requires constant shifting of the queue data.,"Link-based, because they are dynamicno size constraints",5.0,1,0.8458473682403564,0.41702882811414954,0.7036590576171875,0.28476378321647644
1621,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred for a queue, and why?","Similar to stacks, linked lists are preferable for queues because the size can be adjusted.","Link-based, because they are dynamicno size constraints",5.0,1,0.8962207436561584,0.3535533905932738,0.6820442080497742,0.5941226482391357
1622,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred for a queue, and why?",array-based is preferred because all you have to keep track of is the array itself and the count.,"Link-based, because they are dynamicno size constraints",1.5,0,0.8696790933609009,0.3535533905932738,0.5453587770462036,0.24144481122493744
1623,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred for a queue, and why?",list because its size is not defined,"Link-based, because they are dynamicno size constraints",5.0,1,0.8606463074684143,0.5773502691896258,0.42797139286994934,0.38222914934158325
1624,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred for a queue, and why?","List-based, because when you enqueueor dequeue depending upon your implementationyou would need to shift all elements to another space with an array, causing a horrid time complexity for large data sets, where as you can just modify the pointers in a list for a constant time complexity","Link-based, because they are dynamicno size constraints",4.5,1,0.8731656670570374,0.17960530202677494,0.6235443949699402,0.2971152663230896
1625,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred for a queue, and why?","queue 's are best with lists, especially if the tail is kept track of, as the list can be dynamically grown without losing track of the head or tail.","Link-based, because they are dynamicno size constraints",5.0,1,0.8467209935188293,0.0,0.5762537717819214,0.5299896001815796
1626,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred for a queue, and why?","list based, its much simpler and the run time is better","Link-based, because they are dynamicno size constraints",4.0,1,0.8492761254310608,0.4082482904638631,0.4592627286911011,0.35371893644332886
1627,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred for a queue, and why?","list based, because of the lessened memory usage initially, and the increased limits on how large the que can become.","Link-based, because they are dynamicno size constraints",5.0,1,0.8731720447540283,0.316227766016838,0.597442090511322,0.354417622089386
1628,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred for a queue, and why?",List-based because it is not fixed size.,"Link-based, because they are dynamicno size constraints",5.0,1,0.9142062067985535,0.7071067811865476,0.6147475838661194,0.4757882356643677
1629,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred for a queue, and why?","list, its dynamic and no size needs to be declared","Link-based, because they are dynamicno size constraints",5.0,1,0.8841193914413452,0.447213595499958,0.3555867075920105,0.5037421584129333
1630,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred for a queue, and why?","list bases implementatoin is best because you use pointers to keep track of the front and back pointers. Easier to maintain, but uses more memory","Link-based, because they are dynamicno size constraints",5.0,1,0.8459578156471252,0.0,0.6180989742279053,0.3665081560611725
1631,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred for a queue, and why?",list based. It can dynamically grow and has fewer restrictions.,"Link-based, because they are dynamicno size constraints",5.0,1,0.8766224384307861,0.4082482904638631,0.507485032081604,0.18850237131118774
1632,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred for a queue, and why?",list based is preferred because memory allocation is not an issue,"Link-based, because they are dynamicno size constraints",5.0,1,0.8340083956718445,0.4082482904638631,0.49054527282714844,0.33542731404304504
1633,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred for a queue, and why?","List based solutions are preferred, because they allow for queues of any size.","Link-based, because they are dynamicno size constraints",5.0,1,0.916178286075592,0.5345224838248489,0.6014953851699829,0.44786638021469116
1634,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred for a queue, and why?","I think array based is batter, because of fixed size, but on other had list base is more flaxible. You do not have to worry about the size","Link-based, because they are dynamicno size constraints",4.0,1,0.9011598825454712,0.5883484054145522,0.4310094118118286,0.2467433512210846
1635,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred for a queue, and why?",list based because you dont need to shift the elements like you do in array based queues,"Link-based, because they are dynamicno size constraints",4.0,1,0.8685604929924011,0.5773502691896258,0.44733867049217224,0.4030422568321228
1636,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred for a queue, and why?",List-based because memory is not constricted.,"Link-based, because they are dynamicno size constraints",5.0,1,0.8655107617378235,0.5,0.49267852306365967,0.34269988536834717
1637,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred for a queue, and why?","list based because the array based has to have a fixed size, it cannot be added to or removed from as easily","Link-based, because they are dynamicno size constraints",5.0,1,0.8935407400131226,0.6396021490668313,0.5974520444869995,0.30915623903274536
1638,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred for a queue, and why?",list-based array is easier and more scalable,"Link-based, because they are dynamicno size constraints",5.0,1,0.8441526293754578,0.447213595499958,0.46652451157569885,0.45380768179893494
1639,"Which implementation -LRB- array-based vs. list-based -RRB- is preferred for a queue, and why?",list based becuase an arrary based has to have an arrary size and needs to be pre-defined and cannot be changed dynamically.,"Link-based, because they are dynamicno size constraints",5.0,1,0.8954179883003235,0.5303300858899107,0.5894358158111572,0.3039262890815735
1640,What is the stack operation corresponding to the enqueue operation in queues?,Push.,push,5.0,1,0.815798282623291,1.0,0.9706499576568604,0.9921000003814697
1641,What is the stack operation corresponding to the enqueue operation in queues?,"push, which inserts something at the top of the stack.",push,5.0,1,0.6166883111000061,0.5773502691896258,0.6503138542175293,0.5088075995445251
1642,What is the stack operation corresponding to the enqueue operation in queues?,The stack operation corresponding to enqueue in queues is the push operation.,push,5.0,1,0.597624659538269,0.3333333333333333,0.4181668162345886,0.44086867570877075
1643,What is the stack operation corresponding to the enqueue operation in queues?,"Push in a stack operation corresponds to the enqueue operation in queues. These operations insert a new item into one endthe top and back, respectivelyof the ADT.",push,5.0,1,0.6034352779388428,0.25,0.38504332304000854,0.40615731477737427
1644,What is the stack operation corresponding to the enqueue operation in queues?,The stack operation is almost the opposite of the enqueue operation.,push,2.5,0,0.5151233077049255,0.0,0.36980992555618286,0.11325052380561829
1645,What is the stack operation corresponding to the enqueue operation in queues?,push equals enqueue pop equals dequeue,push,4.5,1,0.5688899159431458,0.3535533905932738,0.626032829284668,0.44027015566825867
1646,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,1,1.0,1.0,0.9999999403953552,0.9999998807907104
1647,What is the stack operation corresponding to the enqueue operation in queues?,Not sure what this question means. You can use the stack push operation and the enqueue operation to detect palindromes.,push,5.0,1,0.6149900555610657,0.2773500981126146,0.3764722943305969,0.15457572042942047
1648,What is the stack operation corresponding to the enqueue operation in queues?,"Enqueue is the queue equivalent of push, and dequeue is the queue equivalent to pop.",push,5.0,1,0.5469973087310791,0.2886751345948129,0.47886455059051514,0.23426677286624908
1649,What is the stack operation corresponding to the enqueue operation in queues?,Push operation.,push,5.0,1,0.7334387898445129,0.7071067811865476,0.8856872916221619,0.8801460862159729
1650,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,1,1.0,1.0,0.9999999403953552,0.9999998807907104
1651,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,1,1.0,1.0,0.9999999403953552,0.9999998807907104
1652,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,1,1.0,1.0,0.9999999403953552,0.9999998807907104
1653,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,1,1.0,1.0,0.9999999403953552,0.9999998807907104
1654,What is the stack operation corresponding to the enqueue operation in queues?,"that would be the push operation, if it put the item at the end of the list.",push,5.0,1,0.5896931290626526,0.447213595499958,0.5052362680435181,0.3837868571281433
1655,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,1,1.0,1.0,0.9999999403953552,0.9999998807907104
1656,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,1,1.0,1.0,0.9999999403953552,0.9999998807907104
1657,What is the stack operation corresponding to the enqueue operation in queues?,the Push method in the stack operations.,push,5.0,1,0.6204187273979187,0.5,0.5625836849212646,0.57618647813797
1658,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,1,1.0,1.0,0.9999999403953552,0.9999998807907104
1659,What is the stack operation corresponding to the enqueue operation in queues?,enqueue corresponds with push dequeue corresponds with pop,push,4.5,1,0.5726849436759949,0.3535533905932738,0.6220434904098511,0.27365297079086304
1660,What is the stack operation corresponding to the enqueue operation in queues?,"Push corresponds with enqueue, both very similarly place new elements into their stack or queue",push,5.0,1,0.6139655113220215,0.3333333333333333,0.4601450562477112,0.3304581642150879
1661,What is the stack operation corresponding to the enqueue operation in queues?,FIFO: First in First out,push,1.5,0,0.46715012192726135,0.0,0.3016982972621918,0.07526327669620514
1662,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,1,1.0,1.0,0.9999999403953552,0.9999998807907104
1663,What is the stack operation corresponding to the enqueue operation in queues?,Push,push,5.0,1,1.0,1.0,0.9999999403953552,0.9999998807907104
1664,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,1,1.0,1.0,0.9999999403953552,0.9999998807907104
1665,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,1,1.0,1.0,0.9999999403953552,0.9999998807907104
1666,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0,1,1.0,1.0,0.9999999403953552,0.9999998807907104
1667,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?","A stack, some printing jobs might have a higher priority than others and they can be easily inserted at the front of the list or anywhere between.",queue,1.5,0,0.317280650138855,0.0,0.3086157441139221,0.12897063791751862
1668,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",a queue otherwise some things would never be printed.,queue,5.0,1,0.4295889139175415,0.5773502691896258,0.47611260414123535,0.2697926461696625
1669,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",A queue is more appropriate for scheduling printing jobs because queues have first in first out behavior.,queue,5.0,1,0.5013571977615356,0.3779644730092273,0.2790546417236328,0.4056451618671417
1670,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?","Queue, its better to be FIFO than LIFOstack.",queue,5.0,1,0.5996641516685486,0.5,0.3648165166378021,0.17178869247436523
1671,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",Queue of course!,queue,5.0,1,0.6379433870315552,0.7071067811865476,0.7908669710159302,0.8620218634605408
1672,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?","Queue, the person who wanted to print first should be first served.",queue,5.0,1,0.39215442538261414,0.447213595499958,0.551728367805481,0.392641544342041
1673,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue because it guarantees that job are executed in the order they come in.,queue,5.0,1,0.37280938029289246,0.4082482904638631,0.4897368550300598,0.4523487985134125
1674,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,queue,5.0,1,0.9999995827674866,1.0,1.0,1.0
1675,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",Queues would be preferable to stacks for use as scheduling print jobs because it would print jobs in the order that they were sent to the printer.,queue,5.0,1,0.39686787128448486,0.0,0.2107938528060913,0.25570932030677795
1676,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",a queue.,queue,5.0,1,0.7183458209037781,1.0,0.9555449485778809,0.8280133008956909
1677,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,queue,5.0,1,0.9999995827674866,1.0,1.0,1.0
1678,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",a queue,queue,5.0,1,0.834845781326294,1.0,0.9502804279327393,0.8140747547149658
1679,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?","Queue 's are more appropriate, as printers are usually first come, first serve.",queue,5.0,1,0.3576616942882538,0.4082482904638631,0.31636571884155273,0.4717983603477478
1680,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,queue,5.0,1,0.9999995827674866,1.0,1.0,1.0
1681,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?","queue, because of the first in first out principles, and if it was a stack it would be last in last out, because it could possibly not let the first item that was added get removed in a timely manner.",queue,5.0,1,0.3155972361564636,0.316227766016838,0.2960638999938965,0.35094428062438965
1682,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",Queue,queue,5.0,1,0.9999995827674866,1.0,1.0,1.0
1683,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",a queue,queue,5.0,1,0.834845781326294,1.0,0.9502804279327393,0.8140747547149658
1684,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",A Queue data structure is more appropriate for scheduling printing jobs at a printer. The first job sent to the printer is the first job printed.,queue,5.0,1,0.41724759340286255,0.24253562503633297,0.21628111600875854,0.36616432666778564
1685,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",a queue. It would not be unfair for the first job to finish last.,queue,5.0,1,0.3843846619129181,0.5,0.3987511396408081,0.8280131816864014
1686,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?","a queue, because it takes the job that has waited the longest",queue,5.0,1,0.42862898111343384,0.447213595499958,0.467937707901001,0.45258790254592896
1687,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?","A queue is more appropriate, because the clients which have waited the longest should be the first served.",queue,5.0,1,0.39021775126457214,0.4082482904638631,0.3072739243507385,0.4769055247306824
1688,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",Queue,queue,5.0,1,0.9999995827674866,1.0,1.0,1.0
1689,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",a queue,queue,5.0,1,0.834845781326294,1.0,0.9502804279327393,0.8140747547149658
1690,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",Queue,queue,5.0,1,0.9999995827674866,1.0,1.0,1.0
1691,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",i would say that a queue is better because the first thing you try to print should be the first one to come out of the printerFIFO,queue,5.0,1,0.34590813517570496,0.3535533905932738,0.2933153212070465,0.2754285931587219
1692,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?","a queue, because you want the jobs to execute in the order that they are received",queue,5.0,1,0.39290985465049744,0.4082482904638631,0.5540914535522461,0.3733375072479248
1693,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,queue,5.0,1,0.9999995827674866,1.0,1.0,1.0
1694,What is a tree?,A hierarchy of nodes that are sorted in a particular order. Each node has a ancestorexcept for the rootand childrenexcept for the leaves.,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",4.0,1,0.9636453986167908,0.4242640687119287,0.8186782598495483,0.3694988489151001
1695,What is a tree?,A tree is a finite set of one or more nodes with a specially designated node called the root and the remaining nodes are partitioned into disjoint sets where each of these sets is a tree.,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",5.0,1,0.9837863445281982,0.8616404368553294,0.9415565133094788,0.933729350566864
1696,What is a tree?,A tree is a finite set of one or more nodes such that: there is a specially designated node called the root.,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",4.5,1,0.9730276465415955,0.7777777777777779,0.8830639123916626,0.7938846349716187
1697,What is a tree?,"A connected, undirected graph without cycles.","A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",4.5,1,0.825593888759613,0.0,0.38110029697418213,0.1514601707458496
1698,What is a tree?,"A data structure that contains a root, internal nodes and external nodes. Each node references another node by means of pointerspass-by-reference. The root is the base of the tree, it has no parents. A leaf is a node at the end of the tree which points to NULL.","A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",5.0,1,0.9629348516464233,0.6929348671835833,0.6917179822921753,0.6070002317428589
1699,What is a tree?,a tree is a series of nodes where each node has links to other nodes.,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",3.0,0,0.9487345218658447,0.8660254037844387,0.860012412071228,0.6784991025924683
1700,What is a tree?,"an infinite set of nodes that have a root and descendants, and each addition is a leaf.","A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",3.5,0,0.9721693992614746,0.6172133998483679,0.6835901737213135,0.5370842218399048
1701,What is a tree?,"A set of one or more nodes that are hierarchically organized, with one special root node.","A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",4.0,1,0.9748800992965698,0.8017837257372734,0.785515546798706,0.5987329483032227
1702,What is a tree?,A tree is a finite set of one or more nodes such that there is a specially designated node called the root.,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",3.5,0,0.9739481806755066,0.7777777777777779,0.8791386485099792,0.7929603457450867
1703,What is a tree?,one or more nodes in a hierarchy starting with the root and branching off like a tree to subtrees,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",5.0,1,0.949293851852417,0.5773502691896258,0.8373737335205078,0.8359795808792114
1704,What is a tree?,A tree is a data structure where nodes are linked to each other in a hierarchical manner.,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",3.5,0,0.9483267664909363,0.5070925528371101,0.7666023969650269,0.5736169815063477
1705,What is a tree?,a grouping of data in a parent to child structure,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",3.0,0,0.8741346597671509,0.0,0.45061835646629333,0.09086371958255768
1706,What is a tree?,It is a list of numbers in a list made by comparing values of nodes already in the tree and adding to the appropriate spot. Its a list made up of nodes with left and right pointers.,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",3.0,0,0.9524255394935608,0.466252404120157,0.7498244047164917,0.5459319949150085
1707,What is a tree?,"A tree is a branched data structure with nodes, and leaves ... a special node called root has no parent node, but however like all other nodes can and does have 2 nodes that it links to, namely one on the right, and one on the left.","A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",4.5,1,0.9717984795570374,0.7698003589195008,0.6483739614486694,0.6835716366767883
1708,What is a tree?,"It organizes data in a nonlinear, hierarchical form, where items can have more than one successor. Partitioned into a root node and subsets are general subtrees of the root.","A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",5.0,1,0.9640704989433289,0.5773502691896258,0.795979917049408,0.2759341597557068
1709,What is a tree?,"A tree is a finite set of one or more nodes such that there is a specially designated node called the root. The remaining nodes are partitioned into n is greater than or equal to 0 disjoint sets T the n plus 1, where each element set is a tree.","A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",5.0,1,0.9770089387893677,0.7925939239012173,0.8486298322677612,0.7929602861404419
1710,What is a tree?,A finite set of nodes that starts with the root and terminates with leaves.,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",4.0,1,0.9520118832588196,0.6172133998483679,0.7629486322402954,0.6266355514526367
1711,What is a tree?,"a set of data arranged with pointers. each element can have many pointers, but no two pointers point to the same element","A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",2.5,0,0.9307885766029358,0.24253562503633297,0.5171700716018677,0.2651806175708771
1712,What is a tree?,"A Tree is a data structure with one or more data nodes, each of which contains some data. Each node itself can have a number of attached child nodes, creating the branched structure Trees are named for.","A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",4.5,1,0.9707090854644775,0.4714045207910317,0.7937731742858887,0.7251793146133423
1713,What is a tree?,"a finite collection of nodes, where it starts with an element called the root, which has children, and its children have children until you get to the leaves which are the last elements and have to children","A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",4.5,1,0.9458039402961731,0.37796447300922736,0.5530142784118652,0.3808411657810211
1714,What is a tree?,"A nonlinear, two-dimensional data structure.","A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",2.0,0,0.8147707581520081,0.0,0.4498833119869232,0.335374653339386
1715,What is a tree?,a finite set of one or more nodes such that there is a root node and all other nodes are split into trees of lesser value than the root,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",4.0,1,0.9713472127914429,0.7807200583588266,0.8005664944648743,0.722100555896759
1716,What is a tree?,"A finite number of nodes such that there is one root node, each node has a certain number of children nodes, and each child is also a tree","A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",5.0,1,0.9718253016471863,0.7126966450997985,0.7372422218322754,0.600214958190918
1717,What is a tree?,A type of data structure in which each element is attached to one or more elements directly beneath it.,"A collection of nodes, which has a special node called root, and the rest of the nodes are partitioned into one or more disjoint sets, each set being a tree.",4.0,1,0.9310146570205688,0.0,0.5379986763000488,0.2799255847930908
1718,What is the height of a tree?,"Each level of a generation in the tree, some people do not count the root as a generation",The length of the longest path from the root to any of its leaves.,4.0,1,0.9026013612747192,0.3333333333333333,0.4045467674732208,0.43203598260879517
1719,What is the height of a tree?,"The height of a tree is in terms of the levels of its nodes such that, if the tree is empty its height is 0 otherwise its height is equal to the maximum level of its nodes.",The length of the longest path from the root to any of its leaves.,4.5,1,0.9271422624588013,0.0,0.45982789993286133,0.4380652904510498
1720,What is the height of a tree?,The height of a tree is the number of nodes on the longest path from the root to a leaf.,The length of the longest path from the root to any of its leaves.,5.0,1,0.9644806385040283,0.6123724356957946,0.7181872129440308,0.7359908819198608
1721,What is the height of a tree?,The number of nodes on the longest path from the root of the tree to a leaf.,The length of the longest path from the root to any of its leaves.,5.0,1,0.9661813974380493,0.6546536707079773,0.7679553627967834,0.7876837849617004
1722,What is the height of a tree?,Height equals the number of times you must progress down the levels of a tree to reach a leaf of the greatest distance from the root.,The length of the longest path from the root to any of its leaves.,5.0,1,0.9543105959892273,0.2886751345948129,0.6078324317932129,0.655476450920105
1723,What is the height of a tree?,the height of a tree is the length from the root to the furthest leaf,The length of the longest path from the root to any of its leaves.,5.0,1,0.957618772983551,0.5773502691896258,0.6646290421485901,0.7164865732192993
1724,What is the height of a tree?,The height is the number of generationslevelsfrom the root.,The length of the longest path from the root to any of its leaves.,4.5,1,0.941861093044281,0.5,0.549054741859436,0.5316907167434692
1725,What is the height of a tree?,The height of a tree is the number of levels between the root and the leaf farthest away from it.,The length of the longest path from the root to any of its leaves.,5.0,1,0.9607608914375305,0.3535533905932738,0.5824709534645081,0.5927354097366333
1726,What is the height of a tree?,is the depth of its furthest leaf,The length of the longest path from the root to any of its leaves.,4.5,1,0.9094411730766296,0.0,0.4823860228061676,0.7095184922218323
1727,What is the height of a tree?,the number of nodes from root to leaf,The length of the longest path from the root to any of its leaves.,3.5,0,0.8866345286369324,0.5,0.5011506080627441,0.6254727840423584
1728,What is the height of a tree?,the distance from the deepest leaf to the root,The length of the longest path from the root to any of its leaves.,5.0,1,0.9412776827812195,0.5,0.5965088605880737,0.7297388315200806
1729,What is the height of a tree?,the number of generations or levels of a tree,The length of the longest path from the root to any of its leaves.,4.5,1,0.8937634825706482,0.0,0.44565141201019287,0.5464816689491272
1730,What is the height of a tree?,"The intensity of the children. Say you begin with one node, Thats one height. Then you add two children to that node and then two children to each of those nodes and two children to each of THOSE nodes. Youre current height would be 4.",The length of the longest path from the root to any of its leaves.,3.0,0,0.883831262588501,0.0,0.3041565716266632,0.04931964352726936
1731,What is the height of a tree?,"the number of levels of a tree, like a tree can have at minimum a depth of 3 and at most a height of 8 for 8 nodes.",The length of the longest path from the root to any of its leaves.,3.5,0,0.8965707421302795,0.0,0.4079637825489044,0.42618224024772644
1732,What is the height of a tree?,The number of nodes on the longest path from the root to the leaf.,The length of the longest path from the root to any of its leaves.,5.0,1,0.9671750664710999,0.7071067811865477,0.7877247333526611,0.7744706869125366
1733,What is the height of a tree?,The height of a tree is the number of nodes on the longes path from the root to a leaf.,The length of the longest path from the root to any of its leaves.,5.0,1,0.9572777152061462,0.5000000000000001,0.5687142610549927,0.7433565258979797
1734,What is the height of a tree?,is equal to the number of levels. levels between the root node and the terminal nodes.,The length of the longest path from the root to any of its leaves.,4.5,1,0.8919190764427185,0.31622776601683794,0.45327529311180115,0.2604162096977234
1735,What is the height of a tree?,the number of generations or levels the tree has,The length of the longest path from the root to any of its leaves.,4.5,1,0.8966606855392456,0.0,0.45048534870147705,0.5673646330833435
1736,What is the height of a tree?,"The height of a tree is the depth of its subtrees, that is, how many layers deep it is.",The length of the longest path from the root to any of its leaves.,4.5,1,0.915707528591156,0.0,0.46122780442237854,0.5422427654266357
1737,What is the height of a tree?,is the number of generations in the tree,The length of the longest path from the root to any of its leaves.,4.5,1,0.9109215140342712,0.0,0.4443701505661011,0.543750524520874
1738,What is the height of a tree?,The number of nodes on the longest path from the root to a leaf.,The length of the longest path from the root to any of its leaves.,5.0,1,0.9648666381835938,0.7071067811865477,0.7860116958618164,0.7684234380722046
1739,What is the height of a tree?,the number of distinct levels of separation,The length of the longest path from the root to any of its leaves.,4.0,1,0.8386886119842529,0.0,0.2723720371723175,0.20038749277591705
1740,What is the height of a tree?,the height of a tree is how many levels of nodes that it has,The length of the longest path from the root to any of its leaves.,4.5,1,0.9039650559425354,0.0,0.467584490776062,0.4842286705970764
1741,What is the height of a tree?,The connections between elements are called branches. Trees are often called inverted trees because they are normally drawn with the root at the top.,The length of the longest path from the root to any of its leaves.,1.5,0,0.8766230940818787,0.25819888974716115,0.4200754761695862,0.34991204738616943
1742,What is a leaf?,A leaf is a child of a parent node that has no children nodes of its own.,A node that has no children.,5.0,1,0.9587081074714661,0.5773502691896258,0.7375977635383606,0.47468438744544983
1743,What is a leaf?,A leaf is a node with no children.,A node that has no children.,5.0,1,0.9501996636390686,0.8164965809277261,0.9287961721420288,0.7583988904953003
1744,What is a leaf?,A node with no children.,A node that has no children.,5.0,1,0.9650555849075317,1.0000000000000002,0.9845001697540283,0.977341890335083
1745,What is a leaf?,A tree node with no children.,A node that has no children.,5.0,1,0.9430952668190002,0.8164965809277261,0.9290405511856079,0.7503064870834351
1746,What is a leaf?,And end point of the tree ... a node that does not have any children.,A node that has no children.,5.0,1,0.9422034621238708,0.5773502691896258,0.8912864923477173,0.6784595251083374
1747,What is a leaf?,a node with no children.,A node that has no children.,5.0,1,0.9650555849075317,1.0000000000000002,0.9845001697540283,0.977341890335083
1748,What is a leaf?,A new item to the tree --a child,A node that has no children.,3.0,0,0.8287769556045532,0.0,0.3682557940483093,0.26829907298088074
1749,What is a leaf?,"A leaf is a node with children, it is a terminating node.",A node that has no children.,2.0,0,0.9313987493515015,0.8017837257372733,0.5219042897224426,0.2800420820713043
1750,What is a leaf?,The node with degree 0.,A node that has no children.,4.0,1,0.7877362370491028,0.7071067811865476,0.6276586055755615,0.6243146657943726
1751,What is a leaf?,the node with degree 0,A node that has no children.,4.0,1,0.7329613566398621,0.7071067811865476,0.5854039192199707,0.5840891599655151
1752,What is a leaf?,a leaf is a node with no children,A node that has no children.,5.0,1,0.9309155344963074,0.8164965809277261,0.9303138256072998,0.7339507937431335
1753,What is a leaf?,the last child on any branch,A node that has no children.,4.5,1,0.8240079879760742,0.0,0.7310286164283752,0.2918882966041565
1754,What is a leaf?,The last value in the tree. A value with no children attatched.,A node that has no children.,5.0,1,0.9031834602355957,0.3779644730092273,0.7510253190994263,0.026130516082048416
1755,What is a leaf?,a node with no children.,A node that has no children.,5.0,1,0.9650555849075317,1.0000000000000002,0.9845001697540283,0.977341890335083
1756,What is a leaf?,A node with no children.,A node that has no children.,5.0,1,0.9650555849075317,1.0000000000000002,0.9845001697540283,0.977341890335083
1757,What is a leaf?,A leaf is a node with no children,A node that has no children.,5.0,1,0.9309155344963074,0.8164965809277261,0.9303138256072998,0.7339507937431335
1758,What is a leaf?,a node with degree 0. last node in the tree and furtherest away from the root.,A node that has no children.,4.0,1,0.8712464570999146,0.6666666666666666,0.6515195965766907,0.4000757336616516
1759,What is a leaf?,an endpoint on a tree that contains no pointers or pointers that are set to null,A node that has no children.,4.5,1,0.8716579079627991,0.0,0.731181800365448,0.3066529929637909
1760,What is a leaf?,A leaf is a node with no children.,A node that has no children.,5.0,1,0.9501996636390686,0.8164965809277261,0.9287961721420288,0.7583988904953003
1761,What is a leaf?,an element in a tree that has no children,A node that has no children.,5.0,1,0.9318946003913879,0.5773502691896258,0.8629660606384277,0.6208856105804443
1762,What is a leaf?,A node with no children.,A node that has no children.,5.0,1,0.9650555849075317,1.0000000000000002,0.9845001697540283,0.977341890335083
1763,What is a leaf?,a leaf is a node that has no children nodes,A node that has no children.,5.0,1,0.9474192261695862,0.7071067811865476,0.9214906692504883,0.5546661615371704
1764,What is a leaf?,a leaf is a node with no children,A node that has no children.,5.0,1,0.9309155344963074,0.8164965809277261,0.9303138256072998,0.7339507937431335
1765,What is a leaf?,"The elements at the very bottom of an inverted treethat is, those that have no elements below themare called leaves.",A node that has no children.,5.0,1,0.8650815486907959,0.0,0.571356475353241,0.11706085503101349
1766,What is a binary tree?,"A tree data structure in which each done has at most two children, typical called left and right nodes. The right node is usually greater than the left node and the parent node.",A tree for which the maximum number of children per node is two.,4.5,1,0.9394564032554626,0.5555555555555557,0.823055624961853,0.7966499328613281
1767,What is a binary tree?,"A binary tree is a set of nodes that is either empty or partitioned into a root node and one or two subsets that are binary subtrees of the root. Each node can have no more than two children, a right and a left child.",A tree for which the maximum number of children per node is two.,5.0,1,0.9379069805145264,0.492365963917331,0.6198513507843018,0.5601304769515991
1768,What is a binary tree?,"A set of nodes that is either empty or partitioned into a root node and one or two subsets that are binary subtrees of the root. Each node has at most two children, the left child and the right child.",A tree for which the maximum number of children per node is two.,5.0,1,0.9391578435897827,0.4629100498862758,0.7412031292915344,0.42950981855392456
1769,What is a binary tree?,"A set of zero or more nodes, partitioned into a root node and two possibly empty sets that are binary trees. Thus, each node in a binary tree has at most two children, the left child and the right child.",A tree for which the maximum number of children per node is two.,5.0,1,0.9407293200492859,0.4714045207910318,0.699091911315918,0.5656247735023499
1770,What is a binary tree?,A tree in which each parent has a maximum of 2 children.,A tree for which the maximum number of children per node is two.,5.0,1,0.9588825702667236,0.8660254037844388,0.876695454120636,0.8511888980865479
1771,What is a binary tree?,a tree where each node has at most 2 children.,A tree for which the maximum number of children per node is two.,5.0,1,0.9407233595848083,1.0000000000000002,0.8911980986595154,0.8788806796073914
1772,What is a binary tree?,a tree with up to two children or a right subtree and a left subtree,A tree for which the maximum number of children per node is two.,5.0,1,0.9126726388931274,0.5000000000000001,0.7711331844329834,0.7969201803207397
1773,What is a binary tree?,"A binary tree is a tree in which all nodes have a maximum of two degrees, or can only have two children each.",A tree for which the maximum number of children per node is two.,5.0,1,0.9571752548217773,0.769800358919501,0.7632994055747986,0.8046714067459106
1774,What is a binary tree?,a binary tree is a tree data structure in which each node has at most two children.,A tree for which the maximum number of children per node is two.,5.0,1,0.9466131329536438,0.769800358919501,0.8579369783401489,0.7857056856155396
1775,What is a binary tree?,"a tree with only 2 joints, left and right",A tree for which the maximum number of children per node is two.,4.5,1,0.8394654989242554,0.5,0.5883788466453552,0.5566774606704712
1776,What is a binary tree?,A binary search tree is a tree that also has the condition that each node may have at maximum 2 children,A tree for which the maximum number of children per node is two.,4.5,1,0.9494042992591858,0.790569415042095,0.7782252430915833,0.7205612659454346
1777,What is a binary tree?,a tree where each parent can have at max two children.,A tree for which the maximum number of children per node is two.,5.0,1,0.9165458679199219,0.7071067811865476,0.7985106706619263,0.7903519868850708
1778,What is a binary tree?,a list of numbers that are ordered compared to how they compare to the other numbers already added in the tree,A tree for which the maximum number of children per node is two.,2.0,0,0.8869441747665405,0.31622776601683794,0.5454756617546082,0.3976640999317169
1779,What is a binary tree?,a tree where each node can have at most 2 children.,A tree for which the maximum number of children per node is two.,5.0,1,0.9316980838775635,1.0000000000000002,0.8797082304954529,0.8489536643028259
1780,What is a binary tree?,"Starting at the root node, it branches off into one or two subsets that are binary subtrees of the root. Each node has at most two children, the left child and the right child.",A tree for which the maximum number of children per node is two.,5.0,1,0.9277969598770142,0.4743416490252569,0.746234655380249,0.39628541469573975
1781,What is a binary tree?,"A binary tree is a set of nodes that is either empty or partitioned into a root node and one or two subsets that are binary subtrees of the root. Each node has at most two children, the left child and the right child.",A tree for which the maximum number of children per node is two.,5.0,1,0.9414558410644531,0.4618802153517006,0.712436854839325,0.5601304769515991
1782,What is a binary tree?,a tree that has a maximum of 2 children per node,A tree for which the maximum number of children per node is two.,5.0,1,0.9689227938652039,1.0,0.9374994039535522,0.9591260552406311
1783,What is a binary tree?,a tree with elements that can contain at most two pointers,A tree for which the maximum number of children per node is two.,5.0,1,0.8851295113563538,0.5,0.7448680996894836,0.4772653579711914
1784,What is a binary tree?,A binary tree can have only two children for each node.,A tree for which the maximum number of children per node is two.,5.0,1,0.9413820505142212,0.8660254037844388,0.7184815406799316,0.8271129131317139
1785,What is a binary tree?,a tree where every parent has only two children,A tree for which the maximum number of children per node is two.,4.5,1,0.9068076610565186,0.8164965809277261,0.6420579552650452,0.8107810020446777
1786,What is a binary tree?,A tree where every node has no more than two children,A tree for which the maximum number of children per node is two.,5.0,1,0.935889720916748,1.0000000000000002,0.7305734157562256,0.8908518552780151
1787,What is a binary tree?,"a binary tree is a special search tree where each node has either 2, 1, or 0 children",A tree for which the maximum number of children per node is two.,4.5,1,0.9090771079063416,0.769800358919501,0.6403217315673828,0.7008591890335083
1788,What is a binary tree?,a binary tree is a special type of tree where each node can only have at maximum 2 children,A tree for which the maximum number of children per node is two.,5.0,1,0.9529767632484436,0.790569415042095,0.7410981059074402,0.8091082572937012
1789,What is a binary tree?,A binary tree is a special type of inverted tree in which each element has only two branches below it.,A tree for which the maximum number of children per node is two.,4.5,1,0.9312881827354431,0.632455532033676,0.6288024187088013,0.5985220670700073
1790,What is a binary search tree?,"A tree data structure where each node has a value, where the total order is defined on these values. the left subtree contains only values less than the parent node, and vice versa for the right subtree.",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,5.0,1,0.9444041848182678,0.5366563145999494,0.709565281867981,0.23805354535579681
1791,What is a binary search tree?,A binary search tree is a binary tree where the value in any node n 'is greater than the value in every node in n 's left subtree but less than every node in n s right subtree.,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,5.0,1,0.9206441640853882,0.7474093186836597,0.6954960823059082,0.5343707799911499
1792,What is a binary search tree?,"A binary tree where the value in any node n is greater than the value in every node in n 's left subtree, but less than the value of every node in n 's right subtree.",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,5.0,1,0.9249688982963562,0.6024640760767094,0.7188147306442261,0.5799400806427002
1793,What is a binary search tree?,"A binary tree where the search key in any node n is greater than the search key in any node in n 's left subtree, but less than the search key in any node in n 's right subtree.",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,5.0,1,0.9224017858505249,0.521749194749951,0.7084869742393494,0.5854794979095459
1794,What is a binary search tree?,"A tree which is split based on values. This makes it very easy to search. One can compare the desired value to the root, and if the root is greater than, we search the left side of the tree, if it is less than, we search the right side ... and do the same thing recursively.",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,5.0,1,0.9510177969932556,0.421637021355784,0.4743022322654724,0.27461034059524536
1795,What is a binary search tree?,a tree where each node has at most two nodes and the node on the left is less than the root and the node on the right is greater than the root.,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,4.5,1,0.9507777094841003,0.7071067811865476,0.7170860767364502,0.6259952783584595
1796,What is a binary search tree?,a special binary tree that has a rule that all the subtrees on the right are smaller than the node value and all the subtrees on the left are larger than the node value,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,4.0,1,0.9555158615112305,0.5962847939999438,0.7348902225494385,0.6438889503479004
1797,What is a binary search tree?,"Binary search trees are similar to binary trees, but have been implemented to organize data in a specific way for later searching.",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,3.5,0,0.8895056843757629,0.48507125007266594,0.4149218797683716,0.3941507935523987
1798,What is a binary search tree?,"it is a binary tree where each node has a value, a total order is defined on these values, the left subtree of a node contains only values less than the node 's value, and the right subtree of a node contains only values greater than or equal to the node 's value.",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,5.0,1,0.9329638481140137,0.5196152422706634,0.6989980340003967,0.5171147584915161
1799,What is a binary search tree?,A binary tree with the data organized in a specific arangment,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,2.5,0,0.8815439939498901,0.5773502691896258,0.5770437717437744,0.46074536442756653
1800,What is a binary search tree?,"A binary search tree is a tree that also has the condition that each node may have at maximum 2 children and where the input data is compared to the data in the tree starting with the root. If the value is smaller than the root it traverses left, if it is larger it traverses right until it becomes a leaf.",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,4.5,1,0.974567711353302,0.5000000000000001,0.7417027354240417,0.695610761642456
1801,What is a binary search tree?,a binary tree in which the data is in order from left to right.,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,4.0,1,0.939791738986969,0.8164965809277261,0.6089075803756714,0.5503448247909546
1802,What is a binary search tree?,a tree that is set up so that it can be easily searched for numbers based on the location compared to the previous nodes.,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,3.5,0,0.9509982466697693,0.316227766016838,0.45387816429138184,0.3384368121623993
1803,What is a binary search tree?,"a binary tree where the children are ordered such that the right side is greater than the current node, and the left is less than or equal the current node.",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,5.0,1,0.9743138551712036,0.6708203932499369,0.802968442440033,0.781477689743042
1804,What is a binary search tree?,"A binary tree where the value in any node n is greater than the value in every node n 's left subtree, but less than every value in n 's right subtree.",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,5.0,1,0.9244647026062012,0.5720775535473555,0.7048605680465698,0.6062464714050293
1805,What is a binary search tree?,A binary search tree is a finite set of nodes that is either empty or consits of a root and two disjoint binary trees call the left and right subtrees.,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,2.5,0,0.9265077710151672,0.625,0.6469722390174866,0.5575908422470093
1806,What is a binary search tree?,it is similar to a binary tree. The keys in a nonempty left subtreeright subtreeare smallerlargerthan the key in the root of subtree. the values in all nodes in the left subtree of a node are less than the node value the values in all nodes in the right subtree of a node are greater than the node values,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,5.0,1,0.9229041934013367,0.5427204202399747,0.788878321647644,0.5639325380325317
1807,What is a binary search tree?,"a set of numbers arranged by links. each node can contain two pointers to other elements. each node to the left of the parent is smaller and each node to the right is larger. recursive implementation implies that if traversed in order, the output would be sorted",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,4.5,1,0.9469085335731506,0.5345224838248488,0.5980508327484131,0.1576329916715622
1808,What is a binary search tree?,"A binary search tree is a special binary tree arranged such that every left child node contains a value less than its parent, and every right child node contains a value greater its parent.",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,5.0,1,0.958621621131897,0.7592566023652967,0.7868398427963257,0.6704314947128296
1809,What is a binary search tree?,"a binary tree with a special organization of data. where the left child of the element is less than it, and the right child is larger than it.",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,5.0,1,0.9792938828468323,0.7844645405527362,0.8428069353103638,0.47673410177230835
1810,What is a binary search tree?,A tree in which the smaller values are located on the left of a parent node and the larger values are located on the right of the parent node.,A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,5.0,1,0.9535247683525085,0.6546536707079771,0.6970803737640381,0.6504452228546143
1811,What is a binary search tree?,"a binary search tree is a special tree in which each node has at most two children, labeled left child and right child",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,2.5,0,0.9579054117202759,0.8333333333333334,0.711185872554779,0.7450284957885742
1812,What is a binary search tree?,"it is a binary tree where each node has a unique key, the left child of a node has only values less than that node, and the right child of each node has higher values than that node.",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,5.0,1,0.9604724645614624,0.6851601597031489,0.7769366502761841,0.7087174654006958
1813,What is a binary search tree?,"Binary search trees are a fundamental data structure used to construct more abstract data structures such as sets, multisets, and associative arrays.",A binary tree that has the property that for any node the left child is smaller than the parent which in turn is smaller than the right child.,2.5,0,0.8075908422470093,0.24253562503633297,0.41585683822631836,0.37480634450912476
1814,What is the inorder traversal of a binary tree?,"For every node in the binary tree we first visit its left sub-treeif its thereand then visit the parent node itself, and then the right sub-treeif its there.","Traverse the left subtree, then the root, then the right subtree.",5.0,1,0.9201740622520447,0.30151134457776363,0.6737513542175293,0.5507707595825195
1815,What is the inorder traversal of a binary tree?,The inorder traversal of a binary tree visits the node of a binary tree in order according to their data values.,"Traverse the left subtree, then the root, then the right subtree.",2.5,0,0.8289894461631775,0.0,0.5147154331207275,0.3413070738315582
1816,What is the inorder traversal of a binary tree?,Traverses the binary tree in inorder. It lets you visit the nodes in order according to their data values.,"Traverse the left subtree, then the root, then the right subtree.",3.0,0,0.8720980882644653,0.0,0.5510037541389465,0.43589556217193604
1817,What is the inorder traversal of a binary tree?,Its used to visit nodes of a binary search tree in a search key order.,"Traverse the left subtree, then the root, then the right subtree.",3.5,0,0.83024001121521,0.0,0.5603789687156677,0.36607626080513
1818,What is the inorder traversal of a binary tree?,Left side of treeRootRight side of tree,"Traverse the left subtree, then the root, then the right subtree.",5.0,1,0.7768735289573669,0.5773502691896258,0.5481411218643188,0.6367504596710205
1819,What is the inorder traversal of a binary tree?,printing a tree in order from least to greatest. This done by going as far left down the tree as possible and printing the parent and then right tree. Then move up the tree.,"Traverse the left subtree, then the root, then the right subtree.",5.0,1,0.8833825588226318,0.26726124191242445,0.529492974281311,0.36640095710754395
1820,What is the inorder traversal of a binary tree?,"The in order is to go from left, root, right","Traverse the left subtree, then the root, then the right subtree.",5.0,1,0.8956290483474731,0.8660254037844388,0.8667269945144653,0.7092615365982056
1821,What is the inorder traversal of a binary tree?,"Inorder traversal of a binary tree will retrieve start at the furthest left hand leaf and checks it, it s parent, and it s right side sibling, then it goes up a level and repeats until it gets to the root.","Traverse the left subtree, then the root, then the right subtree.",4.5,1,0.9180377125740051,0.3973597071195133,0.618909478187561,0.4438444972038269
1822,What is the inorder traversal of a binary tree?,traverse the left subtree. visit the root. traverse the right subtree.,"Traverse the left subtree, then the root, then the right subtree.",5.0,1,0.9536473751068115,0.9185586535436919,0.9189976453781128,0.7504943609237671
1823,What is the inorder traversal of a binary tree?,postorder,"Traverse the left subtree, then the root, then the right subtree.",1.5,0,0.0,0.0,0.5362280607223511,0.000917813740670681
1824,What is the inorder traversal of a binary tree?,in order starts with the root then does right child then left child recursively,"Traverse the left subtree, then the root, then the right subtree.",1.5,0,0.883950412273407,0.5222329678670936,0.7157750725746155,0.6388570070266724
1825,What is the inorder traversal of a binary tree?,Left Child implies Parent implies Right Child,"Traverse the left subtree, then the root, then the right subtree.",5.0,1,0.6997344493865967,0.4264014327112209,0.4372928738594055,0.3379433751106262
1826,What is the inorder traversal of a binary tree?,it goes from lowest to highest inside of the tree,"Traverse the left subtree, then the root, then the right subtree.",2.0,0,0.8250073790550232,0.0,0.3342043161392212,0.4454400837421417
1827,What is the inorder traversal of a binary tree?,"starting by displaying the node furthest to the right, then the node, then the node on the right, in recursive order.","Traverse the left subtree, then the root, then the right subtree.",4.0,1,0.9574394822120667,0.47140452079103173,0.6753184795379639,0.461076021194458
1828,What is the inorder traversal of a binary tree?,It travels left to right,"Traverse the left subtree, then the root, then the right subtree.",3.5,0,0.8145520091056824,0.8164965809277261,0.7224737405776978,0.5905687808990479
1829,What is the inorder traversal of a binary tree?,void inorderptNode ptrifptrinorderptr implies left; coutdata; inorderptr implies right;,"Traverse the left subtree, then the root, then the right subtree.",5.0,1,0.7304925918579102,0.4264014327112209,0.591089129447937,0.44866180419921875
1830,What is the inorder traversal of a binary tree?,"the root is in the middle. The left subtree is traversed first, then the root, and finally the right subtree.","Traverse the left subtree, then the root, then the right subtree.",5.0,1,0.964611291885376,0.838627869377535,0.8921612501144409,0.36176756024360657
1831,What is the inorder traversal of a binary tree?,"a traversal that visits the left branch first, then the parent node, then the right branch, recursively.","Traverse the left subtree, then the root, then the right subtree.",5.0,1,0.9466759562492371,0.4264014327112209,0.8594333529472351,0.688978910446167
1832,What is the inorder traversal of a binary tree?,"Inorder traversal visits the left branch of a nodeall the way to it is deepest left-most leafbefore visiting the node itself. After visiting the entire left branch and the node, it visits the node 's right branch following the same pattern of left child, node, right child.","Traverse the left subtree, then the root, then the right subtree.",5.0,1,0.9343764781951904,0.5222329678670936,0.7540078163146973,0.49949780106544495
1833,What is the inorder traversal of a binary tree?,left middle right,"Traverse the left subtree, then the root, then the right subtree.",5.0,1,0.757176399230957,0.8164965809277261,0.6266071796417236,0.5652146339416504
1834,What is the inorder traversal of a binary tree?,"You traverse all the nodes to the left, then visit the root, then traverse all the nodes on the right.","Traverse the left subtree, then the root, then the right subtree.",5.0,1,0.9557576775550842,0.7216878364870323,0.7283380031585693,0.5980744361877441
1835,What is the inorder traversal of a binary tree?,"you would go to the furthest down left most node, then to the root then to the rightif left and right existthen you would return one node previous and do the same until you reached the root, then go to the furthest down left most node on the right side of the root and continue this process","Traverse the left subtree, then the root, then the right subtree.",5.0,1,0.9398782253265381,0.7126966450997985,0.6906037330627441,0.5555540323257446
1836,What is the inorder traversal of a binary tree?,"it means that you traverse one subtree of a node, then look at the node itself before traversing the other subtree of the node","Traverse the left subtree, then the root, then the right subtree.",4.0,1,0.9404051303863525,0.5423261445466405,0.6612356305122375,0.43047094345092773
1837,What is the inorder traversal of a binary tree?,"Level order traversal is a traversal method by which levels are visited successively starting with level 0the root node, and nodes are visited from left to right on each level, with Push and Pop methods.","Traverse the left subtree, then the root, then the right subtree.",2.0,0,0.8841919302940369,0.31108550841912763,0.7119662761688232,0.4739116430282593
1838,How many comparisons does it take to find an element in a binary search tree?,This is on the runtime order of lognwhere n is the number of nodes in the binary tree.,The height of the treeor log of the number of elements in the tree.,5.0,1,0.926100492477417,0.5345224838248489,0.5162920355796814,0.5565850138664246
1839,How many comparisons does it take to find an element in a binary search tree?,In a binary search tree of size n it takes logncomparisons to find a specified element.,The height of the treeor log of the number of elements in the tree.,5.0,1,0.8761746287345886,0.3535533905932738,0.43555718660354614,0.5565996766090393
1840,How many comparisons does it take to find an element in a binary search tree?,n minus 1 divided by 2 is the algorithm to compare and find an element.,The height of the treeor log of the number of elements in the tree.,2.0,0,0.8369814157485962,0.0,0.2314746081829071,0.2298995703458786
1841,How many comparisons does it take to find an element in a binary search tree?,At most its equivalent to the height of the tree.,The height of the treeor log of the number of elements in the tree.,5.0,1,0.9454888701438904,0.8164965809277261,0.7588315010070801,0.6395511031150818
1842,How many comparisons does it take to find an element in a binary search tree?,Logn,The height of the treeor log of the number of elements in the tree.,5.0,1,-0.045510634779930115,0.0,0.37054863572120667,0.3170033097267151
1843,How many comparisons does it take to find an element in a binary search tree?,Olog n,The height of the treeor log of the number of elements in the tree.,5.0,1,0.3135516941547394,0.0,0.3315242528915405,0.2987930178642273
1844,How many comparisons does it take to find an element in a binary search tree?,Depends on what half of the tree and the levels you have.,The height of the treeor log of the number of elements in the tree.,3.5,0,0.9102283716201782,0.5,0.5934101343154907,0.48799794912338257
1845,How many comparisons does it take to find an element in a binary search tree?,Olog nin balanced trees,The height of the treeor log of the number of elements in the tree.,5.0,1,0.4680876135826111,0.0,0.6582956910133362,0.5845159292221069
1846,How many comparisons does it take to find an element in a binary search tree?,n minus 1,The height of the treeor log of the number of elements in the tree.,2.5,0,0.44039222598075867,0.0,0.22011321783065796,0.25457632541656494
1847,How many comparisons does it take to find an element in a binary search tree?,logn,The height of the treeor log of the number of elements in the tree.,5.0,1,-0.045510634779930115,0.0,0.37054863572120667,0.3170033097267151
1848,How many comparisons does it take to find an element in a binary search tree?,Onlogn,The height of the treeor log of the number of elements in the tree.,2.5,0,0.0,0.0,0.24743780493736267,0.39325618743896484
1849,How many comparisons does it take to find an element in a binary search tree?,nLogn,The height of the treeor log of the number of elements in the tree.,2.0,0,-0.2926380932331085,0.0,0.254899799823761,0.33683913946151733
1850,How many comparisons does it take to find an element in a binary search tree?,logn,The height of the treeor log of the number of elements in the tree.,5.0,1,-0.045510634779930115,0.0,0.37054863572120667,0.3170033097267151
1851,How many comparisons does it take to find an element in a binary search tree?,"at the minimum lognor log2, at the maximum N searches, where N is the number of nodes.",The height of the treeor log of the number of elements in the tree.,4.5,1,0.867218554019928,0.3779644730092273,0.4037986397743225,0.47307491302490234
1852,How many comparisons does it take to find an element in a binary search tree?,On,The height of the treeor log of the number of elements in the tree.,3.0,0,0.0,0.0,0.0,0.0
1853,How many comparisons does it take to find an element in a binary search tree?,It takes at most 3 comparisons to find and element in a binary search tree,The height of the treeor log of the number of elements in the tree.,1.5,0,0.8578123450279236,0.4082482904638631,0.4264407157897949,0.4753757119178772
1854,How many comparisons does it take to find an element in a binary search tree?,lognwhere n equals the number of nodes.,The height of the treeor log of the number of elements in the tree.,5.0,1,0.8309407234191895,0.5,0.4763156771659851,0.36120158433914185
1855,How many comparisons does it take to find an element in a binary search tree?,it takes as many comparisons as the number of levels of the binary search tree. it only compares one number at each level,The height of the treeor log of the number of elements in the tree.,5.0,1,0.9080565571784973,0.6123724356957946,0.32349517941474915,0.4731786847114563
1856,How many comparisons does it take to find an element in a binary search tree?,At most it takes one less comparisons than the tree 's height. In big-O notation it takes Olog ncomparisons if the tree is balanced.,The height of the treeor log of the number of elements in the tree.,5.0,1,0.8658990859985352,0.5477225575051663,0.5983902812004089,0.5782382488250732
1857,How many comparisons does it take to find an element in a binary search tree?,Olog n,The height of the treeor log of the number of elements in the tree.,5.0,1,0.3135516941547394,0.0,0.3315242528915405,0.2987930178642273
1858,How many comparisons does it take to find an element in a binary search tree?,log n comparisons,The height of the treeor log of the number of elements in the tree.,5.0,1,0.5285007357597351,0.7071067811865476,0.35583075881004333,0.41283464431762695
1859,How many comparisons does it take to find an element in a binary search tree?,n to the power of kminus 1 where k is the height of the tree,The height of the treeor log of the number of elements in the tree.,1.5,0,0.9385800361633301,0.7071067811865476,0.770196259021759,0.49679034948349
1860,How many comparisons does it take to find an element in a binary search tree?,"it takes h comparisons, where h is the height of the tree",The height of the treeor log of the number of elements in the tree.,5.0,1,0.8821284770965576,0.7071067811865476,0.7442082166671753,0.6082251071929932
1861,How many comparisons does it take to find an element in a binary search tree?,2 way key comparison,The height of the treeor log of the number of elements in the tree.,1.0,0,0.7106627225875854,0.0,0.1428905874490738,0.1084413230419159
1862,What are the elements typically included in a class definition?,"The name of the class file, the parameters it must take to perform its function. Also a brief description of what the class does.",Function members and data members.,3.0,0,0.7755191326141357,0.30151134457776363,0.5933622121810913,0.299713134765625
1863,What are the elements typically included in a class definition?,"access specifiers and functions, oftentimes a constructor.",Function members and data members.,3.0,0,0.8015832901000977,0.0,0.8321236371994019,0.32759618759155273
1864,What are the elements typically included in a class definition?,"The elements typically included in a class definition are the function prototypes, usually declared public, and the data members used in the class, which are usually declared private.",Function members and data members.,5.0,1,0.8131126165390015,0.3405026123034995,0.5161342620849609,0.5354887247085571
1865,What are the elements typically included in a class definition?,"Class is user defined. It contains members, data and functions. The keyword class is used and includes brackets",Function members and data members.,4.0,1,0.853224515914917,0.3585685828003181,0.793000340461731,0.21343286335468292
1866,What are the elements typically included in a class definition?,Member functions and data members.,Function members and data members.,5.0,1,0.9774529337882996,0.670820393249937,0.955669641494751,0.8752172589302063
1867,What are the elements typically included in a class definition?,the functions and variables used when the object is defined for the class.,Function members and data members.,4.0,1,0.7941471338272095,0.0,0.7225292921066284,0.4856167137622833
1868,What are the elements typically included in a class definition?,"Data members, functions and function definitions, variables.",Function members and data members.,5.0,1,0.8703988790512085,0.6666666666666669,0.8915343880653381,0.6879656314849854
1869,What are the elements typically included in a class definition?,return type and input parameters,Function members and data members.,2.5,0,0.7304677963256836,0.0,0.8490588665008545,0.35501760244369507
1870,What are the elements typically included in a class definition?,Constructor Data members Methods,Function members and data members.,4.5,1,0.832356870174408,0.670820393249937,0.9285051822662354,0.5261369943618774
1871,What are the elements typically included in a class definition?,"Function members and member attributes, or in other words, the class variables and functions.",Function members and data members.,5.0,1,0.8908542394638062,0.474341649025257,0.816668689250946,0.6240103840827942
1872,What are the elements typically included in a class definition?,"The elements that are included in a class definition is the access-modifier, data types, variables, and function signatures.",Function members and data members.,4.0,1,0.818913996219635,0.4264014327112209,0.7901564836502075,0.526596188545227
1873,What are the elements typically included in a class definition?,The variables and function prototypes.,Function members and data members.,4.0,1,0.7829995155334473,0.5773502691896258,0.8566941022872925,0.38101842999458313
1874,What are the elements typically included in a class definition?,public and private variables and initiations of functions included in the class.,Function members and data members.,4.0,1,0.8316804766654968,0.0,0.6017706990242004,0.4276878237724304
1875,What are the elements typically included in a class definition?,The return value and the accepted value.,Function members and data members.,1.5,0,0.7327077388763428,0.0,0.6840760707855225,0.24874410033226013
1876,What are the elements typically included in a class definition?,"A class definition typically includes the class name, the classes constructors, and any extra functions and class variables.",Function members and data members.,4.0,1,0.7781239748001099,0.0,0.617423415184021,0.3661364018917084
1877,What are the elements typically included in a class definition?,"Parameters and their type, Class name, and return type, and the code to be executed in the class.",Function members and data members.,3.0,0,0.7770707011222839,0.0,0.5952020287513733,0.31988435983657837
1878,What are the elements typically included in a class definition?,"data members, class variables, and functions",Function members and data members.,5.0,1,0.872786283493042,0.6000000000000001,0.8665190935134888,0.7264080047607422
1879,What are the elements typically included in a class definition?,"Constructor, functions, and variables native to the class.",Function members and data members.,4.0,1,0.7837519645690918,0.0,0.7697116136550903,0.43703144788742065
1880,What are the elements typically included in a class definition?,functions and data members,Function members and data members.,5.0,1,0.9531797766685486,0.7745966692414836,0.9692312479019165,0.7148568630218506
1881,What are the elements typically included in a class definition?,data members and function definitions,Function members and data members.,5.0,1,0.92073655128479,0.8164965809277261,0.9543774127960205,0.8434085845947266
1882,What are the elements typically included in a class definition?,member functions and data members,Function members and data members.,5.0,1,0.9575833082199097,0.670820393249937,0.9480648040771484,0.8630605936050415
1883,What are the elements typically included in a class definition?,"constructor, and function definitions.",Function members and data members.,3.5,0,0.7756440043449402,0.5773502691896258,0.8785079717636108,0.6057786345481873
1884,What are the elements typically included in a class definition?,class name data of class definition of functions and methods,Function members and data members.,4.5,1,0.7885554432868958,0.3535533905932738,0.7215410470962524,0.5324902534484863
1885,What are the elements typically included in a class definition?,"A class definition includes the definitions of the class 's constructorsand any public or private functions. Of course, it also includes the class header and any necessary C libraries",Function members and data members.,3.0,0,0.7902554869651794,0.0,0.475040078163147,0.3808204233646393
1886,What are the elements typically included in a class definition?,"Class name,, semicoln at the end of the defination, private and bublic followed by :",Function members and data members.,3.0,0,0.7079417109489441,0.0,0.4454491138458252,0.2835466265678406
1887,What are the elements typically included in a class definition?,"a constructor, private and public variables, and function prototypes",Function members and data members.,4.0,1,0.7833349108695984,0.4082482904638631,0.8248399496078491,0.36840739846229553
1888,What are the elements typically included in a class definition?,"Data variables and Functions, Data members",Function members and data members.,5.0,1,0.8769884705543518,0.6761234037828133,0.9336143732070923,0.7755622267723083
1889,What are the elements typically included in a class definition?,class definitions include the name of the class and type of parameters,Function members and data members.,3.0,0,0.7450385689735413,0.0,0.7195421457290649,0.2536553144454956
1890,What are the elements typically included in a class definition?,"class variables, class function prototypes",Function members and data members.,4.5,1,0.64788818359375,0.37796447300922725,0.7536125183105469,0.33749914169311523
1891,What are the elements typically included in a class definition?,input ADDRESS return type elements,Function members and data members.,2.5,0,0.7074517011642456,0.0,0.8272238969802856,0.30357277393341064
1892,What are the access-specifiers that can be used in a C plus plus class definition?,Public and private specifiers.,Private and public.,5.0,1,0.9458986520767212,0.8164965809277261,0.8006212711334229,0.5681045651435852
1893,What are the access-specifiers that can be used in a C plus plus class definition?,"Public, Private, Restricted",Private and public.,5.0,1,0.8574730157852173,0.8164965809277261,0.9135134220123291,0.5986605882644653
1894,What are the access-specifiers that can be used in a C plus plus class definition?,The access specifiers are public and private.,Private and public.,5.0,1,0.9249404668807983,0.7071067811865476,0.7967367172241211,0.6087163686752319
1895,What are the access-specifiers that can be used in a C plus plus class definition?,public private protected,Private and public.,5.0,1,0.8654664754867554,0.8164965809277261,0.822376012802124,0.61273193359375
1896,What are the access-specifiers that can be used in a C plus plus class definition?,Public or Private.,Private and public.,5.0,1,0.9640028476715088,1.0000000000000002,0.947498083114624,0.8504981994628906
1897,What are the access-specifiers that can be used in a C plus plus class definition?,public: the function or variable can be used outside the class private: the function or variable can only be used with the class,Private and public.,5.0,1,0.7572826147079468,0.3244428422615251,0.578945517539978,0.3470172584056854
1898,What are the access-specifiers that can be used in a C plus plus class definition?,Public and Private,Private and public.,5.0,1,0.9633318185806274,1.0000000000000002,0.9713343381881714,0.9093923568725586
1899,What are the access-specifiers that can be used in a C plus plus class definition?,public private and protected,Private and public.,5.0,1,0.9230782389640808,0.8164965809277261,0.8619697093963623,0.6204172372817993
1900,What are the access-specifiers that can be used in a C plus plus class definition?,Public Private,Private and public.,5.0,1,0.8991989493370056,1.0000000000000002,0.9208590984344482,0.816342830657959
1901,What are the access-specifiers that can be used in a C plus plus class definition?,"Private, public, protected",Private and public.,5.0,1,0.8671050071716309,0.8164965809277261,0.8715964555740356,0.6544643640518188
1902,What are the access-specifiers that can be used in a C plus plus class definition?,The access-specifiers that can be used in a C plus plus class definition is private and public.,Private and public.,5.0,1,0.8467485904693604,0.4264014327112209,0.7142218351364136,0.5520546436309814
1903,What are the access-specifiers that can be used in a C plus plus class definition?,public and private.,Private and public.,5.0,1,1.0000001192092896,1.0000000000000002,0.9898087978363037,0.9243969917297363
1904,What are the access-specifiers that can be used in a C plus plus class definition?,"static, long, unsigned",Private and public.,0.5,0,0.5613259077072144,0.0,0.6168307662010193,0.1277182251214981
1905,What are the access-specifiers that can be used in a C plus plus class definition?,"Private, Public, Protected, or Friend.",Private and public.,5.0,1,0.8691738843917847,0.7071067811865476,0.7912405729293823,0.47006452083587646
1906,What are the access-specifiers that can be used in a C plus plus class definition?,"A C plus plus class definition may include access-specifiers public, private, and static.",Private and public.,4.5,1,0.8528662919998169,0.4082482904638631,0.5178698301315308,0.46068426966667175
1907,What are the access-specifiers that can be used in a C plus plus class definition?,"local, global, local-variable, function specific",Private and public.,2.5,0,0.665134072303772,0.0,0.4779336452484131,0.2856324315071106
1908,What are the access-specifiers that can be used in a C plus plus class definition?,"public, private",Private and public.,5.0,1,0.9144762754440308,1.0000000000000002,0.9633329510688782,0.829790472984314
1909,What are the access-specifiers that can be used in a C plus plus class definition?,"Public, protected, and private.",Private and public.,5.0,1,0.9195142388343811,0.8164965809277261,0.9149654507637024,0.6079772710800171
1910,What are the access-specifiers that can be used in a C plus plus class definition?,"private, public",Private and public.,5.0,1,0.9144762754440308,1.0000000000000002,0.968816876411438,0.8737449645996094
1911,What are the access-specifiers that can be used in a C plus plus class definition?,public can be accessed by any of the program private can only be accessed by the class functions themselves and no outside functions or calls,Private and public.,5.0,1,0.8171815872192383,0.37796447300922725,0.3881934881210327,0.38723406195640564
1912,What are the access-specifiers that can be used in a C plus plus class definition?,"public, private, protected",Private and public.,5.0,1,0.8671050071716309,0.8164965809277261,0.892116367816925,0.6307633519172668
1913,What are the access-specifiers that can be used in a C plus plus class definition?,public and private,Private and public.,5.0,1,0.9633318185806274,1.0000000000000002,0.9713343381881714,0.9093923568725586
1914,What are the access-specifiers that can be used in a C plus plus class definition?,"public, private, protected",Private and public.,5.0,1,0.8671050071716309,0.8164965809277261,0.892116367816925,0.6307633519172668
1915,What are the access-specifiers that can be used in a C plus plus class definition?,"functions and data members can be given access-specifications of public, private, and friend. public access is given to any functions or members not given specific access rights.",Private and public.,5.0,1,0.8604843616485596,0.35355339059327373,0.5074021220207214,0.5275947451591492
1916,What are the access-specifiers that can be used in a C plus plus class definition?,data member or data functions are access specifiers,Private and public.,0.5,0,0.6891084909439087,0.0,0.4630316495895386,0.3365752696990967
1917,What are the access-specifiers that can be used in a C plus plus class definition?,public or private,Private and public.,5.0,1,0.9180464148521423,1.0000000000000002,0.9232529401779175,0.8370664119720459
1918,What are the access-specifiers that can be used in a C plus plus class definition?,public and private,Private and public.,5.0,1,0.9633318185806274,1.0000000000000002,0.9713343381881714,0.9093923568725586
1919,What are the access-specifiers that can be used in a C plus plus class definition?,public and private,Private and public.,5.0,1,0.9633318185806274,1.0000000000000002,0.9713343381881714,0.9093923568725586
1920,What are the access-specifiers that can be used in a C plus plus class definition?,"public can be accessed from outside the class private accessible only from inside the class, not inherited protected accessible only from inside the class, inherited",Private and public.,5.0,1,0.8121207356452942,0.2773500981126146,0.5519055128097534,0.4419962465763092
1921,What are the access-specifiers that can be used in a C plus plus class definition?,public private protected,Private and public.,5.0,1,0.8654664754867554,0.8164965809277261,0.822376012802124,0.61273193359375
1922,How are objects initialized when they are created?,ie. GradeBook myGradeBook ; call upon the class and then give it a name like shown,By using constructors.,1.5,0,0.7031512260437012,0.0,0.4175930917263031,0.22479350864887238
1923,How are objects initialized when they are created?,They are initialized as a named instance of the template formed by the class. This named instance can then be modified to be different from the class that it was created from.,By using constructors.,3.5,0,0.7386631965637207,0.0,0.5919784307479858,0.26760563254356384
1924,How are objects initialized when they are created?,not answered,By using constructors.,0.0,0,0.5082195997238159,0.0,0.36273083090782166,0.051829323172569275
1925,How are objects initialized when they are created?,Objects are initialized by a value given. When an object is defined for a certain task.,By using constructors.,2.5,0,0.7814782857894897,0.0,0.8153870105743408,0.29314035177230835
1926,How are objects initialized when they are created?,They are initialized with a . dotbetween the constructor and the object being created.,By using constructors.,2.5,0,0.7763665914535522,0.0,0.8317107558250427,0.22029614448547363
1927,How are objects initialized when they are created?,objectname classname ; to call a function from the class: objectname. funciton ;,By using constructors.,1.5,0,0.6369516253471375,0.0,0.7098930478096008,0.21363157033920288
1928,How are objects initialized when they are created?,"If the object refers to a class, the constructorswill initialize the objects based on return type and parameters passed. Compiler will auto-create one if one is not provided.",By using constructors.,5.0,1,0.7352969646453857,0.0,0.5900528430938721,0.28447261452674866
1929,How are objects initialized when they are created?,classname objectnameinput parameters;,By using constructors.,3.0,0,0.5040881633758545,0.0,0.7520190477371216,0.2514355480670929
1930,How are objects initialized when they are created?,When the class is called by the Constructor,By using constructors.,3.5,0,0.6853232383728027,0.0,0.7327964305877686,0.38419589400291443
1931,How are objects initialized when they are created?,"Constructors; default when not provided by user, or programmer specified constructors.",By using constructors.,5.0,1,0.8330981135368347,0.6666666666666666,0.6314086318016052,0.2985171675682068
1932,How are objects initialized when they are created?,Objects are usually initialized at the beginning of the program and are initialized usually in the main function. They are initialized after the class 's name.,By using constructors.,2.5,0,0.7321615219116211,0.0,0.5333600640296936,0.29451099038124084
1933,How are objects initialized when they are created?,"; or, if you want to initialize a variable to a certain value, equals;",By using constructors.,2.5,0,0.6712136268615723,0.0,0.5998032093048096,0.14182588458061218
1934,How are objects initialized when they are created?,"variables are set to a given value, or 0 if none is given.",By using constructors.,1.0,0,0.7093737125396729,0.0,0.5468877553939819,0.07919992506504059
1935,How are objects initialized when they are created?,"When the object is initialized, its constructor is calledwhether one is provided or c plus plus assigns a default constructor.",By using constructors.,5.0,1,0.7172498106956482,0.0,0.7276694774627686,0.41250255703926086
1936,How are objects initialized when they are created?,"Objects are initialized essentially as copies of the corresponding classes, complete with their own separate variables.",By using constructors.,2.5,0,0.7506904602050781,0.0,0.6314250230789185,0.13757847249507904
1937,How are objects initialized when they are created?,"If you had a class Gradebook, you would initialize it in your main function by use of a constructor in the Gradebook class. If no constructor is specified or found, c plus plus will use a default one with no parameters. Gradebook myGradebook; In this bit of code, the class Gradebook has been initialized as object myGradebook.",By using constructors.,5.0,1,0.7490590810775757,0.0,0.4017620384693146,0.2695136070251465
1938,How are objects initialized when they are created?,objects are initialized by stating the classname first then assigning a name to the object. Within the object 's is a place where it can be initialized.,By using constructors.,3.5,0,0.7477760314941406,0.0,0.6850700974464417,0.2656148672103882
1939,How are objects initialized when they are created?,They are initialized with a constructor.,By using constructors.,5.0,1,0.7926822304725647,0.0,0.8730872273445129,0.6870242357254028
1940,How are objects initialized when they are created?,"The value is specified after declaration, It can initialized anywhere between the declaration and the corresponding.",By using constructors.,2.5,0,0.6987714171409607,0.0,0.6275138854980469,0.21595805883407593
1941,How are objects initialized when they are created?,"with the default constructor for that object in its class. if no constructor is specified, it uses the default system constructor.",By using constructors.,4.5,1,0.7188460230827332,0.0,0.5528169870376587,0.29245346784591675
1942,How are objects initialized when they are created?,initialized using the same name as the class,By using constructors.,2.5,0,0.7207584977149963,0.5773502691896258,0.5626067519187927,0.17599765956401825
1943,How are objects initialized when they are created?,they are initialized to a value dependent on the compiler,By using constructors.,1.0,0,0.7296591997146606,0.0,0.7832216024398804,0.3341499865055084
1944,How are objects initialized when they are created?,memory is allocated in accordance with their type and initialization input.,By using constructors.,2.0,0,0.7292525172233582,0.0,0.6958578824996948,0.2874736785888672
1945,How are objects initialized when they are created?,Objects are assigned a space in memory when they are created. the name given to the object points to the memory address where the objects data resides.,By using constructors.,1.0,0,0.7271289229393005,0.0,0.6381827592849731,0.3288944959640503
1946,How are objects initialized when they are created?,using constructor,By using constructors.,5.0,1,0.7063502073287964,0.7071067811865476,0.9699392318725586,0.8294450044631958
1947,How are objects initialized when they are created?,by giving them a value,By using constructors.,1.5,0,0.7559589147567749,0.0,0.7121710777282715,0.2598414421081543
1948,How are objects initialized when they are created?,"By declaring the class first, the name of the variable, and then any variables that need to be put in the constructor. Ex. Class myClassx, y",By using constructors.,5.0,1,0.7321365475654602,0.0,0.578181803226471,0.22720380127429962
1949,How are objects initialized when they are created?,"objects are initialized by giving the object a type, name, and initial value",By using constructors.,2.5,0,0.768634557723999,0.0,0.7457041144371033,0.3500964045524597
1950,How are objects initialized when they are created?,they are initialized to 0,By using constructors.,1.0,0,0.6933366060256958,0.0,0.5473755598068237,0.21831771731376648
1951,How are objects initialized when they are created?,"obj. are initialized by the variables that call them, when they are created within a class. e. i. classname objectname etc.",By using constructors.,2.5,0,0.8006260991096497,0.0,0.658713698387146,0.22567564249038696
1952,What is a function signature?,"Name of the function, parameters it must receive in order to perform and a return type.","The name of the function and the list of parameters, including their types.",5.0,1,0.9241892695426941,0.5345224838248489,0.8965685963630676,0.7378168106079102
1953,What is a function signature?,a function signature is the elements that make it unique such as the variables it calls for and also I suppose this includes the program it is in.,"The name of the function and the list of parameters, including their types.",4.0,1,0.9077883362770081,0.316227766016838,0.8068689107894897,0.5803415775299072
1954,What is a function signature?,"A function signature is the return type of a function, its name, and the number and type of its parameters.","The name of the function and the list of parameters, including their types.",5.0,1,0.9461984038352966,0.6123724356957946,0.8931210041046143,0.7558325529098511
1955,What is a function signature?,function prototype that contains functions and data members.,"The name of the function and the list of parameters, including their types.",3.0,0,0.8566408157348633,0.4082482904638631,0.8492600917816162,0.6544311046600342
1956,What is a function signature?,A function signature is a declaration of the function that includes the parameter types and the number of parameters.,"The name of the function and the list of parameters, including their types.",5.0,1,0.9447643160820007,0.6963106238227914,0.9205825328826904,0.837337851524353
1957,What is a function signature?,the declaration of the function.,"The name of the function and the list of parameters, including their types.",2.5,0,0.9056463837623596,0.7071067811865476,0.7254117131233215,0.5929413437843323
1958,What is a function signature?,"Includes the name, accepted parameters, and return type.","The name of the function and the list of parameters, including their types.",5.0,1,0.9124744534492493,0.447213595499958,0.906316876411438,0.5844184756278992
1959,What is a function signature?,its return type and its input parameters,"The name of the function and the list of parameters, including their types.",5.0,1,0.8557672500610352,0.5,0.8264802694320679,0.550788402557373
1960,What is a function signature?,Contains the function name and its paramaters. The return type is not included,"The name of the function and the list of parameters, including their types.",5.0,1,0.9351668357849121,0.4082482904638631,0.4687253534793854,0.6371051073074341
1961,What is a function signature?,"Return type, function name, and the parameter types","The name of the function and the list of parameters, including their types.",5.0,1,0.9077604413032532,0.632455532033676,0.9282196760177612,0.6817857027053833
1962,What is a function signature?,The function signature tells what the function parameters and includes all the function calls,"The name of the function and the list of parameters, including their types.",4.0,1,0.9116660952568054,0.7559289460184545,0.8299468755722046,0.7749606966972351
1963,What is a function signature?,"The function 's name, as well as what it returns and what it accepts.","The name of the function and the list of parameters, including their types.",5.0,1,0.8783212304115295,0.5773502691896258,0.8059848546981812,0.47936487197875977
1964,What is a function signature?,the body of the function that holds all the actual code,"The name of the function and the list of parameters, including their types.",2.0,0,0.9153081178665161,0.447213595499958,0.6494860053062439,0.42445462942123413
1965,What is a function signature?,A function signature is the return type and accepted pass value type it takes,"The name of the function and the list of parameters, including their types.",3.5,0,0.8668980598449707,0.30151134457776363,0.7681269645690918,0.39707401394844055
1966,What is a function signature?,A function signature specifies the name and input variables of a function.,"The name of the function and the list of parameters, including their types.",5.0,1,0.8927666544914246,0.7071067811865476,0.9274083375930786,0.6800104975700378
1967,What is a function signature?,A function signature is the function 's parameters and their type and the name of the function. The return type is not a part of the function signature.,"The name of the function and the list of parameters, including their types.",5.0,1,0.9402311444282532,0.6933752452815365,0.556445300579071,0.8988014459609985
1968,What is a function signature?,the name of the function and what it accepts or returns,"The name of the function and the list of parameters, including their types.",5.0,1,0.920234203338623,0.5773502691896258,0.8552588224411011,0.4306154251098633
1969,What is a function signature?,"the unique identifier of a function, which includes input variables along with the function name, but excludes the output type.","The name of the function and the list of parameters, including their types.",4.5,1,0.9327266216278076,0.5773502691896258,0.6800488233566284,0.4934934377670288
1970,What is a function signature?,"The order, number, and type of data items included inside the function parameters.","The name of the function and the list of parameters, including their types.",5.0,1,0.9469637274742126,0.4714045207910317,0.8909356594085693,0.6582151055335999
1971,What is a function signature?,"its the scope, type, and parameters of that function that give it it is properties and defines it against other functions.","The name of the function and the list of parameters, including their types.",5.0,1,0.9250290393829346,0.5345224838248489,0.8449733853340149,0.6808581352233887
1972,What is a function signature?,"is the name of the fuction, return type, and parameters that are being used","The name of the function and the list of parameters, including their types.",5.0,1,0.9464071989059448,0.447213595499958,0.9032642841339111,0.6320677995681763
1973,What is a function signature?,"a function signature should include the name of the function, parameters, and a body.","The name of the function and the list of parameters, including their types.",4.0,1,0.9438785910606384,0.7500000000000002,0.8338295221328735,0.7909671068191528
1974,What is a function signature?,the name of the function and the arguments passed to that function,"The name of the function and the list of parameters, including their types.",5.0,1,0.934735894203186,0.8164965809277261,0.8856288194656372,0.5721677541732788
1975,What is a function signature?,"A function signature, used in a function 's prototype, is the set of object types it take in as parameters, with or without names given for the objects.","The name of the function and the list of parameters, including their types.",5.0,1,0.9384313225746155,0.6172133998483678,0.8415037393569946,0.5965405702590942
1976,What is a function signature?,function name and parameter are called function signature.,"The name of the function and the list of parameters, including their types.",5.0,1,0.8817329406738281,0.7559289460184545,0.8791661262512207,0.689848780632019
1977,What is a function signature?,fuction name and parameters,"The name of the function and the list of parameters, including their types.",5.0,1,0.8372130393981934,0.7071067811865476,0.7748132944107056,0.5302544832229614
1978,What is a function signature?,"The parameters needed, the return type, and name of the function.","The name of the function and the list of parameters, including their types.",5.0,1,0.9568747282028198,0.632455532033676,0.9300463199615479,0.7697420120239258
1979,What is a function signature?,"the signature of a function includes the name of the function, the number and types of parameters, and the return type","The name of the function and the list of parameters, including their types.",5.0,1,0.9761254191398621,0.6963106238227914,0.9343369603157043,0.7821335792541504
1980,What is a function signature?,"It is what uniquely separates overloaded functions. It includes the return type, and the parameter list of the function.","The name of the function and the list of parameters, including their types.",5.0,1,0.9394389390945435,0.44721359549995804,0.7790447473526001,0.4089532196521759
1981,What is a function signature?,"function sig is, is what is the class recognizes as the main function, or rather its specification","The name of the function and the list of parameters, including their types.",2.0,0,0.8768095970153809,0.6666666666666666,0.7688071727752686,0.4745827913284302
1982,What is a recursive function?,A function that calls upon it self to solve a problem. Each time it calls upon it self it splits up a problem into a simplier form until it reaches a base case which is the most simplest form of the problem.,A function that calls itself.,5.0,1,0.9287793040275574,0.3872983346207417,0.3869835138320923,0.7548509836196899
1983,What is a recursive function?,A function that calls itself to perform an opperation such as a factorial recursive function.,A function that calls itself.,5.0,1,0.9312805533409119,0.7071067811865475,0.8072735071182251,0.34491658210754395
1984,What is a recursive function?,not answered,A function that calls itself.,0.0,0,0.6131278276443481,0.0,0.4474351406097412,0.13700804114341736
1985,What is a recursive function?,A base case that calls upon itself until the problem becomes smaller and terminates.,A function that calls itself.,4.0,1,0.91693514585495,0.4082482904638631,0.5594595670700073,0.27498239278793335
1986,What is a recursive function?,It is a function that calls itself. It runs multiple times until the base case is reached.,A function that calls itself.,5.0,1,0.9425156116485596,0.5000000000000001,0.6036390066146851,0.9595057964324951
1987,What is a recursive function?,a function that calls itself untill it reaches a base case.,A function that calls itself.,5.0,1,0.9499732255935669,0.5773502691896258,0.8033373355865479,0.5840975642204285
1988,What is a recursive function?,"A function that calls itself. Each time it does, it must get smaller, and eventually MUST converge to a base case, otherwise you can start an infinite loop.",A function that calls itself.,5.0,1,0.912926197052002,0.4082482904638631,0.3958142399787903,1.000000238418579
1989,What is a recursive function?,a function that calls itself until a base case is met,A function that calls itself.,5.0,1,0.9393827319145203,0.632455532033676,0.7866295576095581,0.5625631213188171
1990,What is a recursive function?,A function that calls itself. With each function call the problem is diminished.,A function that calls itself.,5.0,1,0.975199818611145,0.8017837257372733,0.5863869190216064,1.000000238418579
1991,What is a recursive function?,A function that calls itself to perform a certain task,A function that calls itself.,5.0,1,0.9390586018562317,0.632455532033676,0.8061462640762329,0.697149395942688
1992,What is a recursive function?,A recursive function is a function that calls itself. Usually called the base case. If the base case is not correct it causes a infinite loop.,A function that calls itself.,5.0,1,0.9511794447898865,0.4743416490252569,0.5699479579925537,0.5807315111160278
1993,What is a recursive function?,"A function that calls itself, in order to solve a problem.",A function that calls itself.,5.0,1,0.9425327777862549,0.632455532033676,0.7547658681869507,0.745984673500061
1994,What is a recursive function?,"a function that calls itself over and over until it finds the simplest form of solution, or the base case.",A function that calls itself.,5.0,1,0.9225471019744873,0.5000000000000001,0.6315810680389404,0.4551204442977905
1995,What is a recursive function?,"A recursive function is a function that calls itself repeatedly until a base case is achieved. The fundamental idea is to break one large problem into a series of smaller, similar problems.",A function that calls itself.,5.0,1,0.9392400979995728,0.48666426339228774,0.47180527448654175,0.34202849864959717
1996,What is a recursive function?,"A recursive function typically simplifies a problem by calling itself, until arriving at a base case, at which it recursively returns a solution.",A function that calls itself.,5.0,1,0.9123958945274353,0.2886751345948129,0.555322527885437,0.3628365993499756
1997,What is a recursive function?,"A recursive function is a function that breaks down a large problem into two or more smaller problems and calls itself to solve those smaller problems until a base case or terminating point is reached. At the base case, a definite answer is called and the function no longer recurses, but unwinds itself back through function calls to determine the answer to the original large problem.",A function that calls itself.,4.5,1,0.9294672012329102,0.5432144762551112,0.333122193813324,0.38059890270233154
1998,What is a recursive function?,a function that calls itself into a loop with a base case for a loop exit.,A function that calls itself.,4.0,1,0.9167414307594299,0.4714045207910317,0.7583020925521851,0.38253551721572876
1999,What is a recursive function?,a function that calls itself until the base cases are met.,A function that calls itself.,5.0,1,0.9367589354515076,0.632455532033676,0.7471721768379211,0.5113781094551086
2000,What is a recursive function?,A recursive function only knows how to solve base cases A recursive function calls itself directly or indirectly until a base case is reached.,A function that calls itself.,5.0,1,0.9324654340744019,0.4743416490252569,0.4446503520011902,0.3435562252998352
2001,What is a recursive function?,a function that calls on itself and uses a base case to stop the recursion,A function that calls itself.,5.0,1,0.9320813417434692,0.5345224838248489,0.6538922786712646,0.320794939994812
2002,What is a recursive function?,"a function that calls itself, and which eaach calls get closer and close to the base case.",A function that calls itself.,5.0,1,0.9360361099243164,0.670820393249937,0.7422425746917725,0.45628419518470764
2003,What is a recursive function?,A function that divides and conquers a problem. There is a base case that will eventually be reached. The function calls itself over and over until the base case is satisfied.,A function that calls itself.,5.0,1,0.9296543002128601,0.48666426339228763,0.5818326473236084,0.3631742000579834
2004,What is a recursive function?,a function that calls itself in the definition code,A function that calls itself.,5.0,1,0.9358031153678894,0.7071067811865476,0.8238868713378906,0.8366401195526123
2005,What is a recursive function?,A recursive function solves a problem by repeatedly calling itself. the initial problem is broken into successively smaller parts until a much simpler base case is reached. the solutions to each piece of the problem are then returned a step at a time.,A function that calls itself.,5.0,1,0.9090536832809448,0.18898223650461363,0.2945007085800171,0.5842201113700867
2006,What is a recursive function?,"It invoke by itself again ana again, unless it reach bas case",A function that calls itself.,4.5,1,0.8124337196350098,0.0,0.4559175670146942,0.19148792326450348
2007,What is a recursive function?,"a function that solves a problem by dividing the problem into smaller problems, by calling its self again and again, until a base case is reached.",A function that calls itself.,5.0,1,0.9085310697555542,0.2672612419124244,0.49049121141433716,0.5533835887908936
2008,What is a recursive function?,"A function that calls itself over and over again till a base case is reached, then it returns back to the original function.",A function that calls itself.,5.0,1,0.9246297478675842,0.6396021490668313,0.617124617099762,0.39226993918418884
2009,What is a recursive function?,"a recursive function is a function that during execution, calls itself over and over until a base case is reached",A function that calls itself.,5.0,1,0.9362146854400635,0.670820393249937,0.6515085697174072,0.2919333279132843
2010,What is a recursive function?,A function that calls itself. Usually used to split a problem into several smaller problems of the same type.,A function that calls itself.,5.0,1,0.9236201047897339,0.4714045207910317,0.566910445690155,1.000000238418579
2011,What is a recursive function?,function that calls it self till the base case is met,A function that calls itself.,5.0,1,0.9164858460426331,0.5345224838248489,0.7035477161407471,0.4953295588493347
2012,What is the alternative way to solve a problem that could be solved through recursive functions?,"Iteration, performers a series of checks and loops.",Through iteration.,5.0,1,0.7934104800224304,0.447213595499958,0.6689255237579346,0.46619340777397156
2013,What is the alternative way to solve a problem that could be solved through recursive functions?,The alternative method is to use loops in the program instead of a function which calls itself.,Through iteration.,4.0,1,0.7456628680229187,0.0,0.4123631715774536,0.17769715189933777
2014,What is the alternative way to solve a problem that could be solved through recursive functions?,An alternative to solving a problem using recursive functions is to solve the problem using iteration.,Through iteration.,5.0,1,0.741646945476532,0.2672612419124244,0.4605846405029297,0.5098739862442017
2015,What is the alternative way to solve a problem that could be solved through recursive functions?,"Iteration, this would be more efficient and has repetition structure.",Through iteration.,5.0,1,0.7788822650909424,0.5,0.4787321090698242,0.3676283061504364
2016,What is the alternative way to solve a problem that could be solved through recursive functions?,One can use iteration or by using a simple while or for loop.,Through iteration.,5.0,1,0.7483550310134888,0.447213595499958,0.6072075366973877,0.4716542363166809
2017,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,Through iteration.,5.0,1,0.6204572319984436,1.0,0.9702223539352417,0.5434432029724121
2018,What is the alternative way to solve a problem that could be solved through recursive functions?,"Iteration. A while loop or a for loop will be able to accomplish the same desired outcome ... It may be faster than recursion, but could also be harder to understand.",Through iteration.,5.0,1,0.7502134442329407,0.27735009811261463,0.3436824083328247,0.5705031156539917
2019,What is the alternative way to solve a problem that could be solved through recursive functions?,you can also solve the problem iteratively,Through iteration.,5.0,1,0.6364193558692932,0.0,0.30685245990753174,0.3467123806476593
2020,What is the alternative way to solve a problem that could be solved through recursive functions?,iterative,Through iteration.,5.0,1,0.412431001663208,0.0,0.8857846260070801,0.6228567361831665
2021,What is the alternative way to solve a problem that could be solved through recursive functions?,Using iteration loops.,Through iteration.,5.0,1,0.8031405806541443,0.5773502691896258,0.8270751237869263,0.753505527973175
2022,What is the alternative way to solve a problem that could be solved through recursive functions?,Another alternative way to solve a problem instead of using recursive functions is by using iteration.,Through iteration.,5.0,1,0.7675409913063049,0.2886751345948129,0.38675782084465027,0.36111825704574585
2023,What is the alternative way to solve a problem that could be solved through recursive functions?,"A recursive function can often be solved using an iterative function, which runs faster, but is often more complicated.",Through iteration.,5.0,1,0.7431033253669739,0.0,0.3092415928840637,0.31268489360809326
2024,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,Through iteration.,5.0,1,0.6204572319984436,1.0,0.9702223539352417,0.5434432029724121
2025,What is the alternative way to solve a problem that could be solved through recursive functions?,Any recursive function can be solved using an iterative method.,Through iteration.,5.0,1,0.7031307816505432,0.0,0.5066922903060913,0.36034107208251953
2026,What is the alternative way to solve a problem that could be solved through recursive functions?,"Many recursive solutions may also be solved with looping control statements, such as while, for, do-while, etc.",Through iteration.,4.0,1,0.6875196099281311,0.0,0.3238059878349304,0.2412729263305664
2027,What is the alternative way to solve a problem that could be solved through recursive functions?,"Using an iterative function, which repeats a specified operation or set of operations until a terminating point or base case is reached.",Through iteration.,5.0,1,0.7454438209533691,0.0,0.6603592038154602,0.3713807165622711
2028,What is the alternative way to solve a problem that could be solved through recursive functions?,iteratively,Through iteration.,5.0,1,0.412431001663208,0.0,0.8697428703308105,0.5118116140365601
2029,What is the alternative way to solve a problem that could be solved through recursive functions?,using an Iterative calls,Through iteration.,5.0,1,0.6396861672401428,0.0,0.7597173452377319,0.6014035940170288
2030,What is the alternative way to solve a problem that could be solved through recursive functions?,Iteration.,Through iteration.,5.0,1,0.8765261769294739,1.0,0.9732179641723633,0.5705031156539917
2031,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration is the alternative way to solve a problem,Through iteration.,5.0,1,0.7141972780227661,0.447213595499958,0.5271602272987366,0.32260918617248535
2032,What is the alternative way to solve a problem that could be solved through recursive functions?,using an iterative solution instead,Through iteration.,5.0,1,0.6589836478233337,0.0,0.6943674087524414,0.5966652631759644
2033,What is the alternative way to solve a problem that could be solved through recursive functions?,"Using an iterative solution. For, while, or do while loop.",Through iteration.,5.0,1,0.7618468999862671,0.0,0.734538197517395,0.7137398719787598
2034,What is the alternative way to solve a problem that could be solved through recursive functions?,the alternative way to solve a problem that could be solved using recursion is iteration.,Through iteration.,5.0,1,0.7385488748550415,0.3535533905932738,0.5048539042472839,0.48334574699401855
2035,What is the alternative way to solve a problem that could be solved through recursive functions?,"Any problem solved recursively could be solved with an iterative function. Iterative replacements for recursive functions may be more difficult to program, but often lead to more efficient solutions to a problem.",Through iteration.,5.0,1,0.7176963090896606,0.0,0.25054284930229187,0.34669554233551025
2036,What is the alternative way to solve a problem that could be solved through recursive functions?,by iteration,Through iteration.,5.0,1,0.6369113326072693,1.0,0.9743884801864624,0.8456773161888123
2037,What is the alternative way to solve a problem that could be solved through recursive functions?,"itteration, like a for loop, a while loop, or a do while loop",Through iteration.,5.0,1,0.6731343269348145,0.0,0.663374662399292,0.3411937952041626
2038,What is the alternative way to solve a problem that could be solved through recursive functions?,Iteration by using loops,Through iteration.,5.0,1,0.6889250874519348,0.5773502691896258,0.7514886856079102,0.5387892723083496
2039,What is the alternative way to solve a problem that could be solved through recursive functions?,iterative functions,Through iteration.,5.0,1,0.5016247630119324,0.0,0.8373281359672546,0.4900381565093994
2040,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,Through iteration.,5.0,1,0.6204572319984436,1.0,0.9702223539352417,0.5434432029724121
2041,What is the alternative way to solve a problem that could be solved through recursive functions?,"the alt, way is to use a functions parameter in a call to function.",Through iteration.,3.0,0,0.7092846035957336,0.0,0.5239176750183105,0.17996495962142944
2042,What is the difference between an array that is declared as static and one that is not?,The array that is declared static retains its modified elements so once it is called upon again the latest elements are modified again. An array that is not declared static will keep its original elements.,The static arrays are intialized only once when the function is called.,5.0,1,0.954384446144104,0.39391929857916774,0.5841267108917236,0.4727354347705841
2043,What is the difference between an array that is declared as static and one that is not?,A static array only has a specific size and it cannot grow. Also static arrays cannot be accessed outside the program which created it.,The static arrays are intialized only once when the function is called.,3.0,0,0.9533650279045105,0.5883484054145522,0.6362568140029907,0.5930915474891663
2044,What is the difference between an array that is declared as static and one that is not?,Arrays declared as static are not created and initialized when a function is called and destroyed when the function terminates.,The static arrays are intialized only once when the function is called.,5.0,1,0.9693008661270142,0.7216878364870323,0.7323511838912964,0.36548328399658203
2045,What is the difference between an array that is declared as static and one that is not?,Static can be initialized and non-static cannot in C plus plus.,The static arrays are intialized only once when the function is called.,2.5,0,0.8584595322608948,0.6324555320336759,0.6927750706672668,0.4160727858543396
2046,What is the difference between an array that is declared as static and one that is not?,An array declared static remains the same throughout the execution of the program.,The static arrays are intialized only once when the function is called.,2.5,0,0.9218356609344482,0.4082482904638631,0.5655199289321899,0.4984807074069977
2047,What is the difference between an array that is declared as static and one that is not?,a static array will be called only once. once it has been declared the complier will ignore the static line if it comes to it again.,The static arrays are intialized only once when the function is called.,4.5,1,0.9512585997581482,0.6396021490668313,0.7710024118423462,0.771085262298584
2048,What is the difference between an array that is declared as static and one that is not?,"The static array will be available to the whole of the program, whereas an array that is not static is only available within the scope in which it is declared. or or pass-by-reference???",The static arrays are intialized only once when the function is called.,4.0,1,0.9445698857307434,0.48507125007266594,0.6623060703277588,0.5886734127998352
2049,What is the difference between an array that is declared as static and one that is not?,a static array has a predetermined size and that size cannot be altered,The static arrays are intialized only once when the function is called.,3.0,0,0.9052023887634277,0.3535533905932738,0.5545881986618042,0.5150772333145142
2050,What is the difference between an array that is declared as static and one that is not?,Arrays declared static can not be changed. One not declared static can be altered.,The static arrays are intialized only once when the function is called.,2.5,0,0.9205057621002197,0.6396021490668313,0.5883855819702148,0.39728406071662903
2051,What is the difference between an array that is declared as static and one that is not?,"an array that is declared as static will retain the values stored in it is elements between function calls, and will not reinitialize them to default values.",The static arrays are intialized only once when the function is called.,4.5,1,0.9477469325065613,0.37796447300922736,0.7140876054763794,0.5155901908874512
2052,What is the difference between an array that is declared as static and one that is not?,An array that is declared static causes anything that is not initialized to be set to 0.,The static arrays are intialized only once when the function is called.,2.5,0,0.9381394982337952,0.4082482904638631,0.6998461484909058,0.5358285903930664
2053,What is the difference between an array that is declared as static and one that is not?,A static array will have a null character at the end of the array.,The static arrays are intialized only once when the function is called.,3.0,0,0.9315547347068787,0.3535533905932738,0.6673733592033386,0.562176525592804
2054,What is the difference between an array that is declared as static and one that is not?,static arrays cannot be changed while normal arrays can be changed,The static arrays are intialized only once when the function is called.,2.5,0,0.9243934750556946,0.670820393249937,0.6241689920425415,0.4917564392089844
2055,What is the difference between an array that is declared as static and one that is not?,An array they is declared as static can be accessed outside of the method it was declared without passing it as an argument to other functions in the same class.,The static arrays are intialized only once when the function is called.,3.0,0,0.9579464197158813,0.27735009811261463,0.7489029169082642,0.4002572000026703
2056,What is the difference between an array that is declared as static and one that is not?,"A static array has class scope, allowing it to remain where other arrays might be recycled.",The static arrays are intialized only once when the function is called.,4.0,1,0.9286561012268066,0.5000000000000001,0.6050533056259155,0.27836039662361145
2057,What is the difference between an array that is declared as static and one that is not?,An array that is static does not change or uninitialize if called later unless explicitly acted upon. It does not terminate or change across objects. An automatic local array will be cleared and uninitialized if called later outside of it is specific scope.,The static arrays are intialized only once when the function is called.,5.0,1,0.9443196654319763,0.3638034375544995,0.6399783492088318,0.5273974537849426
2058,What is the difference between an array that is declared as static and one that is not?,"one declared as static is one that is already defined. The program knows the length and the array from the start, whereas non-static arrays are declared or assigned later.",The static arrays are intialized only once when the function is called.,3.0,0,0.9651118516921997,0.5,0.7185420393943787,0.5638719797134399
2059,What is the difference between an array that is declared as static and one that is not?,"a non static array must reinitialize itself every function call, while a static array will only initialize itself once, unless otherwise forced.",The static arrays are intialized only once when the function is called.,5.0,1,0.9352704286575317,0.5669467095138409,0.7619929313659668,0.6014320254325867
2060,What is the difference between an array that is declared as static and one that is not?,A static array retains any modified values after a function call. Automatic arrays reset to their initial values when the function ends.,The static arrays are intialized only once when the function is called.,4.5,1,0.9203341007232666,0.560112033611204,0.7215752601623535,0.4913043975830078
2061,What is the difference between an array that is declared as static and one that is not?,"a static array is one that keeps its values and is not initialized every time a class function is called, it is data is not lost at function end.",The static arrays are intialized only once when the function is called.,4.5,1,0.9580784440040588,0.596284793999944,0.6654619574546814,0.5379968881607056
2062,What is the difference between an array that is declared as static and one that is not?,an array that is declared as static can only be used in the function that its being called in. Its a constant array. Static is another way of say const.,The static arrays are intialized only once when the function is called.,2.5,0,0.972813069820404,0.5773502691896258,0.8086328506469727,0.7123944759368896
2063,What is the difference between an array that is declared as static and one that is not?,Values in an array that is not delcared as static will remain constant. When an array is declared const values within the array can be manipulated.,The static arrays are intialized only once when the function is called.,2.5,0,0.9454006552696228,0.22360679774997896,0.6569010615348816,0.27215561270713806
2064,What is the difference between an array that is declared as static and one that is not?,the data of a static array cannot be changed,The static arrays are intialized only once when the function is called.,2.5,0,0.9389710426330566,0.5,0.5494692325592041,0.48651123046875
2065,What is the difference between an array that is declared as static and one that is not?,"Standard arrays terminate when the functions that call them finish. A static array is not removed from memory when it is parent function terminates, leaving it available for other functionsor new instances of the original function.",The static arrays are intialized only once when the function is called.,4.0,1,0.9588704705238342,0.5039526306789697,0.6939669847488403,0.4932662844657898
2066,What is the difference between an array that is declared as static and one that is not?,by defining static array it doese not lose scope in locala function. static array makes programm more scalable. non static array lose scope inside the local function.,The static arrays are intialized only once when the function is called.,4.5,1,0.9065398573875427,0.5661385170722979,0.5762959718704224,0.5262815952301025
2067,What is the difference between an array that is declared as static and one that is not?,static arrays can be called from anywhere,The static arrays are intialized only once when the function is called.,2.0,0,0.9148083925247192,1.0000000000000002,0.5659421682357788,0.4044336676597595
2068,What is the difference between an array that is declared as static and one that is not?,A static array cannot be changed. A regular array can be changed when it is passed to a function or manually.,The static arrays are intialized only once when the function is called.,2.5,0,0.9478544592857361,0.3922322702763681,0.7352945804595947,0.45395931601524353
2069,What is the difference between an array that is declared as static and one that is not?,"a static array can be can be edited throughout the program, while a non-static array can only be edited within a given function",The static arrays are intialized only once when the function is called.,3.5,0,0.9341541528701782,0.5303300858899107,0.6996597051620483,0.5664416551589966
2070,What is the difference between an array that is declared as static and one that is not?,"An array that is declared static is allocated when the program begins to run, and is not freed until the program exits, but has limited scope. A non-static array is allocated and freed every time that it comes in and out of scope.",The static arrays are intialized only once when the function is called.,4.5,1,0.9406102299690247,0.3535533905932738,0.7990982532501221,0.5513439178466797
2071,What is the difference between an array that is declared as static and one that is not?,static has a predetermined size that cannot be passed while vis versa.,The static arrays are intialized only once when the function is called.,3.0,0,0.9203997850418091,0.4082482904638631,0.6244720816612244,0.40226083993911743
2072,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,the type char [] has a nullnelement at the very end.,The char [] will automatically add a null 0 character at the end of the string.,5.0,1,0.9289675951004028,0.7071067811865476,0.6923017501831055,0.7260623574256897
2073,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,a variable char is basically any non command key on the keyboard that you can press. A string is a collection of letters or numbers that is stored together to be used later. Comonly strings are used for words. Chars can be used for less but can have opperations performed on them in a useful way.,The char [] will automatically add a null 0 character at the end of the string.,2.0,0,0.8658790588378906,0.25400025400038106,0.6250770092010498,0.4910285770893097
2074,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,The programmer must provide the null terminating character in a string of characters using type char [] and must also ensure that the array is large enough to contain the input string of characters and the null terminating character.,The char [] will automatically add a null 0 character at the end of the string.,5.0,1,0.9294551014900208,0.6390096504226939,0.7139180898666382,0.7089261412620544
2075,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,String of characters are followed by a null statement. type string is for example string s;,The char [] will automatically add a null 0 character at the end of the string.,5.0,1,0.9031562209129333,0.7302967433402215,0.7861940860748291,0.5782989263534546
2076,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,String contains a word where as char can contain phrases or a string of characters.,The char [] will automatically add a null 0 character at the end of the string.,2.0,0,0.873092532157898,0.670820393249937,0.4396879971027374,0.4585864543914795
2077,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,a string is a variable with a single entinty of letters combined into one while in a char [] each letter is assigned a memory value and each has its own variable assigned i. e. char [0] char [1].,The char [] will automatically add a null 0 character at the end of the string.,2.0,0,0.9322828650474548,0.565685424949238,0.7032395601272583,0.5840098857879639
2078,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,"A string contains a null character at the end of the string, which makes it easily possible to get the string length. A char array can have a virtually unlimited length, therefore, its size must be declared or limited.",The char [] will automatically add a null 0 character at the end of the string.,4.0,1,0.9065459370613098,0.6024640760767093,0.6840345859527588,0.6165540814399719
2079,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,an array of characters stores a null character at the end,The char [] will automatically add a null 0 character at the end of the string.,5.0,1,0.8960350155830383,0.7071067811865477,0.7364298105239868,0.5084145665168762
2080,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,"When you read a string of characters, you also read in the white space. When you read characters declared char you only read the characters, no white space.",The char [] will automatically add a null 0 character at the end of the string.,3.0,0,0.8667485117912292,0.23570226039551584,0.6292547583580017,0.37043723464012146
2081,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,"Character arrays will terminate at any whitespace, including spaces. Strings terminate when they encounter the new line character.",The char [] will automatically add a null 0 character at the end of the string.,3.5,0,0.8590888381004333,0.5,0.8036618232727051,0.4302785396575928
2082,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,The difference is that a string that is declared a variable of type char [] is each char is included in the array versus the string of characters that is read into a variable.,The char [] will automatically add a null 0 character at the end of the string.,2.0,0,0.9194607138633728,0.6324555320336759,0.6622245907783508,0.6153450012207031
2083,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,"An array of strings reads the string literals, meaning anything within quotes. A char array reads a string as each individual character.",The char [] will automatically add a null 0 character at the end of the string.,2.0,0,0.8926578760147095,0.5298129428260177,0.5500594973564148,0.4013690948486328
2084,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,character arrays can call on individual letters were a string array can only call words.,The char [] will automatically add a null 0 character at the end of the string.,2.0,0,0.8523275256156921,0.5345224838248489,0.5960269570350647,0.43407779932022095
2085,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,The character array has an end of line character at the end of it.,The char [] will automatically add a null 0 character at the end of the string.,5.0,1,0.8829757571220398,0.894427190999916,0.6105793118476868,0.47679343819618225
2086,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,"Type char [] may contain a null value as the last element, whereas type string will not.",The char [] will automatically add a null 0 character at the end of the string.,5.0,1,0.9203595519065857,0.5477225575051663,0.7269654273986816,0.6646714210510254
2087,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,The variable of type string has a terminating character 0 at the end of it.,The char [] will automatically add a null 0 character at the end of the string.,4.0,1,0.9341545701026917,0.7071067811865477,0.7924375534057617,0.6330324411392212
2088,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,the one that is type string has an extra string member. The or 0 at the end.,The char [] will automatically add a null 0 character at the end of the string.,4.0,1,0.9137531518936157,0.7500000000000002,0.593403697013855,0.4402313232421875
2089,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,"a string has variable size and function calls available, while an character array usually has a static size.",The char [] will automatically add a null 0 character at the end of the string.,3.5,0,0.8564452528953552,0.3922322702763682,0.4823245406150818,0.40255770087242126
2090,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,a string char [] adds a null value to the end of the string.,The char [] will automatically add a null 0 character at the end of the string.,5.0,1,0.9602255821228027,0.8333333333333333,0.8605485558509827,0.7045968174934387
2091,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,"char array needs an end character signature and is made up of characters each separate from each other, a string is an object in itself, with a value that the user enters.",The char [] will automatically add a null 0 character at the end of the string.,5.0,1,0.8958709239959717,0.5547001962252293,0.7522907257080078,0.4999280273914337
2092,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,"the variable of type char [], each character is stored into a different memory address and can be accessed easly, where as in a string of character, its not easy to be able to access each character in the string.",The char [] will automatically add a null 0 character at the end of the string.,2.0,0,0.9147030115127563,0.692820323027551,0.5668995976448059,0.4416654706001282
2093,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,"When the string is passed into the array char, individual characters are stored and can be manipulated. Although when a word is stored into a string variable, it is stored as one word and not as individual characters.",The char [] will automatically add a null 0 character at the end of the string.,2.0,0,0.876370906829834,0.3872983346207417,0.575648307800293,0.4824153780937195
2094,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,"a string variable can change in size and is passed to functions by value, whereas a type char [] cannot change in size and is passed to functions by reference only",The char [] will automatically add a null 0 character at the end of the string.,2.0,0,0.9015458822250366,0.30151134457776363,0.5759760141372681,0.47438567876815796
2095,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,"A string type string acts as a single object, with individual char entities accessible only through specific string class functions. A char array is less robust, but allows direct access to specific char entities.",The char [] will automatically add a null 0 character at the end of the string.,3.0,0,0.8592738509178162,0.6793662204867574,0.6234816312789917,0.47561022639274597
2096,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,"In arrays strings are stored as a characterschar [], each character of string will be stored in each memory location of the array, while string of characters is only one memory location.",The char [] will automatically add a null 0 character at the end of the string.,2.0,0,0.9040513038635254,0.4522670168666455,0.575499415397644,0.5592314600944519
2097,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,"an array of characters has one more element, its last element, the terminating element, or null, which doesnt exist in a variable of type string",The char [] will automatically add a null 0 character at the end of the string.,5.0,1,0.8810310363769531,0.33333333333333337,0.7121081948280334,0.6172165870666504
2098,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,A string of characters is a specific variable type that has no extra data at the end. A string of type char [] is all the characters and a null 0,The char [] will automatically add a null 0 character at the end of the string.,5.0,1,0.9474456906318665,0.5735393346764045,0.7912125587463379,0.5717819929122925
2099,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,a string of characters will have a null character or value at the end of the string,The char [] will automatically add a null 0 character at the end of the string.,5.0,1,0.9277477264404297,0.8333333333333333,0.791477382183075,0.550416886806488
2100,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,"when the characters are put in a char array, there is also a null terminating character added to the end, 0",The char [] will automatically add a null 0 character at the end of the string.,5.0,1,0.9239023923873901,0.7071067811865476,0.9014203548431396,0.8192118406295776
2101,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,"string of characters that is read into a variable of type string includes,",The char [] will automatically add a null 0 character at the end of the string.,1.5,0,0.8755108714103699,0.6666666666666666,0.4695882797241211,0.4248887300491333
2102,Briefly describe the divide-and-conquer paradigm.,"For example we have an array on n elements, the divide and conquer splits up the array into equal halves and repeats this process until each element is by itself","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",4.0,1,0.9145987033843994,0.2672612419124244,0.6270843148231506,0.4686652421951294
2103,Briefly describe the divide-and-conquer paradigm.,Divide and coquer means dividing a problem into 2 plus problems which are solved and then merged back together for a final solution to the whole problem.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",5.0,1,0.9576757550239563,0.6546536707079775,0.8557685017585754,0.7417585849761963
2104,Briefly describe the divide-and-conquer paradigm.,The divide and conquer paradigm divides a problem into smaller and smaller portions that are easier to solve.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",4.5,1,0.9399036169052124,0.6546536707079772,0.6942297220230103,0.6325150728225708
2105,Briefly describe the divide-and-conquer paradigm.,"Divide elements, recur then conquer, which works in merge sort and quicksort.","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",4.0,1,0.9065120220184326,0.3535533905932738,0.6906077861785889,0.56956946849823
2106,Briefly describe the divide-and-conquer paradigm.,"To divide and conquer, you divide the program in half once or multiple times to the extent that the program as a whole is easier to work in groups to solve the problem.","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",4.5,1,0.939433217048645,0.4811252243246882,0.7277601361274719,0.661663830280304
2107,Briefly describe the divide-and-conquer paradigm.,to divide one larger string or line of values and sepereate them into smallers lines to easily manipulate them and then replace them in the order in which they should be.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",3.5,0,0.91584712266922,0.2886751345948129,0.7499982714653015,0.5279494524002075
2108,Briefly describe the divide-and-conquer paradigm.,"Split the problem into smaller, more manageable parts, and proceed to address the smaller problems.","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",4.5,1,0.9381916522979736,0.5393598899705937,0.7996657490730286,0.5599404573440552
2109,Briefly describe the divide-and-conquer paradigm.,dived and conquer is the breaking up of a large complex program into small easy to solve components.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",4.5,1,0.9338970184326172,0.316227766016838,0.6548491716384888,0.6125552654266357
2110,Briefly describe the divide-and-conquer paradigm.,Dividing a larger problem into the smallest incident of the problem and solving the smallest incident.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",4.5,1,0.894133985042572,0.5163977794943223,0.7545716166496277,0.5901755094528198
2111,Briefly describe the divide-and-conquer paradigm.,"Break up very large data structures into smaller sub-units, that are easier to manipulate.","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",4.5,1,0.9026351571083069,0.3333333333333333,0.581380307674408,0.549365758895874
2112,Briefly describe the divide-and-conquer paradigm.,The divide-and-conquer technique is where it takes the sorting algorithm and breaks up the array into smaller elements of the array to tackle the problem and run the algorithm.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",4.0,1,0.9373148083686829,0.37463432463267765,0.7977156043052673,0.6143192052841187
2113,Briefly describe the divide-and-conquer paradigm.,"The divide-and-conquer paradigm divides the problem into two pieces and works on each piece separately, allowing for a faster approach to 2 separate smaller problems.","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",4.5,1,0.9424522519111633,0.421637021355784,0.7594140768051147,0.5224981307983398
2114,Briefly describe the divide-and-conquer paradigm.,"Take a problem and divide it into a smaller problem and solve that smaller problem, or divide it into a smaller problem and solve it, thus solving the whole problem in the process.","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",5.0,1,0.9680168628692627,0.9686648999069226,0.8844785690307617,0.7201839089393616
2115,Briefly describe the divide-and-conquer paradigm.,The idea is to split the problem into half and solve for the smaller split-problems.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",4.5,1,0.9412876963615417,0.5163977794943224,0.7974310517311096,0.6295307278633118
2116,Briefly describe the divide-and-conquer paradigm.,"The divide and conquer paradigm, splits a large problem into simpler problems, at which point it solves the simpler problems and merges the simple solutions together to answer the large problem.","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",5.0,1,0.9717106223106384,0.48038446141526153,0.7666828632354736,0.831651508808136
2117,Briefly describe the divide-and-conquer paradigm.,"Divide-and-conquer refers to abstraction, the act of separating large, complex problems into smaller, easier problems that can be solved by a relatively simple algorithm.","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",4.5,1,0.9518935680389404,0.33333333333333337,0.698024570941925,0.5562869310379028
2118,Briefly describe the divide-and-conquer paradigm.,"It takes a large problem and splits it into two or more easier or faster solutions, and makes for better readability.","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",4.5,1,0.932163655757904,0.4242640687119287,0.6134485006332397,0.5130985379219055
2119,Briefly describe the divide-and-conquer paradigm.,it is the taking of a larger problem and splitting it into simpler smaller problems.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",4.5,1,0.9362316131591797,0.5070925528371101,0.7579938769340515,0.5738509297370911
2120,Briefly describe the divide-and-conquer paradigm.,It divides the problem into singular units and works on the problem piece by piece until the problem is solved.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",4.5,1,0.9230684041976929,0.7071067811865476,0.7737136483192444,0.6213811635971069
2121,Briefly describe the divide-and-conquer paradigm.,"smaller parts are easier to compare than comparing the whole, so it divides the problem down in halves until it can easily compare, then works backwards putting it back together to give the solution.","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",5.0,1,0.9316502213478088,0.4082482904638631,0.7037614583969116,0.693939208984375
2122,Briefly describe the divide-and-conquer paradigm.,"a divide-and-conquer paradigm. takes some data, divides it into two parts, and works on each part indiviually until the item is found.","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",4.5,1,0.9198989272117615,0.316227766016838,0.7715973258018494,0.35496318340301514
2123,Briefly describe the divide-and-conquer paradigm.,"The idea of divide and conquer is to take a large problem, split it into n smaller problems, making the program easier to read and modify.","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",4.5,1,0.9544803500175476,0.4529108136578385,0.7382147312164307,0.5617632865905762
2124,Briefly describe the divide-and-conquer paradigm.,the divide and conquer paradigm is a recursive solution that keeps dividing the problem into halves until a base case is reached.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",4.5,1,0.9299221634864807,0.4714045207910318,0.7839397192001343,0.6149625778198242
2125,Briefly describe the divide-and-conquer paradigm.,"dividing and conquering means breaking a problem into two smaller problems, solving both of those, and putting the two solutions together.","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",5.0,1,0.9443109035491943,0.5163977794943224,0.8374497890472412,0.7629707455635071
2126,Briefly describe the divide-and-conquer paradigm.,"Divide the big problem into small problem, solve small problem and join small solved elements of the problem. if there is two ore more elements in the array, divide the array into parts and compare the elements, after comperison, conquer the elements. If array have n element, first half have n divided by 2 elements","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",5.0,1,0.9406095743179321,0.518544972870135,0.7564636468887329,0.7794573307037354
2127,Briefly describe the divide-and-conquer paradigm.,"divide the array in half, sort each half, then sort them back in one array","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",3.0,0,0.9047412276268005,0.2773500981126146,0.7105310559272766,0.540518045425415
2128,Briefly describe the divide-and-conquer paradigm.,You take a class and break down everything it is supposed to do into easily managed functions.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",3.0,0,0.8999730944633484,0.0,0.5939220190048218,0.4826430082321167
2129,Briefly describe the divide-and-conquer paradigm.,"this is shown by the use of. cpp and header files. by splitting the program up into smaller subsections of individual code, it becomes easier to write and keep up with as opposed to having all of your code in one file","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",3.0,0,0.9235095977783203,0.2294157338705618,0.6467846632003784,0.2294633984565735
2130,Briefly describe the divide-and-conquer paradigm.,"When a problem is too big, split it into smaller problems of the same type, and solve those, then from the solutions of the smaller problem, give the solution to the larger original problem.","Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",5.0,1,0.9616653323173523,0.8528028654224417,0.8493688702583313,0.7917836904525757
2131,Briefly describe the divide-and-conquer paradigm.,it is the separating of large program into smaller classes then until target is reached.,"Divide a problem into smaller subproblems, solve them recursively, and then combine the solutions into a solution for the original problem.",3.5,0,0.8860617280006409,0.3779644730092273,0.677145779132843,0.48289039731025696
2132,Briefly describe in one sentence how does merge sort work?,"It uses the divide and conqure technique recursively and then when merging back together it compares each element together in a sorted list, this is done by reversing the divide and conquer technique","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",5.0,1,0.9261402487754822,0.23570226039551587,0.8383520841598511,0.6546827554702759
2133,Briefly describe in one sentence how does merge sort work?,A merge sort works by removing all items to sepperate memory locations and merging them back together in order.,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",3.5,0,0.9032731056213379,0.0,0.8146077394485474,0.6678082942962646
2134,Briefly describe in one sentence how does merge sort work?,"It divides the array into two halves, sorts each half, then merges the two halves together.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",5.0,1,0.9669480919837952,0.8333333333333333,0.9404088854789734,0.966259241104126
2135,Briefly describe in one sentence how does merge sort work?,"Divide into two sublists and then those sublists break into length 1, then merges the sublists sorted.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",5.0,1,0.9134085774421692,0.37796447300922736,0.9062900543212891,0.7563021779060364
2136,Briefly describe in one sentence how does merge sort work?,Merge sort uses the divide and conquer idea where it divides the array in half multiple times and then joins each element of the array back into one sorted array. This is one of the best sorting algorithms besides Quicksort.,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",5.0,1,0.9581609964370728,0.5547001962252293,0.7622162103652954,0.8278632164001465
2137,Briefly describe in one sentence how does merge sort work?,divides the line in half coninuously until you get to only a single value then recombine the values to form a sorted line.,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",5.0,1,0.89691561460495,0.27735009811261463,0.7852323651313782,0.6339361667633057
2138,Briefly describe in one sentence how does merge sort work?,"Continually split array in half, sort each side of the halves, then put them back together once organized.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",5.0,1,0.9463944435119629,0.5345224838248489,0.8160377740859985,0.7895057201385498
2139,Briefly describe in one sentence how does merge sort work?,merge sort splits the array of elements into smaller arrays until the arrays reach size 1 and then the merge sort merges the smaller arrays into arrays of size 2 then it moves to the next step and merges the next arrays.,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",5.0,1,0.9540587067604065,0.6301260378126045,0.8448024988174438,0.7708762884140015
2140,Briefly describe in one sentence how does merge sort work?,By divide and conquer.,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",3.5,0,0.7373962998390198,0.0,0.406779021024704,0.216474711894989
2141,Briefly describe in one sentence how does merge sort work?,"Break a single array down into many arrays with individual elements, then sort the elements as you reconstruct them back into a single array.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",5.0,1,0.9369310736656189,0.5144957554275266,0.8577845096588135,0.7090801000595093
2142,Briefly describe in one sentence how does merge sort work?,"Merge sort breaks the array in half, and continues to do so until it has 2 elements to compare and sorts them, after doing so it merges back as it keeps on sorting the algorithm as it does so.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",5.0,1,0.918484628200531,0.44721359549995804,0.7183393239974976,0.769059419631958
2143,Briefly describe in one sentence how does merge sort work?,"Merge sort divides the problem in half, organizes each half, then brings the two halves together again.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",5.0,1,0.9427731037139893,0.30151134457776363,0.8892624974250793,0.8205148577690125
2144,Briefly describe in one sentence how does merge sort work?,"Take an array and split it into two, then solve these simpler problems and merge the two answers in correct order.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",5.0,1,0.9368650913238525,0.3333333333333333,0.7539212703704834,0.8275319933891296
2145,Briefly describe in one sentence how does merge sort work?,"A merge sort recursively divides the array into half until only one element remains, then it sorts the data on its way out of the recursive call by merging the cells.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",5.0,1,0.9438310861587524,0.37796447300922736,0.8487504124641418,0.7203271389007568
2146,Briefly describe in one sentence how does merge sort work?,"Merge sort recursively divides an array into two arrays until all arrays have 1 element, at which point it merges the 1 element arrays into larger sorted arrays, the final returned array being the sorted version of the initial array.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",5.0,1,0.9434521198272705,0.753778361444409,0.7833321690559387,0.8251067399978638
2147,Briefly describe in one sentence how does merge sort work?,Merge sort continuously breaks an array in half then sorts the arrays as it concatenates them back together into one sorted array.,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",5.0,1,0.947936475276947,0.6933752452815365,0.8137199878692627,0.8179529905319214
2148,Briefly describe in one sentence how does merge sort work?,"It takes an array, splits itself in half, sorts the two halveseither by recursion or iterationand compares them together giving a third array a full sorted list with both halves rejoined.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",5.0,1,0.9606083035469055,0.6507913734559686,0.8840212225914001,0.866105854511261
2149,Briefly describe in one sentence how does merge sort work?,"it splits a large array into small arrays and recurs until the array is a size of 1, and then merges all of the arrays back together until the source array is completely sourted.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",5.0,1,0.9602212309837341,0.7462025072446365,0.7628411054611206,0.5906642079353333
2150,Briefly describe in one sentence how does merge sort work?,Mergesort divides the array into smaller halves and then combines the sorted subarrays into one sorted array.,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",5.0,1,0.9461652040481567,0.7715167498104597,0.9032820463180542,0.8128736019134521
2151,Briefly describe in one sentence how does merge sort work?,"merge sort breaks the array down in halves until it is comparing two values, sorts those two values, then merges that back with the other broken down parts that it sorted, each level merging more sets together till you return back to your whole array in order.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",5.0,1,0.9572920203208923,0.5477225575051663,0.8729367256164551,0.800702691078186
2152,Briefly describe in one sentence how does merge sort work?,"Divides the data into twor separate arrays, sorts the two arrays and merges them back to back together recursively.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",5.0,1,0.9595451951026917,0.6963106238227914,0.9198490381240845,0.9011968374252319
2153,Briefly describe in one sentence how does merge sort work?,"Take the initial array and split it into two, temporary, smaller arrays, sort the two smaller arrays, and merge them back into a single array.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",5.0,1,0.9623874425888062,0.6666666666666667,0.8823492527008057,0.8915358781814575
2154,Briefly describe in one sentence how does merge sort work?,merge sort divides the data into halves until data of one element is reached and then merges each element together according to its placement in comparison to the rest of the data,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",5.0,1,0.9313862919807434,0.29488391230979427,0.893872082233429,0.7118937969207764
2155,Briefly describe in one sentence how does merge sort work?,"merge sort uses the divide and conquer strategy, sorting an array in parts, then merging the sorted parts back together.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",5.0,1,0.9359869360923767,0.37796447300922725,0.8413428068161011,0.646550178527832
2156,Briefly describe in one sentence how does merge sort work?,"Divide recursuivly big array into two arrays, sort two array and merge them togather recuruivly.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",5.0,1,0.9339672923088074,0.6123724356957946,0.8253659009933472,0.8715134859085083
2157,Briefly describe in one sentence how does merge sort work?,"divides an array in half and sorts each half by calling its self, thus dividing each half again and again and sorting it until the array is sorted. then putting the elements back in the original array sorted.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",5.0,1,0.961918294429779,0.6286185570937122,0.8591970205307007,0.7013720870018005
2158,Briefly describe in one sentence how does merge sort work?,Merge sort takes an array and splits it in half and sends each half back to itself recursively and merges and sorts the two halves when it starts going back up.,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",5.0,1,0.939661979675293,0.5590169943749475,0.9130523800849915,0.8927717208862305
2159,Briefly describe in one sentence how does merge sort work?,"merge sort splits an array into two halves and then sorts the two smaller arrays, and then merges them back together to form a sorted array","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",5.0,1,0.9713450074195862,0.8081220356417688,0.9445398449897766,0.9274214506149292
2160,Briefly describe in one sentence how does merge sort work?,"the merge sort continually divides the arrayor set of containersinto halves, until it reaches the point where there is just one element left, then merges each of the sets of two sorted arrayscontainers.","It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",5.0,1,0.9551676511764526,0.420084025208403,0.8353477120399475,0.7891029715538025
2161,Briefly describe in one sentence how does merge sort work?,merge sort splits an array of elements into smaller and smaller array 's till the value of 1 is reached.,"It splits the original array into two, sorts each of the two halves, and then merges the sorted arrays.",4.0,1,0.9468160271644592,0.5477225575051663,0.7895634174346924,0.36567986011505127
2162,What is a pointer?,A variable in memory that hold the address of another memory location to which it points too,The address of a location in memory.,5.0,1,0.9356040358543396,0.769800358919501,0.7995598316192627,0.69392991065979
2163,What is a pointer?,A pointer is a variable that contains the memory address of a given value.,The address of a location in memory.,5.0,1,0.9029872417449951,0.5345224838248489,0.7500962615013123,0.5781079530715942
2164,What is a pointer?,A pointer is a variable that stores the address of another variable.,The address of a location in memory.,5.0,1,0.8859603404998779,0.3779644730092273,0.7429778575897217,0.576799750328064
2165,What is a pointer?,A pointer is a variable that holds a memory address or location of another variable.,The address of a location in memory.,5.0,1,0.9030289649963379,0.5773502691896257,0.7668315172195435,0.6781314015388489
2166,What is a pointer?,A data type that points to an address in memory which contains certain information. Used for pass-by-reference to save memory.,The address of a location in memory.,5.0,1,0.9006575345993042,0.5477225575051663,0.7378621697425842,0.8212267756462097
2167,What is a pointer?,a pointer points to a location in memory of a certain data type,The address of a location in memory.,5.0,1,0.9163345098495483,0.5345224838248489,0.8255708813667297,0.7415686249732971
2168,What is a pointer?,A pointer is a variable that points to the address location of another variable. Represented bySTAR.,The address of a location in memory.,5.0,1,0.9025549292564392,0.44721359549995804,0.7921877503395081,0.5939460396766663
2169,What is a pointer?,A pointer is a variable that holds the address of a given variableand of a given data type,The address of a location in memory.,5.0,1,0.888377845287323,0.30151134457776363,0.7218083143234253,0.582486629486084
2170,What is a pointer?,pointer is a programming data type whose value points to another value stored in computer memory by its address.,The address of a location in memory.,5.0,1,0.8920014500617981,0.3922322702763682,0.6631839275360107,0.4889712929725647
2171,What is a pointer?,A data type that points to a specific memory address.,The address of a location in memory.,5.0,1,0.9011284708976746,0.5773502691896258,0.7918117046356201,0.7816932201385498
2172,What is a pointer?,Its like a variable except it only holds the address in memory of the variable not the physical information.,The address of a location in memory.,5.0,1,0.9243088364601135,0.44721359549995804,0.5341438055038452,0.5449901819229126
2173,What is a pointer?,a pointer is a reference to a memory location.,The address of a location in memory.,5.0,1,0.8998208045959473,0.7071067811865476,0.8432055115699768,0.7444556951522827
2174,What is a pointer?,A pointer is an alias to an object in memory.,The address of a location in memory.,4.0,1,0.8648305535316467,0.5,0.6441141366958618,0.5454152822494507
2175,What is a pointer?,"A pointer is a variable that contains a memory address for something that you can use, such as a value, array, or even a function.",The address of a location in memory.,5.0,1,0.8722663521766663,0.4714045207910317,0.7272206544876099,0.5048579573631287
2176,What is a pointer?,its a data type with a memory address and a value,The address of a location in memory.,3.5,0,0.9001116156578064,0.632455532033676,0.8113327622413635,0.5189990997314453
2177,What is a pointer?,a form of storing data that keeps the location in memory of an data type or object.,The address of a location in memory.,5.0,1,0.9217091798782349,0.4264014327112209,0.800995945930481,0.6639153957366943
2178,What is a pointer?,it contains a object 's memory address,The address of a location in memory.,5.0,1,0.8666449785232544,0.7071067811865476,0.8237324953079224,0.7598855495452881
2179,What is a pointer?,variable that contains the memory address of a data object.,The address of a location in memory.,5.0,1,0.8988579511642456,0.5773502691896258,0.7461826801300049,0.6951189041137695
2180,What is a pointer?,A pointer is an element that references a memory location.,The address of a location in memory.,5.0,1,0.8868780732154846,0.632455532033676,0.8158115744590759,0.7246882319450378
2181,What is a pointer?,"an object that points to a specific place in memory, where a variable or value is stored.",The address of a location in memory.,5.0,1,0.901070773601532,0.3535533905932738,0.830187201499939,0.5502021312713623
2182,What is a pointer?,a variable that stores the address of a memory location,The address of a location in memory.,5.0,1,0.9476401209831238,0.7745966692414836,0.8005102872848511,0.7717106342315674
2183,What is a pointer?,"A pointer is a variable that points to an address in memory, which contains some data. The pointer does not contain or point to any data, only a memory address.",The address of a location in memory.,5.0,1,0.9032599329948425,0.6030226891555273,0.5017571449279785,0.6949890851974487
2184,What is a pointer?,Pointer is a variable which have a memory address of a variable.,The address of a location in memory.,5.0,1,0.8790569305419922,0.5345224838248489,0.7604289650917053,0.6041390895843506
2185,What is a pointer?,a pointer points to a location in memory where data is stored,The address of a location in memory.,5.0,1,0.9042749404907227,0.5773502691896258,0.7799171805381775,0.7316714525222778
2186,What is a pointer?,a variable that holds the address of another variable and can access the contents of the variable.,The address of a location in memory.,5.0,1,0.8987500071525574,0.2773500981126146,0.7386195659637451,0.4208472967147827
2187,What is a pointer?,a pointer is a memory address that points to a data member,The address of a location in memory.,5.0,1,0.8770977854728699,0.5773502691896258,0.762357771396637,0.6233956217765808
2188,What is a pointer?,A data type that stores the memory address of another variable.,The address of a location in memory.,5.0,1,0.9261054992675781,0.5773502691896258,0.7619844675064087,0.6137068271636963
2189,What is a pointer?,its like a variable but only holds an address in meomrry not the physical address.,The address of a location in memory.,3.0,0,0.9078529477119446,0.6666666666666666,0.4810723066329956,0.30070632696151733
2190,What is the experimental approach for measuring the running time of an algorithm?,"Try several sets of data on an algorithm that includes worst case, best case, and random cases. Also try and run the same program on a different computer with the same specs",Implement the algorithm and measure the physical running time.,4.5,1,0.9035683870315552,0.2182178902359924,0.4650304913520813,0.3730178475379944
2191,What is the experimental approach for measuring the running time of an algorithm?,not answered,Implement the algorithm and measure the physical running time.,0.0,0,0.5682985186576843,0.0,0.19808319211006165,0.06415638327598572
2192,What is the experimental approach for measuring the running time of an algorithm?,time complexity using big O logarthmic Olog nlinear Onexponential On to the power of 2quadratic On to the power of kk is greater than or equal to 1 Polynomial Oa to the power of nn is greater than 1,Implement the algorithm and measure the physical running time.,2.5,0,0.8707797527313232,0.1924500897298752,0.5082560181617737,0.35569578409194946
2193,What is the experimental approach for measuring the running time of an algorithm?,Using some sort of counting principle of the number of operations performed in an algorithm.,Implement the algorithm and measure the physical running time.,4.5,1,0.905041515827179,0.3535533905932738,0.674638569355011,0.46122848987579346
2194,What is the experimental approach for measuring the running time of an algorithm?,Experimental means you would actually write a prototype of the algorithm and measure the time it takes to run given certain parameters.,Implement the algorithm and measure the physical running time.,5.0,1,0.934120774269104,0.4803844614152616,0.7018132209777832,0.6544036865234375
2195,What is the experimental approach for measuring the running time of an algorithm?,measuring the relationship of running an algorithm with different input sizes.,Implement the algorithm and measure the physical running time.,4.5,1,0.9077273011207581,0.5345224838248489,0.6870052814483643,0.5742383003234863
2196,What is the experimental approach for measuring the running time of an algorithm?,"Oposite of a theoretical assessment of the algorithm to determine runtime, but to run the code first to determine the the runtime. This is not recommended because it is a limited test. It does not include all possibilities of the data, nor the hardware used to process the data.",Implement the algorithm and measure the physical running time.,4.5,1,0.931126594543457,0.19245008972987526,0.4051230549812317,0.4983169138431549
2197,What is the experimental approach for measuring the running time of an algorithm?,not answered,Implement the algorithm and measure the physical running time.,0.0,0,0.5682985186576843,0.0,0.19808319211006165,0.06415638327598572
2198,What is the experimental approach for measuring the running time of an algorithm?,The experimental approach for measuring the running time is by using the Big O equation which tells you the running time.,Implement the algorithm and measure the physical running time.,3.0,0,0.9264734387397766,0.7302967433402217,0.7344564199447632,0.6616051197052002
2199,What is the experimental approach for measuring the running time of an algorithm?,"You create and run the algorithm multiple times, while measuring the amount of time it takes, you then average the results.",Implement the algorithm and measure the physical running time.,5.0,1,0.9216576814651489,0.44721359549995804,0.668524980545044,0.6355226635932922
2200,What is the experimental approach for measuring the running time of an algorithm?,keep a value of how many operations it takes and add to this value each time a function is called.,Implement the algorithm and measure the physical running time.,3.5,0,0.8912728428840637,0.316227766016838,0.5964081287384033,0.34455910325050354
2201,What is the experimental approach for measuring the running time of an algorithm?,BIG-OH,Implement the algorithm and measure the physical running time.,2.5,0,0.42190030217170715,0.0,0.3195672035217285,0.1769292652606964
2202,What is the experimental approach for measuring the running time of an algorithm?,Running the program with various input data and measuring the running time with system time.,Implement the algorithm and measure the physical running time.,5.0,1,0.9239309430122375,0.7844645405527364,0.7931934595108032,0.6752412915229797
2203,What is the experimental approach for measuring the running time of an algorithm?,"You run a program with different data sizes, like 10 to the power of x. As you increase x and measure the completion speeds for the program, you can find patterns and attempt the measure the running time. It is very important to keep the same software and hardware however, which makes experimental testing inferior to theoretical in the eyes of most.",Implement the algorithm and measure the physical running time.,4.0,1,0.9309115409851074,0.41478067789217027,0.46381106972694397,0.5943775177001953
2204,What is the experimental approach for measuring the running time of an algorithm?,to run the program through and see how many times each thing is called and the runtime of each function is based on that.,Implement the algorithm and measure the physical running time.,4.5,1,0.9146484136581421,0.0,0.6721003651618958,0.5379005670547485
2205,What is the experimental approach for measuring the running time of an algorithm?,the number of times a specific segments get called per unit work.,Implement the algorithm and measure the physical running time.,3.0,0,0.8630735874176025,0.0,0.6437807679176331,0.3266489505767822
2206,What is the experimental approach for measuring the running time of an algorithm?,"For every call into memory, add or multiply it into an equation of type On",Implement the algorithm and measure the physical running time.,2.5,0,0.8629982471466064,0.0,0.5892897844314575,0.41258886456489563
2207,What is the experimental approach for measuring the running time of an algorithm?,"adding a time marker at the before the algorithm is called and another time marker immediately after so that you have the change in time, then you can calculate the efficiency by the speed of the computers cpu.",Implement the algorithm and measure the physical running time.,3.5,0,0.9192937612533569,0.5897678246195888,0.645050048828125,0.6357148885726929
2208,What is the experimental approach for measuring the running time of an algorithm?,Big Ohnotation,Implement the algorithm and measure the physical running time.,2.5,0,0.4811401665210724,0.0,0.3148210346698761,0.13980036973953247
2209,What is the experimental approach for measuring the running time of an algorithm?,the experimental approach measures actual running time in t. t equals seconds.,Implement the algorithm and measure the physical running time.,5.0,1,0.8925183415412903,0.5000000000000001,0.6693891286849976,0.4714171886444092
2210,What is the experimental approach for measuring the running time of an algorithm?,running an algorithm on a specific set of data,Implement the algorithm and measure the physical running time.,4.0,1,0.9060556292533875,0.632455532033676,0.6984993815422058,0.5218894481658936
2211,What is the experimental approach for measuring the running time of an algorithm?,"In experimental terms, the running time of an algorithm is measured by the number of operations required to complete the function. This number can usually be expressed in big-O notation.",Implement the algorithm and measure the physical running time.,3.5,0,0.9190911054611206,0.40824829046386313,0.6905067563056946,0.6534247398376465
2212,What is the experimental approach for measuring the running time of an algorithm?,"run the code for n-times and get average values, drop the constant and lowest number. for example if fxequals 3n plus 1 the running time will bef fxequals On",Implement the algorithm and measure the physical running time.,4.0,1,0.8755371570587158,0.3244428422615252,0.47962403297424316,0.42112892866134644
2213,What is the experimental approach for measuring the running time of an algorithm?,to measure the actual time of the program to run. and calculate the running time using the input and operations done,Implement the algorithm and measure the physical running time.,5.0,1,0.9484851956367493,0.6405126152203487,0.7979235053062439,0.6138860583305359
2214,What is the experimental approach for measuring the running time of an algorithm?,adding up the number of operations performed based on the worst case possible.,Implement the algorithm and measure the physical running time.,2.5,0,0.8874765038490295,0.0,0.40998250246047974,0.28499019145965576
2215,What is the experimental approach for measuring the running time of an algorithm?,the experimental approach would be to run through the algorithm and see how long it takes,Implement the algorithm and measure the physical running time.,5.0,1,0.9126911163330078,0.4082482904638631,0.6876771450042725,0.638937771320343
2216,What is the experimental approach for measuring the running time of an algorithm?,"trying it with different sets of inputs, and measuring the amount of time that the algorithm actually takes.",Implement the algorithm and measure the physical running time.,5.0,1,0.9237086772918701,0.4714045207910317,0.7010786533355713,0.6873341798782349
2217,What is the experimental approach for measuring the running time of an algorithm?,running the input with various inputs measuring the running time with system time,Implement the algorithm and measure the physical running time.,4.5,1,0.894890546798706,0.8164965809277261,0.8080078363418579,0.6491789817810059
2218,Order the following functions by their running time: n to the power of 2; log -LRB- log n -RRB- ; 2 to the power of -LRB- log n -RRB- ; n!; n to the power of 3.,"loglog n, 2 to the power oflog n, n to the power of 2, n to the power of 3, n!",loglog n; 2 to the power oflog n; n to the power of 2; n to the power of 3; n!,5.0,1,0.9652941226959229,1.0,0.9907583594322205,0.9950664043426514
2219,Order the following functions by their running time: n to the power of 2; log -LRB- log n -RRB- ; 2 to the power of -LRB- log n -RRB- ; n!; n to the power of 3.,"loglog n, n to the power of 2, n to the power of 3, 2 to the power oflog n, n!",loglog n; 2 to the power oflog n; n to the power of 2; n to the power of 3; n!,4.0,1,0.9652942419052124,1.0,0.9885572195053101,0.9795792102813721
2220,Order the following functions by their running time: n to the power of 2; log -LRB- log n -RRB- ; 2 to the power of -LRB- log n -RRB- ; n!; n to the power of 3.,loglogn2 to the power oflog nn to the power of 2 n to the power of 3 n!,loglog n; 2 to the power oflog n; n to the power of 2; n to the power of 3; n!,5.0,1,0.9413498640060425,0.912870929175277,0.9728221893310547,0.8964336514472961
2221,Order the following functions by their running time: n to the power of 2; log -LRB- log n -RRB- ; 2 to the power of -LRB- log n -RRB- ; n!; n to the power of 3.,"loglog n, 2 to the power oflog n, n to the power of 2, n to the power of 3, n!",loglog n; 2 to the power oflog n; n to the power of 2; n to the power of 3; n!,5.0,1,0.9652941226959229,1.0,0.9907583594322205,0.9950664043426514
2222,Order the following functions by their running time: n to the power of 2; log -LRB- log n -RRB- ; 2 to the power of -LRB- log n -RRB- ; n!; n to the power of 3.,"loglog n, 2 to the power oflog n, n to the power of 2, n to the power of 3, n!",loglog n; 2 to the power oflog n; n to the power of 2; n to the power of 3; n!,5.0,1,0.9652941226959229,1.0,0.9907583594322205,0.9950664043426514
2223,Order the following functions by their running time: n to the power of 2; log -LRB- log n -RRB- ; 2 to the power of -LRB- log n -RRB- ; n!; n to the power of 3.,"loglogn , n to the power of 2, n to the power of 3, 2 to the power of logn, n!",loglog n; 2 to the power oflog n; n to the power of 2; n to the power of 3; n!,4.125,1,0.9516497850418091,0.9045340337332909,0.9716367721557617,0.8452476263046265
2224,Order the following functions by their running time: n to the power of 2; log -LRB- log n -RRB- ; 2 to the power of -LRB- log n -RRB- ; n!; n to the power of 3.,loglogn2 to the power oflognn! n to the power of 3 n to the power of 2,loglog n; 2 to the power oflog n; n to the power of 2; n to the power of 3; n!,2.0,0,0.9418116211891174,0.9045340337332909,0.9624782204627991,0.5917203426361084
2225,Order the following functions by their running time: n to the power of 2; log -LRB- log n -RRB- ; 2 to the power of -LRB- log n -RRB- ; n!; n to the power of 3.,loglog n; 2 to the power oflog n; n!; n to the power of 2; n to the power of 3;,loglog n; 2 to the power oflog n; n to the power of 2; n to the power of 3; n!,3.75,0,0.9986867904663086,1.0,0.9978731274604797,0.8061139583587646
2226,Order the following functions by their running time: n to the power of 2; log -LRB- log n -RRB- ; 2 to the power of -LRB- log n -RRB- ; n!; n to the power of 3.,"this goes from largest to smallest: n!, n to the power of 3, n to the power of 2, 2 to the power oflog n, loglog n",loglog n; 2 to the power oflog n; n to the power of 2; n to the power of 3; n!,5.0,1,0.9512931108474731,0.8864052604279185,0.8184981346130371,0.8338876962661743
2227,Order the following functions by their running time: n to the power of 2; log -LRB- log n -RRB- ; 2 to the power of -LRB- log n -RRB- ; n!; n to the power of 3.,loglog n; 2 to the power oflog n; n to the power of 2; n to the power of 3; n!,loglog n; 2 to the power oflog n; n to the power of 2; n to the power of 3; n!,5.0,1,1.0000001192092896,1.0,1.0,0.9999999403953552
2228,Order the following functions by their running time: n to the power of 2; log -LRB- log n -RRB- ; 2 to the power of -LRB- log n -RRB- ; n!; n to the power of 3.,"2 to the power oflog n, loglog n, n!, n to the power of 2, n to the power of 3",loglog n; 2 to the power oflog n; n to the power of 2; n to the power of 3; n!,1.75,0,0.9652941226959229,1.0,0.9776463508605957,0.9646278619766235
2229,Order the following functions by their running time: n to the power of 2; log -LRB- log n -RRB- ; 2 to the power of -LRB- log n -RRB- ; n!; n to the power of 3.,loglog n; n!; n to the power of 2; n to the power of 3; n to the power oflog n,loglog n; 2 to the power oflog n; n to the power of 2; n to the power of 3; n!,2.25,0,0.9966607093811035,1.0,0.9939364194869995,0.7003225684165955
2230,Order the following functions by their running time: n to the power of 2; log -LRB- log n -RRB- ; 2 to the power of -LRB- log n -RRB- ; n!; n to the power of 3.,"From least to greatest: loglog n, 2 to the power oflog n, n to the power of 2, n to the power of 3, n!",loglog n; 2 to the power oflog n; n to the power of 2; n to the power of 3; n!,5.0,1,0.9602794051170349,0.9574271077563381,0.8979836702346802,0.8814992904663086
2231,Order the following functions by their running time: n to the power of 2; log -LRB- log n -RRB- ; 2 to the power of -LRB- log n -RRB- ; n!; n to the power of 3.,"loglog n2 to the power oflog n, is just n n to the power of 2 n to the power of 3 n!",loglog n; 2 to the power oflog n; n to the power of 2; n to the power of 3; n!,5.0,1,0.9605222344398499,0.9198662110078,0.9455668926239014,0.9263701438903809
2232,Order the following functions by their running time: n to the power of 2; log -LRB- log n -RRB- ; 2 to the power of -LRB- log n -RRB- ; n!; n to the power of 3.,2 to the power oflog nloglog nn to the power of 2 n to the power of 3 n!,loglog n; 2 to the power oflog n; n to the power of 2; n to the power of 3; n!,4.0,1,0.9474639296531677,0.912870929175277,0.9179970622062683,0.9315484762191772
2233,Order the following functions by their running time: n to the power of 2; log -LRB- log n -RRB- ; 2 to the power of -LRB- log n -RRB- ; n!; n to the power of 3.,from lowest to longest. loglog n; 2 to the power oflog n; n!; n to the power of 2; n to the power of 3;,loglog n; 2 to the power oflog n; n to the power of 2; n to the power of 3; n!,3.625,0,0.9901382327079773,0.9198662110078,0.8447757959365845,0.2163785696029663
2234,Order the following functions by their running time: n to the power of 2; log -LRB- log n -RRB- ; 2 to the power of -LRB- log n -RRB- ; n!; n to the power of 3.,loglogn 2 to the power of lognn to the power of 2 n to the power of 3 n!,loglog n; 2 to the power oflog n; n to the power of 2; n to the power of 3; n!,5.0,1,0.9426727890968323,0.9045340337332909,0.9674803018569946,0.8579183220863342
2235,Order the following functions by their running time: n to the power of 2; log -LRB- log n -RRB- ; 2 to the power of -LRB- log n -RRB- ; n!; n to the power of 3.,"loglog n, 2 to the power oflog n, n to the power of 2, n to the power of 3, n!",loglog n; 2 to the power oflog n; n to the power of 2; n to the power of 3; n!,5.0,1,0.9652941226959229,1.0,0.9907583594322205,0.9950664043426514
2236,Order the following functions by their running time: n to the power of 2; log -LRB- log n -RRB- ; 2 to the power of -LRB- log n -RRB- ; n!; n to the power of 3.,"2 to the power oflog n, n to the power of 3, n to the power of 2, loglog n, n!",loglog n; 2 to the power oflog n; n to the power of 2; n to the power of 3; n!,2.0,0,0.9652941226959229,1.0,0.9795894026756287,0.9573150873184204
2237,Order the following functions by their running time: n to the power of 2; log -LRB- log n -RRB- ; 2 to the power of -LRB- log n -RRB- ; n!; n to the power of 3.,"linear, logarithmic, exponential, linear, linear",loglog n; 2 to the power oflog n; n to the power of 2; n to the power of 3; n!,1.5,0,0.4361112713813782,0.0,0.6254633665084839,0.4755527377128601
2238,Order the following functions by their running time: n to the power of 2; log -LRB- log n -RRB- ; 2 to the power of -LRB- log n -RRB- ; n!; n to the power of 3.,"quickest at top, slowest at bottom loglog nn to the power of 2 n to the power of 3 2 to the power oflog nn!",loglog n; 2 to the power oflog n; n to the power of 2; n to the power of 3; n!,4.0,1,0.8864558935165405,0.8043996665398437,0.7445290684700012,0.7262885570526123
2239,Order the following functions by their running time: n to the power of 2; log -LRB- log n -RRB- ; 2 to the power of -LRB- log n -RRB- ; n!; n to the power of 3.,longest to shortest: n to the power of 3; n!; n to the power of 2; 2 to the power oflog n; loglog n,loglog n; 2 to the power oflog n; n to the power of 2; n to the power of 3; n!,3.0,0,0.9895108342170715,0.9198662110078,0.760229229927063,0.5958430171012878
2240,Order the following functions by their running time: n to the power of 2; log -LRB- log n -RRB- ; 2 to the power of -LRB- log n -RRB- ; n!; n to the power of 3.,2 to the power oflog nn to the power of 2 to the power of 3 loglong nn!,loglog n; 2 to the power oflog n; n to the power of 2; n to the power of 3; n!,3.25,0,0.8867766857147217,0.8164965809277261,0.9302301406860352,0.9151583313941956
2241,Order the following functions by their running time: n to the power of 2; log -LRB- log n -RRB- ; 2 to the power of -LRB- log n -RRB- ; n!; n to the power of 3.,from lowest to highest 1-longlong n2 minus 2 to the power of logn3 minus n to the power of 2 4 minus N to the power of 3 5 minus n!,loglog n; 2 to the power oflog n; n to the power of 2; n to the power of 3; n!,5.0,1,0.9139366745948792,0.5477225575051662,0.7128902673721313,0.4175203740596771
2242,Order the following functions by their running time: n to the power of 2; log -LRB- log n -RRB- ; 2 to the power of -LRB- log n -RRB- ; n!; n to the power of 3.,loglog n; n to the power of 2; n to the power of 3; n!; 2 to the power oflog n,loglog n; 2 to the power oflog n; n to the power of 2; n to the power of 3; n!,4.125,1,1.0000001192092896,1.0,0.9957432150840759,0.9624691605567932
2243,Order the following functions by their running time: n to the power of 2; log -LRB- log n -RRB- ; 2 to the power of -LRB- log n -RRB- ; n!; n to the power of 3.,n to the power of 2; n!; n to the power of 3; 2 to the power oflog n; loglog n,loglog n; 2 to the power oflog n; n to the power of 2; n to the power of 3; n!,2.25,0,1.0000001192092896,1.0,0.9759514331817627,0.659298837184906
2244,Order the following functions by their running time: n to the power of 2; log -LRB- log n -RRB- ; 2 to the power of -LRB- log n -RRB- ; n!; n to the power of 3.,"worst to best: n!, n to the power of 3, n to the power of 2, 2 to the power oflog n, loglog n",loglog n; 2 to the power oflog n; n to the power of 2; n to the power of 3; n!,5.0,1,0.959863543510437,0.9198662110078,0.7464763522148132,0.8092043995857239
2245,Order the following functions by their running time: n to the power of 2; log -LRB- log n -RRB- ; 2 to the power of -LRB- log n -RRB- ; n!; n to the power of 3.,"loglong n, 2 to the power oflog n; n to the power of 2, n to the power of 3;",loglog n; 2 to the power oflog n; n to the power of 2; n to the power of 3; n!,4.75,1,0.9868212938308716,0.9534625892455925,0.9801533818244934,0.9345008730888367
2246,"Briefly, how does selection sort work?","it scans the list and selects the smallestlargestelement and places it in the front, increment the curPtr by one, scan the list again for the next smallestlargestelement and place it in with respect with the other sorted elements.","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",5.0,1,0.9682843089103699,0.33333333333333337,0.6819772720336914,0.6062358617782593
2247,"Briefly, how does selection sort work?","Selection sort searches the array for the lowest value and swaps it with the first value in the array. Then searches for the next lowest value and swaps it with the second item in the array, and so on.","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",5.0,1,0.9486870169639587,0.5368754921931594,0.7428423166275024,0.4856939911842346
2248,"Briefly, how does selection sort work?",Compare the largest element to the front element and swap data according to value if needed.,"It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",4.0,1,0.911521315574646,0.0,0.6310675740242004,0.24584652483463287
2249,"Briefly, how does selection sort work?","Selection sort is a sorting algorithm that divides a list in half and has two lists. It then compares the first elements in both these lists and puts these elements in another list, having the smaller element before the bigger one.","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",2.0,0,0.9456334114074707,0.0,0.5805814862251282,0.5506900548934937
2250,"Briefly, how does selection sort work?","Iterate through the listassume list of integers, find the smallest one, and put it in a separate sorted list ... then traverse again and find the next smallest, and move it to the sorted section ... and repeat until you run out of elements to sort.","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",5.0,1,0.9588156938552856,0.0,0.5684981942176819,0.43338513374328613
2251,"Briefly, how does selection sort work?",selection sort selects the smallest element out of the list then the second smallest ... and sorts them acordingly.,"It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",5.0,1,0.9351592063903809,0.3872983346207418,0.7078719735145569,0.6107871532440186
2252,"Briefly, how does selection sort work?",You select the smallest element and place it on the left. You select the smallest element and sort it with respect the the item already on the left. You continue this till the end of the collection of items.,"It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",5.0,1,0.9633034467697144,0.0,0.6795914173126221,0.3696272075176239
2253,"Briefly, how does selection sort work?","A selection sort scrolls through the data structure looking for the lowestor highestunsorted piece of data, moves it to the held spot, increments that spot by one, and starts the process over.","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",5.0,1,0.9629812240600586,0.0,0.6866838932037354,0.501787543296814
2254,"Briefly, how does selection sort work?",Selection sort works by finding the smallest element and then compares it with the largest and sorts the elements.,"It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",2.0,0,0.9436682462692261,0.0,0.6851024031639099,0.443360298871994
2255,"Briefly, how does selection sort work?","Selection sort is usually a recursive sorting method where you divide the elements to be sorted in half repeatedly. You then sort the smallest case, then work your way up, sorting each until they are all sorted.","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",2.5,0,0.9332876205444336,0.0,0.5785394906997681,0.45946192741394043
2256,"Briefly, how does selection sort work?","goes to the middle of the list, checks to see if it is greater or less then the value given and moves through the list accordingly to add the value into the proper place.","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",2.0,0,0.9653887152671814,0.0,0.6920961141586304,0.3464328646659851
2257,"Briefly, how does selection sort work?",selection sort finds the lowest element in the data set and places it behind the pivot point.,"It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",4.5,1,0.9485010504722595,0.316227766016838,0.6445331573486328,0.28939566016197205
2258,"Briefly, how does selection sort work?","Selection sort iterates through the array one element at a time, seeking the least value from the right and replacing the current value with it.","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",4.5,1,0.9600335955619812,0.26726124191242445,0.6979525685310364,0.40221142768859863
2259,"Briefly, how does selection sort work?","Selection sort traverses an unsorted array looking for the smallest value, when it is found it is put at the beginning of the unsorted array. Performed several times, this will output a sorted array.","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",5.0,1,0.9436951875686646,0.6123724356957946,0.6417680382728577,0.3724522888660431
2260,"Briefly, how does selection sort work?",it runs through the list and finds the smallestor largestvalue and puts it at the appropriate position,"It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",4.5,1,0.9641808867454529,0.3535533905932738,0.6208536624908447,0.4703617990016937
2261,"Briefly, how does selection sort work?","pick a number, and set all values less than that number to the left, while all numbers on the right of that number is larger.","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",3.0,0,0.9469321966171265,0.0,0.5724833607673645,0.2912300229072571
2262,"Briefly, how does selection sort work?",It takes the largest item in the unsorted array and swaps it with last item in the unsorted array.,"It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",4.5,1,0.9143635630607605,0.5163977794943223,0.5826460123062134,0.46260684728622437
2263,"Briefly, how does selection sort work?","by selecting the first object and comparing it with the next objects to find one that is smaller, if it does it switches the two. then it comes back the other way and sees if the objects previous to the last one is greater, if it does it switches them. it does this while decreasing the range it looks at until it finishes in the middle.","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",2.5,0,0.9671472907066345,0.0,0.6476182341575623,0.5620214939117432
2264,"Briefly, how does selection sort work?","Selection sorts works by going through a certain list. Goes through the unsorted list and selecting the largest item in the list and placing it in a sorted array. There are two arrays, unsorted and sorted. Complete these steps until the list is sorted.","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",4.5,1,0.9270853400230408,0.15249857033260467,0.6233206987380981,0.3608419895172119
2265,"Briefly, how does selection sort work?","selection sort works by pulling all of the values off to the side, leaving one value in the list. It will then insert a value into the list. if the value is bigger it will go to the right, if smaller if will go to the left.","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",2.5,0,0.9623817801475525,0.0,0.6210877895355225,0.29431405663490295
2266,"Briefly, how does selection sort work?",selection sort searches for the smallest element of the remaining data organization and places it at the largest point of the new data organization,"It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",4.5,1,0.923234224319458,0.23570226039551587,0.5645432472229004,0.5037817358970642
2267,"Briefly, how does selection sort work?","Selection sort sorts an array one element at at time. It first finds the element with the smallest key and puts it into the first location within its array or list, then finds the next smallest and puts it in the second location, and so on.","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",5.0,1,0.973545253276825,0.4016096644512495,0.766629159450531,0.3938407897949219
2268,"Briefly, how does selection sort work?","select an element compare it with 2nd element if it is greater, swap it","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",3.0,0,0.9014028310775757,0.0,0.6749331951141357,0.6155129671096802
2269,"Briefly, how does selection sort work?","it selects the smallest element in a list and switches it with the element in its correct position, then it selects the next smallest and does the same ...","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",4.5,1,0.9642260074615479,0.5144957554275266,0.7209390997886658,0.568439781665802
2270,"Briefly, how does selection sort work?",It starts at the first element and replaces it with the smallest element found to the right. It then repeats with the next element in the list.,"It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",4.5,1,0.958746075630188,0.0,0.7512941360473633,0.4649398922920227
2271,"Briefly, how does selection sort work?","selection sort is when you pick a data member and put it in a new array, then you pick another data member and put it in order with the new array, then pick another and insert it in the correct place in the new array, etc etc","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",3.0,0,0.9577979445457458,0.4685212856658182,0.6927273869514465,0.6108580231666565
2272,"Briefly, how does selection sort work?","it searches through the entire data set for the best element to go in the current position, then it moves up a position and searches through the remainder of the set for the best element for the new position.","It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",4.0,1,0.9646989703178406,0.5388159060803247,0.5985996127128601,0.4591960906982422
2273,"Briefly, how does selection sort work?",selection sort iterates through the array one element a time searching for the right and replacing current value with it.,"It selects the minimum from an array and places it on the first position, then it selects the minimum from the rest of the array and places it on the second position, and so forth.",4.0,1,0.9386605024337769,0.30151134457776363,0.7125972509384155,0.4259188771247864
2274,What is the advantage of linked lists over arrays?,A link list can grow to a infinite size as a array has a fixes size.,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",5.0,1,0.881218671798706,0.0,0.7122519612312317,0.48556244373321533
2275,What is the advantage of linked lists over arrays?,The advantage of linked lists is that they are not limited in size like arrays.,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",5.0,1,0.9298668503761292,0.5345224838248489,0.43273407220840454,0.5334133505821228
2276,What is the advantage of linked lists over arrays?,link lists dont have a fixed size,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",5.0,1,0.823074460029602,0.447213595499958,0.42099297046661377,0.52107834815979
2277,What is the advantage of linked lists over arrays?,"Linked Lists can be of variable size, where arrays have fixed size.","Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",5.0,1,0.9374067783355713,0.5773502691896257,0.7937495708465576,0.7294201850891113
2278,What is the advantage of linked lists over arrays?,"Linked lists do not have a definite size. They can be as big or as small as needed, and they do not have to allocate extra memory for elements you do not need. Arrays size must be defined.","Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",5.0,1,0.9146175980567932,0.420084025208403,0.4173043370246887,0.509512186050415
2279,What is the advantage of linked lists over arrays?,"a linked list has a dynamic size, but an array only has a fixed size and takes allot of extra operations to increase its size.","Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",5.0,1,0.9075348377227783,0.3244428422615252,0.5690393447875977,0.4075544476509094
2280,What is the advantage of linked lists over arrays?,You do not have to predetermine your list size as you do with arrays. Linked list have the ability to be as large as you want them adding memory as needed.,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",5.0,1,0.9022971987724304,0.2672612419124244,0.4712204933166504,0.3849380910396576
2281,What is the advantage of linked lists over arrays?,The main advantage to a linked list is that it can have it is size adjusted during runtime.,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",5.0,1,0.9019906520843506,0.3779644730092273,0.6533403396606445,0.5276565551757812
2282,What is the advantage of linked lists over arrays?,Linked lists are able to grow in size. So elements can be added to the list.,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",5.0,1,0.9231084585189819,0.6123724356957946,0.6949238777160645,0.5876016020774841
2283,What is the advantage of linked lists over arrays?,"Linked lists are not confined to a specific size, and can have elements added and removed far easier. They are also easier to traverse.","Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",5.0,1,0.9225987792015076,0.4629100498862758,0.4505462050437927,0.5437073111534119
2284,What is the advantage of linked lists over arrays?,There is no predetermined length,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",5.0,1,0.7939198017120361,0.0,0.18316379189491272,0.30522650480270386
2285,What is the advantage of linked lists over arrays?,"Inserts into a linked list are far cheaper than an insert into an array. With an array, all items after the one being inserted must me shifted, with a linked list, only the pointers are replaced.","Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",4.5,1,0.9262584447860718,0.43643578047198467,0.41885197162628174,0.4275011718273163
2286,What is the advantage of linked lists over arrays?,Linked lists may be dynamically grown.,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",5.0,1,0.8940214514732361,0.7071067811865476,0.7588388919830322,0.6275838613510132
2287,What is the advantage of linked lists over arrays?,"Linked lists are very dynamic in that they can change and be added or subtracted to very easily because they are not linear in memory. Arrays are pre-specified in size to be cast over a certain amount of disk space. This makes insertion into Arrays difficult because all elements must be shifted, and if you reach the end of the array, you are done even if you have more data to input. Linked Lists do not run into these problems.","Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",5.0,1,0.9431310296058655,0.4866642633922877,0.5253046751022339,0.5469476580619812
2288,What is the advantage of linked lists over arrays?,"linked lists have an indefinite size, whereas arrays are a specific size.","Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",5.0,1,0.936652421951294,0.4714045207910317,0.634088397026062,0.5643412470817566
2289,What is the advantage of linked lists over arrays?,"Linked lists have no predefined length, and thus you can have virtually unlimited items in that list.","Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",5.0,1,0.9276551008224487,0.5000000000000001,0.3023664355278015,0.555095911026001
2290,What is the advantage of linked lists over arrays?,"They grow dynamically, unlike the fixed size array","Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",5.0,1,0.8805262446403503,0.0,0.6246943473815918,0.4057006239891052
2291,What is the advantage of linked lists over arrays?,"you can add as many nodes as you like without having to specify a list size, if an array gets too big you have to copy its entire contents to another larger array to get more room","Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",5.0,1,0.9003857970237732,0.0,0.4581378102302551,0.33814945816993713
2292,What is the advantage of linked lists over arrays?,Linkded list does not have a fixed size. Arrays have a fixed size.,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",5.0,1,0.8741371631622314,0.0,0.5291750431060791,0.6293052434921265
2293,What is the advantage of linked lists over arrays?,"Linked lists have a dynamic size, where as arrays have a static size.","Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",5.0,1,0.928819477558136,0.5773502691896257,0.8586289882659912,0.6731314659118652
2294,What is the advantage of linked lists over arrays?,linked lists do not have a memory constraint other than total memory,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",5.0,1,0.8989600539207458,0.5000000000000001,0.3107728958129883,0.5586756467819214
2295,What is the advantage of linked lists over arrays?,"The primary advantage of linked lists over arrays is their ability to become larger or smaller as data is added and removed from the list, whereas arrays may waste memory for small data sets, and run out of space for large data sets.","Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",5.0,1,0.9468428492546082,0.2461829819586655,0.5689536333084106,0.5387833118438721
2296,What is the advantage of linked lists over arrays?,"Array have fixed size, in Link List are flexible for adding or deleting an element.","Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",5.0,1,0.9357843399047852,0.0,0.7925556898117065,0.5256631374359131
2297,What is the advantage of linked lists over arrays?,they are resizeable,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",5.0,1,0.7338999509811401,0.0,0.4313126802444458,0.4442797899246216
2298,What is the advantage of linked lists over arrays?,Linked lists can be dynamically allocated and their size can change as needed.,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",5.0,1,0.9376558661460876,0.5345224838248489,0.8592382669448853,0.6281587481498718
2299,What is the advantage of linked lists over arrays?,"linked lists do not have to have a specified size, they are easier to add to and remove from","Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",5.0,1,0.9027732014656067,0.5345224838248489,0.33143681287765503,0.4995824694633484
2300,What is the advantage of linked lists over arrays?,"they dont have a fixed size, no shiftnig needs to be done for insertion or deletion.","Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",5.0,1,0.8591667413711548,0.0,0.1416676938533783,0.34161555767059326
2301,What is the advantage of linked lists over arrays?,linked list many be dynamically grown. It has not limit,"Linked lists are dynamic structures, which allow for a variable number of elements to be stored.",5.0,1,0.9027831554412842,0.447213595499958,0.5199295282363892,0.5209519863128662
2302,What is a queue?,A data structure in C plus plus where the the first element in the queue is the first element taken out of the queue.,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,5.0,1,0.9677150845527649,0.596284793999944,0.8379198312759399,0.5646111965179443
2303,What is a queue?,A queue is an abstract data type that performs operations on both ends of the list and exhibits first-in first-out behavior.,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,5.0,1,0.9432063698768616,0.5477225575051663,0.8432716131210327,0.5441170930862427
2304,What is a queue?,First in first out.,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,4.5,1,0.0,0.0,0.0,0.0
2305,What is a queue?,"A queue is an abstract data type that involves putting an element at the back of the list. Queues use the FIFO, first in first out, idea where the first element in the list is the first that comes out.",A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,5.0,1,0.9605981111526489,0.32444284226152514,0.8022907376289368,0.2825605273246765
2306,What is a queue?,"A data structure that implements first in, first out. The element that has been there the longest is the first to get served.",A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,5.0,1,0.9407005310058594,0.5773502691896258,0.7326258420944214,0.8377442359924316
2307,What is a queue?,a data structure that inserts elements at the end of it and removes elements from the front.,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,5.0,1,0.922052800655365,0.769800358919501,0.6173152923583984,0.44938576221466064
2308,What is a queue?,A queue is a collection of elements with the characteristics of first in first outFIFO. The first item in is the first item out. All additional items are added to the end of the list.,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,5.0,1,0.9427036046981812,0.37796447300922736,0.7816711068153381,0.5755496621131897
2309,What is a queue?,"A queue is a data structure that inserts data into a FIFO configuration, that is, data input to the structure is always at it is end, and data taken is always from the beginning.",A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,5.0,1,0.9447695016860962,0.7637626158259735,0.7422043085098267,0.5737480521202087
2310,What is a queue?,It is a particular set of entities that are put in to a certain order by the enqueue and the dequeue functions.,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,3.5,0,0.9559154510498047,0.5000000000000001,0.701245129108429,0.5046780705451965
2311,What is a queue?,A queue is a data type that operates under a FILOFirst In Last Outmethod. This means that the first element inserted into the queue is the first element removed.,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,4.0,1,0.9543889164924622,0.5303300858899107,0.7612878680229187,0.43605029582977295
2312,What is a queue?,like a linked list except it is first in last out,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,2.5,0,0.8916878700256348,0.0,0.5190861225128174,0.4204498529434204
2313,What is a queue?,A queue is like a stack except it follows FIFOFirst in first out.,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,5.0,1,0.9255295991897583,0.447213595499958,0.7375293970108032,0.47562700510025024
2314,What is a queue?,A queue is a data structure where the first node in is the first node out.,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,5.0,1,0.9484295845031738,0.6546536707079773,0.8327295184135437,0.6212776899337769
2315,What is a queue?,A queue is a First in First out data structure much like a line for a movie theatre. The first object in line is the first object to be handled or enacted upon.,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,5.0,1,0.9511531591415405,0.4330127018922194,0.6061700582504272,0.4013671278953552
2316,What is a queue?,"its a lot like a stack, except that the first item put into the list is the first item to be taken from the list.",A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,5.0,1,0.9212445616722107,0.0,0.6729520559310913,0.5045391321182251
2317,What is a queue?,"a first in first out list of items, like if you put 5, 4, 3, 2, and 1 in the queue it will when you dequeue items remove the items in the same order as put in, so thus it will put out, 5, 4, 3, 2, and 1 in that exact order.",A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,5.0,1,0.8596340417861938,0.32444284226152514,0.6914160251617432,0.4136626720428467
2318,What is a queue?,"A linked list with a First In, Out structure dequeue at the head of the list enqueue at the end of the list",A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,5.0,1,0.9388786554336548,0.447213595499958,0.7354574799537659,0.49256592988967896
2319,What is a queue?,"a list of objects that follow the rule first in first out, essentially a linked list that goes in order of the first object in the list is the first to be taken off.",A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,5.0,1,0.9383793473243713,0.0,0.7948057055473328,0.60032057762146
2320,What is a queue?,A queue is an abstract data type that is based off of the priniple of first in first out. FIFO. The first item inserted into the list will the first item taken out.,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,5.0,1,0.9548707008361816,0.37796447300922725,0.8011277318000793,0.5838817954063416
2321,What is a queue?,It is a first in first out data structure. It can be implemented with either a linked list or an array.,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,5.0,1,0.9362002015113831,0.5773502691896258,0.723020076751709,0.5895437002182007
2322,What is a queue?,an ordered list that performs task in the order of first in first out. adding items to the queue places items behind the rest of them. taking items off the queue takes the one that has waited the longest.,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,5.0,1,0.9388061165809631,0.4,0.6968957185745239,0.6587095260620117
2323,What is a queue?,"A queue is a linear, first-in first-out data structure. Data must be accessed in the same order it was put into the queue, so only the oldest item in the queue is accessible at any time. Main functions defined are enqueue and dequeue.",A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,5.0,1,0.9722254872322083,0.7205766921228923,0.7688081860542297,0.595100998878479
2324,What is a queue?,"Queue is a buffer, it follows the rule of First In and First out. Queue is very useful in computer science for scheduleing.",A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,5.0,1,0.9524051547050476,0.6030226891555273,0.7212798595428467,0.5269684195518494
2325,What is a queue?,a queue is a set of elements where the first element inserted is the first element to be removed,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,5.0,1,0.9236708283424377,0.4714045207910317,0.7903246879577637,0.5689642429351807
2326,What is a queue?,Is a list of items where the the user only has access to the first element and each new element is added at the end.,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,5.0,1,0.9375735521316528,0.0,0.6539554595947266,0.5529770851135254
2327,What is a queue?,"a queue is a list of data that follows the fifo principle, an example of this would be when you get into a line at a movie theater ... the first one there gets to buy a ticket first",A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,5.0,1,0.9340066909790039,0.4803844614152616,0.5006417036056519,0.45172256231307983
2328,What is a queue?,"A queue is a data structure that holds a set of objects, which has a FIFOfirst in first outpriority.",A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,5.0,1,0.9351192116737366,0.6123724356957946,0.8579443693161011,0.6310171484947205
2329,What is a queue?,like a linked list expect first in last out,A data structure that stores elements following the first in first out principle. The main operations in a queue are enqueue and dequeue.,1.5,0,0.8796323537826538,0.0,0.6165773868560791,0.5350179672241211
2330,What are the main operations associated with a stack?,push and pop,push and pop,5.0,1,1.000000238418579,1.0000000000000002,1.0,1.0
2331,What are the main operations associated with a stack?,"Pop, which removes the head, or least recently inserted node from the stack. Push, which inserts a new node at the head of the stack.",push and pop,5.0,1,0.7372546195983887,0.32444284226152514,0.500878632068634,0.4287472367286682
2332,What are the main operations associated with a stack?,Push and pop,push and pop,5.0,1,1.000000238418579,1.0000000000000002,1.0,1.0
2333,What are the main operations associated with a stack?,The Push function and the Pop function.,push and pop,5.0,1,0.7945955395698547,0.5773502691896258,0.8517789244651794,0.7635564208030701
2334,What are the main operations associated with a stack?,push and pop,push and pop,5.0,1,1.000000238418579,1.0000000000000002,1.0,1.0
2335,What are the main operations associated with a stack?,push puts an element on the stack pop-takes an element off the stack,push and pop,5.0,1,0.7506129741668701,0.4082482904638631,0.615014910697937,0.5483220219612122
2336,What are the main operations associated with a stack?,Push and pop.,push and pop,5.0,1,0.9540760517120361,1.0000000000000002,0.9894505143165588,0.9879052042961121
2337,What are the main operations associated with a stack?,Push and Pop,push and pop,5.0,1,1.000000238418579,1.0000000000000002,1.0,1.0
2338,What are the main operations associated with a stack?,push and pop.,push and pop,5.0,1,0.9540760517120361,1.0000000000000002,0.9894505143165588,0.9879052042961121
2339,What are the main operations associated with a stack?,"Push and Pop. Push adds an element to the stack, while Pop removes the top element from a stack.",push and pop,5.0,1,0.839448869228363,0.6666666666666667,0.5966138243675232,0.9879053831100464
2340,What are the main operations associated with a stack?,pop and push,push and pop,5.0,1,1.000000238418579,1.0000000000000002,0.9832515716552734,0.9573414921760559
2341,What are the main operations associated with a stack?,"push, pop, search, isEmpty",push and pop,4.5,1,0.7383852601051331,0.7071067811865476,0.7678042054176331,0.5199399590492249
2342,What are the main operations associated with a stack?,push and pop,push and pop,5.0,1,1.000000238418579,1.0000000000000002,1.0,1.0
2343,What are the main operations associated with a stack?,"Push, Pop, isEmpty, isFull Maybe List to show all elements or an operation to count how many elements in the stack.",push and pop,5.0,1,0.7858061194419861,0.3922322702763681,0.3972318172454834,0.40360772609710693
2344,What are the main operations associated with a stack?,"pop, push",push and pop,5.0,1,0.9137297868728638,1.0000000000000002,0.9653359651565552,0.9416959285736084
2345,What are the main operations associated with a stack?,"isempty, push and pop, along with usually,",push and pop,5.0,1,0.8095083832740784,0.7071067811865476,0.8808199167251587,0.5668295621871948
2346,What are the main operations associated with a stack?,push and pop,push and pop,5.0,1,1.000000238418579,1.0000000000000002,1.0,1.0
2347,What are the main operations associated with a stack?,push and pop. push puts objects into the stack and pop takes them out following the first in last out rule.,push and pop,5.0,1,0.8460335731506348,0.7559289460184545,0.5202727317810059,0.9879053831100464
2348,What are the main operations associated with a stack?,"The main operations in a stack are push and pop. Push adds an item to the top of the stack, pop removes the top item from the stack.",push and pop,5.0,1,0.7864412069320679,0.5656854249492381,0.5364171862602234,0.7046697735786438
2349,What are the main operations associated with a stack?,push and pop,push and pop,5.0,1,1.000000238418579,1.0000000000000002,1.0,1.0
2350,What are the main operations associated with a stack?,"push, which adds an item to the top of the stack, and pop, which takes the first item off the top to the stack",push and pop,5.0,1,0.7664333581924438,0.4082482904638631,0.5901809334754944,0.5976965427398682
2351,What are the main operations associated with a stack?,"the main functions defined for a stack are push, which puts an element on the top of the stack, and pop, which removes an item from the top.",push and pop,5.0,1,0.738629162311554,0.3922322702763682,0.5137684941291809,0.562541127204895
2352,What are the main operations associated with a stack?,Push Pop Full IsEmpty,push and pop,5.0,1,0.9118481874465942,0.8164965809277261,0.8375495076179504,0.5335652828216553
2353,What are the main operations associated with a stack?,pop and push to remove an element and to insert an element,push and pop,5.0,1,0.7954128384590149,0.5000000000000001,0.7173653841018677,0.6171534657478333
2354,What are the main operations associated with a stack?,"Push, Pop",push and pop,5.0,1,0.9137297868728638,1.0000000000000002,0.9741918444633484,0.9626284837722778
2355,What are the main operations associated with a stack?,push and pop,push and pop,5.0,1,1.000000238418579,1.0000000000000002,1.0,1.0
2356,What are the main operations associated with a stack?,push Add an element to the top of the stack pop remove the top element from the stack,push and pop,5.0,1,0.7524464130401611,0.4082482904638631,0.4965539574623108,0.5234078168869019
2357,What are the main operations associated with a stack?,push and pop,push and pop,5.0,1,1.000000238418579,1.0000000000000002,1.0,1.0
2358,What is the Euler tour traversal of a tree?,When you traverse a tree of any size you will visit each node three times. Its on the order of 3n or Onrunning time.,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",4.0,1,0.9273020625114441,0.5477225575051663,0.7721813917160034,0.7330420613288879
2359,What is the Euler tour traversal of a tree?,"The Euler tour traversal of a tree begins at the root and visits each node in the tree from the left, then bottom, then right sides.","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",5.0,1,0.9612812995910645,0.7171371656006365,0.8024292588233948,0.7741868495941162
2360,What is the Euler tour traversal of a tree?,Where you visit the in order according to its data value.,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",3.0,0,0.8836644887924194,0.0,0.21657001972198486,0.2073315680027008
2361,What is the Euler tour traversal of a tree?,"It is a tree that shows how it functions. It contains parents, children, siblings, ancestors and descendents. The use of tree type algorithm is also an alternative sorting algorithm.","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",2.0,0,0.893152117729187,0.4472135954999579,0.4492660462856293,0.47033771872520447
2362,What is the Euler tour traversal of a tree?,"Start from the root, circle around the whole tree, naming each node as you see it.","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",4.5,1,0.9638790488243103,0.7071067811865477,0.6471925973892212,0.7545281052589417
2363,What is the Euler tour traversal of a tree?,it is where you visit the parent then you vistit the children,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",1.5,0,0.8866397142410278,0.0,0.23808443546295166,0.12771740555763245
2364,What is the Euler tour traversal of a tree?,"To start from the root, traveling left and visiting ever child along the way till you return to the root from the right.","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",4.0,1,0.9500212073326111,0.6405126152203487,0.49546676874160767,0.4559464454650879
2365,What is the Euler tour traversal of a tree?,"Traversing a tree down to it is terminal child and then all of it is siblings, then it traverses up the terminal child 's parent and all of it is siblingsrepeating the first step if those siblings have childrenuntil the root node has been visited.","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",4.0,1,0.9333508610725403,0.36927447293799825,0.45960476994514465,0.4927399754524231
2366,What is the Euler tour traversal of a tree?,The Euler tour traversal of a tree the function that iteratively keeps track of the pointer on each node.,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",3.0,0,0.8494724035263062,0.44721359549995804,0.6302651166915894,0.5273033380508423
2367,What is the Euler tour traversal of a tree?,"You travel the outside edge of the tree, clockwise, while naming each node.","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",4.0,1,0.9375367760658264,0.5345224838248489,0.6370823979377747,0.5496664047241211
2368,What is the Euler tour traversal of a tree?,children to root,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",2.0,0,0.7180140018463135,0.7071067811865476,0.36434048414230347,0.26112693548202515
2369,What is the Euler tour traversal of a tree?,go to the bottom of the left sub tree and visit the parent and then its children,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",3.0,0,0.9209061861038208,0.5773502691896258,0.45457011461257935,0.357673704624176
2370,What is the Euler tour traversal of a tree?,The Euler tour traverses through the tree in a rubber-band style shape.,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",3.5,0,0.8558833599090576,0.3535533905932738,0.5998411178588867,0.4262326955795288
2371,What is the Euler tour traversal of a tree?,"The Euler tour traversal of a tree is a specific way of navigating a tree that involves following the tree starting at the very top and moving along the left side of the tree first, cupping in to visit the parents of children nodes. It allows for each node to be visited from the left, the right and the bottom. The Euler tour first progresses to a left child if there is one, then progresses to it is parent, then it is next child, then it is parent 's parent.","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",4.5,1,0.9577227234840393,0.5463583647081531,0.6115152835845947,0.4885154664516449
2372,What is the Euler tour traversal of a tree?,it runs through the parents and the children in order,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",3.0,0,0.8856453895568848,0.0,0.3145027458667755,0.2604668140411377
2373,What is the Euler tour traversal of a tree?,"it starts node on the left of the root and then proceeds to visits each node in a left to right order, visits the root, and then proceeds to repeat the previous step on the right side of the tree.","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",3.5,0,0.9507880210876465,0.7348469228349537,0.6653042435646057,0.7347594499588013
2374,What is the Euler tour traversal of a tree?,"Travel from the root to the farthest left child Backup, travel the leftmost children in the right side repeat until reaching the rightmost child.","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",4.5,1,0.9296247959136963,0.40824829046386313,0.414972186088562,0.3433137834072113
2375,What is the Euler tour traversal of a tree?,"has preorder, in order, and postorder of a tree. preorder equals puts the parent node in front of the child nodes. in order equals puts the parent node between the left child and right child nodes. postorder equals puts the parent node after the child nodes.","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",3.5,0,0.8979361653327942,0.34412360080584264,0.5433903932571411,0.43118205666542053
2376,What is the Euler tour traversal of a tree?,"The Euler traveral is when you go through a tree looking for nodes to put in the order of left, root, right. Like inOrder traversal.","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",4.0,1,0.9436748623847961,0.5773502691896258,0.7200119495391846,0.5874284505844116
2377,What is the Euler tour traversal of a tree?,"An Euler traversal is a traversal that begins with the root, and travels around the outside of the tree. Each element in the tree is visited 3 times. From the left, from the bottom and from the right.","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",5.0,1,0.9686126708984375,0.632455532033676,0.9063188433647156,0.6073480248451233
2378,What is the Euler tour traversal of a tree?,Euler tour traversal of a tree traverses down each branch straight to one leaf then starts again at the root and repeats until all elements have been traversed.,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",4.0,1,0.9355407953262329,0.3922322702763682,0.7278777360916138,0.5955150127410889
2379,What is the Euler tour traversal of a tree?,"The Euler tour visits every node in a tree, starting with the root and working around the tree counterclockwise. in-order, post-order, and pre-order traversals can be seen as variations of the Euler tour traversal.","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",4.5,1,0.9381815195083618,0.46709936649691386,0.761090099811554,0.6694933176040649
2380,What is the Euler tour traversal of a tree?,not answered,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",0.0,0,0.6054144501686096,0.0,0.08605420589447021,0.07266318798065186
2381,What is the Euler tour traversal of a tree?,to traverse going down to the left then go to the right of last children and back to the top .. kind of like going around the tree,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",5.0,1,0.9250788688659668,0.5222329678670936,0.6883311867713928,0.492362380027771
2382,What is the Euler tour traversal of a tree?,"You recursively visit every node on the list. You visit the node from the left, the bottom, and from the right.","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",5.0,1,0.9525794386863708,0.6666666666666669,0.5313246250152588,0.3931630253791809
2383,What is the Euler tour traversal of a tree?,"the euler tour is a way to traverse a tree where you come into contact with each node three times, from the left, from the right, and from the bottom","A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",5.0,1,0.9754620790481567,0.6741998624632421,0.9141877889633179,0.716875433921814
2384,What is the Euler tour traversal of a tree?,traversing a tree level by level,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",1.5,0,0.7751327753067017,0.4082482904638631,0.7073260545730591,0.6866824626922607
2385,What is the Euler tour traversal of a tree?,The Euler traversal through the tree in a rubber band style shape.,"A walk around the tree, starting with the root, where each node is seen three times: from the left, from below, from the right.",3.5,0,0.834091305732727,0.3779644730092273,0.5983309149742126,0.3917992115020752
2386,How do you delete a node from a binary search tree?,"if root, set root to NULL else if deleting right leaf, set rightPtr of parent node to NULL else if deleting left leaf, set leftPtr of parent node to NULL else if deleting a left or right subtree child node, set the max leaf child in the left subtree as the new child node.","Find the node, then replace it with the leftmost node from its right subtreeor the rightmost node from its left subtree.",4.5,1,0.9340196847915649,0.5568998626725218,0.7339839935302734,0.5452642440795898
2387,How do you delete a node from a binary search tree?,"Traverse the tree and find the node, if the node has no children, simply delete it; otherwise set the node 's data equal to the data of one of its children then set the pointer for that child to NULL.","Find the node, then replace it with the leftmost node from its right subtreeor the rightmost node from its left subtree.",3.5,0,0.9271098971366882,0.5570860145311557,0.6449136137962341,0.40780097246170044
2388,How do you delete a node from a binary search tree?,first attaching the elements from the node to be deleting to alternate nodes and then deleting that node. delete node;,"Find the node, then replace it with the leftmost node from its right subtreeor the rightmost node from its left subtree.",3.5,0,0.9374696612358093,0.7071067811865476,0.7670629024505615,0.5828930735588074
2389,How do you delete a node from a binary search tree?,"If you delete a node from a tree, you have to link that nodes parents to the children of that node.","Find the node, then replace it with the leftmost node from its right subtreeor the rightmost node from its left subtree.",3.5,0,0.9120241403579712,0.6324555320336759,0.5703694820404053,0.4356873035430908
2390,How do you delete a node from a binary search tree?,Must delete the information that the node containsto free up memory or garbage collectand also delete the pointerin that node 's parentthat points to the node you wish to delete.,"Find the node, then replace it with the leftmost node from its right subtreeor the rightmost node from its left subtree.",2.0,0,0.918067991733551,0.5669467095138409,0.7242617607116699,0.34366828203201294
2391,How do you delete a node from a binary search tree?,you replace the node with the largest element of its left subtree or replace it with the smallest element of the right subtree.,"Find the node, then replace it with the leftmost node from its right subtreeor the rightmost node from its left subtree.",5.0,1,0.9531111121177673,0.6054055145966812,0.8064725399017334,0.8786823749542236
2392,How do you delete a node from a binary search tree?,"You traverse the tree till you find the node you are wanting to delete. If the node has no children you delete it. If the node has children, before you delete, you find the left-most of its children and attach it to the root then you can delete the node.","Find the node, then replace it with the leftmost node from its right subtreeor the rightmost node from its left subtree.",4.0,1,0.8991580605506897,0.5933661039639301,0.6200323104858398,0.3821837306022644
2393,How do you delete a node from a binary search tree?,Link the to-be-deleted 's left child to the to-be-deleted 's parent 's left child pointer.,"Find the node, then replace it with the leftmost node from its right subtreeor the rightmost node from its left subtree.",4.5,1,0.7803106904029846,0.5163977794943223,0.6407666206359863,0.2935004234313965
2394,How do you delete a node from a binary search tree?,The way you delete a node from a binary search tree is first you have take the root and then see the nodes that are coming from the root. And delete the nodes and set the root to NULL.,"Find the node, then replace it with the leftmost node from its right subtreeor the rightmost node from its left subtree.",2.0,0,0.9341613054275513,0.2,0.7203930020332336,0.4001500904560089
2395,How do you delete a node from a binary search tree?,You remove the element from the tree and move the next highest element from the left into its place.,"Find the node, then replace it with the leftmost node from its right subtreeor the rightmost node from its left subtree.",4.5,1,0.8913396000862122,0.3333333333333333,0.6994651556015015,0.6201319694519043
2396,How do you delete a node from a binary search tree?,delete node;,"Find the node, then replace it with the leftmost node from its right subtreeor the rightmost node from its left subtree.",1.5,0,0.7540495991706848,0.7071067811865476,0.6125540137290955,0.31746888160705566
2397,How do you delete a node from a binary search tree?,"the deletion of a node depends upon if it has children and if it is an AVL binary search tree. Assuming it is not an AVL tree, and the node being deleted has no children, you just set its pointer to null. If it has a left child or a right child exclusively, that child replaces the deleted node, if it has two children, the left most child of the right sub treeor right most child of the left subtreewill replace it","Find the node, then replace it with the leftmost node from its right subtreeor the rightmost node from its left subtree.",5.0,1,0.8917496800422668,0.492365963917331,0.6452109813690186,0.2815968990325928
2398,How do you delete a node from a binary search tree?,"If the node is a leaf, just set it is parent 's pointer to null and delete it, if it has a single child, set the parent 's pointer to the child and delete; if it has two children, set the node to one of the middle children and remove that child from its previous position as a leafrightmost child of the left subtree or leftmost child of the right subtree.","Find the node, then replace it with the leftmost node from its right subtreeor the rightmost node from its left subtree.",5.0,1,0.9139314293861389,0.3646464492724878,0.6458085775375366,0.3679777681827545
2399,How do you delete a node from a binary search tree?,"In a binary search tree, you must first establish a proper replacement for the node you are about to delete, usually a child from the soon to be deleted node. Once that replacement node has been found, you simply reassign it to where the node that is going to be deleted is. After the deleted node has been usurped, you remove the deleted node from memory so it may be used again.","Find the node, then replace it with the leftmost node from its right subtreeor the rightmost node from its left subtree.",4.0,1,0.9113128781318665,0.7071067811865476,0.7042704820632935,0.4687759280204773
2400,How do you delete a node from a binary search tree?,It all depends on where the node is located. If its a child it can just be deleted but for a node inside the tree it must be replaced with another node that works in its place.,"Find the node, then replace it with the leftmost node from its right subtreeor the rightmost node from its left subtree.",3.5,0,0.9116916060447693,0.6882472016116854,0.6452851295471191,0.4743863642215729
2401,How do you delete a node from a binary search tree?,"if the node has no children, delete it right away, otherwise, put either the furthest right node on the left side or the furthest left node on the right side in that place and perform a the above on that node to guarantee that it is children get handled properly.","Find the node, then replace it with the leftmost node from its right subtreeor the rightmost node from its left subtree.",5.0,1,0.9104248881340027,0.7727272727272728,0.6378045082092285,0.37122902274131775
2402,How do you delete a node from a binary search tree?,Create a temp Node Set temp 's values to the Node after head or NULL in the case of only head Node in the list. Set head equal to temp. Delete temp,"Find the node, then replace it with the leftmost node from its right subtreeor the rightmost node from its left subtree.",2.0,0,0.9185400605201721,0.4472135954999579,0.7538399696350098,0.4027412533760071
2403,How do you delete a node from a binary search tree?,"by searching down the tree until you find the node, and replacing the link to that node with the greatest child node on the left subtree or the least child node on the right subtree.","Find the node, then replace it with the leftmost node from its right subtreeor the rightmost node from its left subtree.",4.5,1,0.9540968537330627,0.8295613557843403,0.7129725813865662,0.754277765750885
2404,How do you delete a node from a binary search tree?,"Set the nodes to NULL, where that it does not point to anything, and the use the DELETE opertator to clear space from memory.","Find the node, then replace it with the leftmost node from its right subtreeor the rightmost node from its left subtree.",1.5,0,0.8987694978713989,0.0,0.5918575525283813,0.3250250518321991
2405,How do you delete a node from a binary search tree?,"You must first traverse the tree to find the appropriate value. Then you must make sure that the node is a leaf node. If it is, then you can delete the pointer to that specific node.","Find the node, then replace it with the leftmost node from its right subtreeor the rightmost node from its left subtree.",3.0,0,0.9124696850776672,0.6882472016116853,0.6876121759414673,0.1771765947341919
2406,How do you delete a node from a binary search tree?,"if the node is a leaf, you set it is parent 's pointer to null. if the node is in the tree you must replace the node with one in the tree: either the largest in the left of the tree or the smallest in the right of the tree. this can be done recursively if needed.","Find the node, then replace it with the leftmost node from its right subtreeor the rightmost node from its left subtree.",5.0,1,0.917624294757843,0.5694947974514996,0.6627451181411743,0.44140806794166565
2407,How do you delete a node from a binary search tree?,"if the node is a leaf it can simply be deallocated or deleted from memory, and its parent 's reference to it changed to NULL. If the node has a single child, the pointer to it should be made to point to its child before deleting the node. Should the node have two children, the easiest solution may be to copy the node 's entire subtree to a new array or tree, delete the node and all descendants, then add the elements taken from the subtree back into the main tree.","Find the node, then replace it with the leftmost node from its right subtreeor the rightmost node from its left subtree.",4.5,1,0.9407879114151001,0.7352146220938081,0.6752585172653198,0.4851061701774597
2408,How do you delete a node from a binary search tree?,not answered,"Find the node, then replace it with the leftmost node from its right subtreeor the rightmost node from its left subtree.",0.0,0,0.5249637365341187,0.0,0.24317514896392822,0.006542782299220562
2409,How do you delete a node from a binary search tree?,you cannot delete a node because that can cause a node to have more than 2 children,"Find the node, then replace it with the leftmost node from its right subtreeor the rightmost node from its left subtree.",1.5,0,0.8707156777381897,0.7559289460184546,0.3644920587539673,0.30437833070755005
2410,How do you delete a node from a binary search tree?,"You search the tree for the node using recursion. When you find the node, you determine whether it is a leaf or a internal node. If it is a leaf, you just delete it and set the parent pointer to that node to NULL. If it is a node, you replace the node with either of the children nodes.","Find the node, then replace it with the leftmost node from its right subtreeor the rightmost node from its left subtree.",4.0,1,0.9450260400772095,0.8101627221513197,0.7078137397766113,0.49988853931427
2411,How do you delete a node from a binary search tree?,"to delete the node, you would have to link the children nodes that are connected to the node to be deleted to the remaining nodes of the tree in such a way that nodes on the right of the parent node are larger than the parent and nodes on the left of the parent node are smaller","Find the node, then replace it with the leftmost node from its right subtreeor the rightmost node from its left subtree.",4.0,1,0.9321084022521973,0.5798207565938076,0.6569306254386902,0.5624822378158569
2412,How do you delete a node from a binary search tree?,"if it has no children, you just delete it. if it only has one child, just replace the node with whichever child it has. if it has both children, replace it with one of its children, and send the other child down along the other side of the new node.","Find the node, then replace it with the leftmost node from its right subtreeor the rightmost node from its left subtree.",4.0,1,0.8589531183242798,0.43386091563731244,0.650675356388092,0.12277812510728836
2413,How do you delete a node from a binary search tree?,pointer to the child and delete it has 2 children set the node to the child and delete it. the node to th middle will then take its place,"Find the node, then replace it with the leftmost node from its right subtreeor the rightmost node from its left subtree.",3.0,0,0.90901780128479,0.47140452079103173,0.6061998605728149,0.28160256147384644
2414,How many steps does it take to search a node in a binary search tree?,Lognwhere n is the number of nodes.,The height of the tree.,5.0,1,0.8141711354255676,0.0,0.4649668037891388,0.18622341752052307
2415,How many steps does it take to search a node in a binary search tree?,lognsteps,The height of the tree.,5.0,1,0.0,0.0,0.49565964937210083,0.2265830636024475
2416,How many steps does it take to search a node in a binary search tree?,The number of levels and the height of the tree,The height of the tree.,5.0,1,0.9433619379997253,0.7071067811865476,0.9449588656425476,0.7667113542556763
2417,How many steps does it take to search a node in a binary search tree?,It is the same as the height of the tree.,The height of the tree.,5.0,1,0.9549265503883362,1.0000000000000002,0.7506287097930908,0.5732253789901733
2418,How many steps does it take to search a node in a binary search tree?,"Given n elements, it would take n divided by 2 steps to find the search criteria.",The height of the tree.,1.5,0,0.7718247175216675,0.0,0.21243274211883545,0.036360885947942734
2419,How many steps does it take to search a node in a binary search tree?,log n,The height of the tree.,5.0,1,0.43547993898391724,0.0,0.4386027753353119,0.2594698667526245
2420,How many steps does it take to search a node in a binary search tree?,Depends on the location of the node you are looking for. If it is the root it is one step. else If it is smaller than the current you are on node you go to the left. If it is larger than the current node you are on go to the right.,The height of the tree.,2.0,0,0.8296375870704651,0.0,0.3115895390510559,0.11743118613958359
2421,How many steps does it take to search a node in a binary search tree?,2 to the power of n where n is the of levels the binary tree has,The height of the tree.,2.0,0,0.8778047561645508,0.5,0.3667176365852356,0.37023019790649414
2422,How many steps does it take to search a node in a binary search tree?,The number of steps to search a node is the function n minus 1.,The height of the tree.,3.5,0,0.8296146988868713,0.0,0.2918490767478943,0.08366332948207855
2423,How many steps does it take to search a node in a binary search tree?,"It would take n divided by 2 elements, given n.",The height of the tree.,1.5,0,0.7109012603759766,0.0,0.26698824763298035,0.021763309836387634
2424,How many steps does it take to search a node in a binary search tree?,logn,The height of the tree.,5.0,1,-0.012890893965959549,0.0,0.4601445198059082,0.22654178738594055
2425,How many steps does it take to search a node in a binary search tree?,Olog n,The height of the tree.,5.0,1,0.3020457625389099,0.0,0.4647715091705322,0.17660611867904663
2426,How many steps does it take to search a node in a binary search tree?,OLogn,The height of the tree.,5.0,1,0.0,0.0,0.45098233222961426,0.1844322830438614
2427,How many steps does it take to search a node in a binary search tree?,"If the binary search tree is constructed efficiently, best case scenario is Olog ntime. Where n is the number of items in the tree. If the binary search tree is constructed poorly, with for instance the root of the tree being 1, and progressing downwards and to the right its children are each more than the last: you have a one-way linear linked list. That worse case scenario would be a full traversal at Ontime. Where n is the number of items in the tree.",The height of the tree.,5.0,1,0.8667557239532471,0.5933908290969268,0.24255231022834778,0.34781408309936523
2428,How many steps does it take to search a node in a binary search tree?,"N, n being the number of nodes.",The height of the tree.,4.0,1,0.767177164554596,0.0,0.529711902141571,0.1346079409122467
2429,How many steps does it take to search a node in a binary search tree?,"depending on the way that the tree is ordered, it could be anywhere between lognand N steps.",The height of the tree.,5.0,1,0.843936562538147,0.4082482904638631,0.5980101227760315,0.4057770371437073
2430,How many steps does it take to search a node in a binary search tree?,logn,The height of the tree.,5.0,1,-0.012890893965959549,0.0,0.4601445198059082,0.22654178738594055
2431,How many steps does it take to search a node in a binary search tree?,"worst case scenario equals the number of levels of the tree, ie: the node at the farthest position from the root node. best case equals 1 step if its the root node.",The height of the tree.,5.0,1,0.8684552907943726,0.18257418583505539,0.3406563699245453,0.5249135494232178
2432,How many steps does it take to search a node in a binary search tree?,3 steps at most. There are 3 cases.,The height of the tree.,1.5,0,0.726318895816803,0.0,0.38103678822517395,0.24909397959709167
2433,How many steps does it take to search a node in a binary search tree?,lognwhere n equals the total number of nodes in the tree.,The height of the tree.,5.0,1,0.8655767440795898,0.4082482904638631,0.6048121452331543,0.32065507769584656
2434,How many steps does it take to search a node in a binary search tree?,the same number of steps as the number of levels or generations in the tree,The height of the tree.,5.0,1,0.8802913427352905,0.3535533905932738,0.678904116153717,0.4980854392051697
2435,How many steps does it take to search a node in a binary search tree?,to find a node in a binary search tree takes at most the same number of steps as there are levels of the tree.,The height of the tree.,5.0,1,0.8763903379440308,0.6030226891555273,0.3672548830509186,0.3149520754814148
2436,How many steps does it take to search a node in a binary search tree?,"three steps visit the root node, then go to right subtree, after visiting right subtree visit left subtree",The height of the tree.,2.5,0,0.7238693237304688,0.0,0.2913323640823364,0.1866147816181183
2437,How many steps does it take to search a node in a binary search tree?,log n,The height of the tree.,5.0,1,0.43547993898391724,0.0,0.4386027753353119,0.2594698667526245
2438,How many steps does it take to search a node in a binary search tree?,minus 1 divided by 2,The height of the tree.,1.5,0,0.4712551534175873,0.0,0.27472084760665894,0.1109471321105957
2439,How many steps does it take to search a node in a binary search tree?,2n-1,The height of the tree.,2.5,0,0.18690308928489685,0.0,0.38237372040748596,0.1568809300661087
2440,How many steps does it take to search a node in a binary search tree?,"it takes at most h steps, where h is the height of the tree.",The height of the tree.,5.0,1,0.9019775390625,0.7071067811865476,0.7077294588088989,0.6939254999160767
2441,How many steps does it take to search a node in a binary search tree?,it depends on the install search tree then from there for whatever the case is the it repeats it back along the case of the primary node,The height of the tree.,1.5,0,0.848135769367218,0.30151134457776363,0.2829938530921936,0.28780847787857056
